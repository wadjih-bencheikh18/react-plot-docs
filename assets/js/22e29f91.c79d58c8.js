"use strict";(self.webpackChunkdocs_react_plot=self.webpackChunkdocs_react_plot||[]).push([[131],{2216:function(e,t,n){n.r(t),n.d(t,{assets:function(){return f},contentTitle:function(){return b},default:function(){return v},frontMatter:function(){return h},metadata:function(){return g},toc:function(){return N}});var l=n(7462),r=n(3366),o=n(7294),i=n(3905),a=n(1465),s=n(1736),p=n(1119),m="import React from 'react';\nimport { Axis, Heading, Legend, LineSeries, Plot } from 'react-plot';\n\nexport default function DrainVoltage() {\n  return (\n    <Plot\n      width={300}\n      height={300}\n      seriesViewportStyle={{\n        stroke: 'black',\n        strokeWidth: 1,\n      }}\n    >\n      <LineSeries\n        data={[\n          { x: 1, y: 1 },\n          { x: 2, y: 2 },\n          { x: 3, y: 3 },\n          { x: 4, y: 2 },\n          { x: 5, y: 1 },\n        ]}\n        label=\"Line Serie\"\n      />\n      <Axis position=\"bottom\" />\n      <Axis position=\"left\" />\n    </Plot>\n  );\n}\n",d=function(){return o.createElement(a.XN,{width:300,height:300,seriesViewportStyle:{stroke:"black",strokeWidth:1}},o.createElement(a.eh,{data:[{x:1,y:1},{x:2,y:2},{x:3,y:3},{x:4,y:2},{x:5,y:1}],label:"Line Serie"}),o.createElement(a.RD,{position:"bottom"}),o.createElement(a.RD,{position:"left"}))};function c(e){var t=(0,o.useState)(!1),n=t[0],l=t[1];return o.createElement(o.Fragment,null,o.createElement("div",{className:"demo-example-wrapper"},o.createElement(d,null),o.createElement("div",{className:"demo-example-buttons"},o.createElement("button",{onClick:function(){return l((function(e){return!e}))},type:"button",style:{backgroundColor:n?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:o.createElement(p.Z,{name:"drain-voltage",source:m,dependencies:{react:"^17.0.2","react-plot":"^0.17.1"}},(function(){return o.createElement("button",{type:"submit"},"Open sandbox")})))),n&&o.createElement(s.Z,{className:"language-jsx"},m))}var u='import React from \'react\';\nimport { Axis, LineSeries, Plot } from \'react-plot\';\n\nexport default function DrainVoltage() {\n  const Explication = (\n    <div>\n      <text\n        style={{\n          marginTop: \'10px\',\n          display: \'block\',\n          color: \'green\',\n        }}\n      >\n        Plot viewport\n      </text>\n      <text\n        style={{\n          position: \'absolute\',\n          top: \'80px\',\n          left: \'50px\',\n          color: \'blue\',\n        }}\n      >\n        Series viewport\n      </text>\n      <svg\n        style={{\n          position: \'absolute\',\n          left: \'0\',\n          top: \'0\',\n        }}\n      >\n        <text x="120" y="15" fill="brown">\n          Width\n        </text>\n        <line\n          x1={0}\n          x2={300}\n          y1={24}\n          y2={24}\n          stroke="brown"\n          stroke-width="4"\n        ></line>\n        <line\n          x1={0}\n          x2={0}\n          y1={18}\n          y2={30}\n          stroke="brown"\n          stroke-width="4"\n        ></line>\n        <line\n          x1={300}\n          x2={300}\n          y1={18}\n          y2={30}\n          stroke="brown"\n          stroke-width="4"\n        ></line>\n      </svg>\n      <svg\n        style={{\n          position: \'absolute\',\n          left: \'300\',\n          top: \'56\',\n        }}\n        height={300}\n      >\n        <text\n          x="110"\n          y="160"\n          transform="rotate(90,100,100)"\n          dominant-baseline="central"\n          fill="brown"\n        >\n          Height\n        </text>\n        <line\n          x1={10}\n          x2={10}\n          y1={0}\n          y2="300"\n          stroke="brown"\n          stroke-width="4"\n        ></line>\n        <line\n          x1={5}\n          x2={15}\n          y1={0}\n          y2={0}\n          stroke="brown"\n          stroke-width="4"\n        ></line>\n        <line\n          x1={5}\n          x2={15}\n          y1={300}\n          y2={300}\n          stroke="brown"\n          stroke-width="4"\n        ></line>\n      </svg>\n      <svg\n        style={{\n          position: \'absolute\',\n          top: \'56px\',\n          left: \'200px\',\n        }}\n      >\n        <line\n          x1={4}\n          x2={4}\n          y1={0}\n          y2={50}\n          stroke="black"\n          stroke-width="4"\n        ></line>\n        <text x="9" y="28">\n          Margin\n        </text>\n        <line\n          x1={0}\n          x2={8}\n          y1={2}\n          y2={2}\n          stroke-width="2"\n          stroke="black"\n        ></line>\n        <line\n          x1={0}\n          x2={8}\n          y1={48}\n          y2={48}\n          stroke-width="2"\n          stroke="black"\n        ></line>\n      </svg>\n    </div>\n  );\n  return (\n    <div\n      style={{ position: \'relative\', paddingTop: \'20px\', paddingRight: \'20px\' }}\n    >\n      {Explication}\n      <Plot\n        width={300}\n        height={300}\n        margin={{ top: 50, right: 25, left: 20 }}\n        seriesViewportStyle={{\n          stroke: \'blue\',\n          strokeWidth: 3,\n        }}\n        plotViewportStyle={{\n          stroke: \'green\',\n          strokeWidth: 3,\n        }}\n      >\n        <LineSeries\n          data={[\n            { x: 1, y: 1 },\n            { x: 2, y: 2 },\n            { x: 3, y: 3 },\n            { x: 4, y: 2 },\n            { x: 5, y: 1 },\n          ]}\n          label="Line Serie"\n        />\n        <Axis position="bottom" />\n        <Axis position="left" />\n      </Plot>\n    </div>\n  );\n}\n',k=function(){var e=o.createElement("div",null,o.createElement("text",{style:{marginTop:"10px",display:"block",color:"green"}},"Plot viewport"),o.createElement("text",{style:{position:"absolute",top:"80px",left:"50px",color:"blue"}},"Series viewport"),o.createElement("svg",{style:{position:"absolute",left:"0",top:"0"}},o.createElement("text",{x:"120",y:"15",fill:"brown"},"Width"),o.createElement("line",{x1:0,x2:300,y1:24,y2:24,stroke:"brown","stroke-width":"4"}),o.createElement("line",{x1:0,x2:0,y1:18,y2:30,stroke:"brown","stroke-width":"4"}),o.createElement("line",{x1:300,x2:300,y1:18,y2:30,stroke:"brown","stroke-width":"4"})),o.createElement("svg",{style:{position:"absolute",left:"300",top:"56"},height:300},o.createElement("text",{x:"110",y:"160",transform:"rotate(90,100,100)","dominant-baseline":"central",fill:"brown"},"Height"),o.createElement("line",{x1:10,x2:10,y1:0,y2:"300",stroke:"brown","stroke-width":"4"}),o.createElement("line",{x1:5,x2:15,y1:0,y2:0,stroke:"brown","stroke-width":"4"}),o.createElement("line",{x1:5,x2:15,y1:300,y2:300,stroke:"brown","stroke-width":"4"})),o.createElement("svg",{style:{position:"absolute",top:"56px",left:"200px"}},o.createElement("line",{x1:4,x2:4,y1:0,y2:50,stroke:"black","stroke-width":"4"}),o.createElement("text",{x:"9",y:"28"},"Margin"),o.createElement("line",{x1:0,x2:8,y1:2,y2:2,"stroke-width":"2",stroke:"black"}),o.createElement("line",{x1:0,x2:8,y1:48,y2:48,"stroke-width":"2",stroke:"black"})));return o.createElement("div",{style:{position:"relative",paddingTop:"20px",paddingRight:"20px"}},e,o.createElement(a.XN,{width:300,height:300,margin:{top:50,right:25,left:20},seriesViewportStyle:{stroke:"blue",strokeWidth:3},plotViewportStyle:{stroke:"green",strokeWidth:3}},o.createElement(a.eh,{data:[{x:1,y:1},{x:2,y:2},{x:3,y:3},{x:4,y:2},{x:5,y:1}],label:"Line Serie"}),o.createElement(a.RD,{position:"bottom"}),o.createElement(a.RD,{position:"left"})))};function x(e){var t=(0,o.useState)(!1),n=t[0],l=t[1];return o.createElement(o.Fragment,null,o.createElement("div",{className:"demo-example-wrapper"},o.createElement(k,null),o.createElement("div",{className:"demo-example-buttons"},o.createElement("button",{onClick:function(){return l((function(e){return!e}))},type:"button",style:{backgroundColor:n?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:o.createElement(p.Z,{name:"drain-voltage",source:u,dependencies:{react:"^17.0.2","react-plot":"^0.17.1"}},(function(){return o.createElement("button",{type:"submit"},"Open sandbox")})))),n&&o.createElement(s.Z,{className:"language-jsx"},u))}var y=["components"],h={},b="Plot",g={unversionedId:"plot",id:"plot",title:"Plot",description:"Plot is the container of all other component, and the main component in react-plot that create the plot svg",source:"@site/docs/070_plot.md",sourceDirName:".",slug:"/plot",permalink:"/plot",editUrl:"https://github.com/zakodium-oss/react-plot-docs/tree/main/docs/070_plot.md",tags:[],version:"current",sidebarPosition:70,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Basics",permalink:"/gettingStarted/basics"},next:{title:"Introduction",permalink:"/series/intro"}},f={},N=[{value:"Allowed children",id:"allowed-children",level:2},{value:"Props",id:"props",level:2},{value:"Mandatory",id:"mandatory",level:3},{value:"Optional",id:"optional",level:3}],w={toc:N};function v(e){var t=e.components,n=(0,r.Z)(e,y);return(0,i.kt)("wrapper",(0,l.Z)({},w,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"plot"},"Plot"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Plot")," is the container of all other component, and the main component in ",(0,i.kt)("inlineCode",{parentName:"p"},"react-plot")," that create the plot svg"),(0,i.kt)(c,{mdxType:"PlotDemo"}),(0,i.kt)("h2",{id:"allowed-children"},"Allowed children"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Plot")," children must be one of the following components :"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/series/intro"},"Series")," components"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/axes/intro"},"Axes")," components"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/annotations/intro"},(0,i.kt)("inlineCode",{parentName:"a"},"Annotations"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/illusrations/heading"},(0,i.kt)("inlineCode",{parentName:"a"},"Heading"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/illusrations/legend"},(0,i.kt)("inlineCode",{parentName:"a"},"Legend")))),(0,i.kt)("h2",{id:"props"},"Props"),(0,i.kt)(x,{mdxType:"PlotMargin"}),(0,i.kt)("h3",{id:"mandatory"},"Mandatory"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"width:")," Width of the SVG in pixels",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),(0,i.kt)("br",null))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"height:")," Height of the SVG in pixels",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),(0,i.kt)("br",null)))),(0,i.kt)("h3",{id:"optional"},"Optional"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"colorScheme:")," Color scheme used to pick colors for the series",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"li"},"Iterable<string>"),(0,i.kt)("br",null),'\ndefault: "schemeSet1" from "d3-scale-chromatic"'),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"margin:")," Color scheme used to pick colors for the series",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"li"},"{top?:number, bottom?:number, left?:number, right?:number}"),(0,i.kt)("br",null),"\ndefault: ",(0,i.kt)("inlineCode",{parentName:"li"},"{}")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"svgStyle:")," Style applied to the SVG element",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"li"},"CSSProperties"),(0,i.kt)("br",null),"\ndefault: ",(0,i.kt)("inlineCode",{parentName:"li"},"{}")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"svgId:")," Id of the SVG element",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),(0,i.kt)("br",null),"\ndefault: generated automaticlly"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"svgClassName:")," Class name of the SVG element",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),(0,i.kt)("br",null),"\ndefault: ",(0,i.kt)("inlineCode",{parentName:"li"},'""')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"plotViewportStyle:")," Style applied to the rectangle around the entire plot",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"li"},"CSSProperties"),(0,i.kt)("br",null),"\ndefault: ",(0,i.kt)("inlineCode",{parentName:"li"},"{}")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"seriesViewportStyle:")," Style applied to the rectangle around the series viewport",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"li"},"CSSProperties"),(0,i.kt)("br",null),"\ndefault: ",(0,i.kt)("inlineCode",{parentName:"li"},"{}")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"controllerId:")," Id of the parent PlotController that will control this plot",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),(0,i.kt)("br",null),"\ndefault: ",(0,i.kt)("inlineCode",{parentName:"li"},'""'))))}v.isMDXComponent=!0}}]);