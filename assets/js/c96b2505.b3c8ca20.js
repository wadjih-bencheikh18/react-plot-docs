"use strict";(self.webpackChunkdocs_react_plot=self.webpackChunkdocs_react_plot||[]).push([[181],{900:function(e,n,t){t.r(n),t.d(n,{assets:function(){return F},contentTitle:function(){return L},default:function(){return M},frontMatter:function(){return D},metadata:function(){return U},toc:function(){return W}});var o=t(7462),a=t(3366),l=t(7294),r=t(3905),i=t(1465),s=t(1736),u=t(1119);function m(){var e=(0,i.NU)();return l.createElement(i.XN,{width:300,height:300},l.createElement(i.X6,{title:"Draw a rectangle"}),l.createElement(i.eh,{data:[{x:1,y:1},{x:2,y:2},{x:3,y:3},{x:4,y:2},{x:5,y:1}]}),l.createElement(i.uN,null,e.annotations))}var c="import React from 'react';\n\nimport {\n  Annotations,\n  Heading,\n  LineSeries,\n  Plot,\n  PlotController,\n  useRectangularZoom,\n} from 'react-plot';\n\nfunction ZoomablePlot() {\n  const zoom = useRectangularZoom();\n  return (\n    <Plot width={300} height={300}>\n      <Heading title=\"Draw a rectangle\" />\n      <LineSeries\n        data={[\n          { x: 1, y: 1 },\n          { x: 2, y: 2 },\n          { x: 3, y: 3 },\n          { x: 4, y: 2 },\n          { x: 5, y: 1 },\n        ]}\n      />\n      <Annotations>{zoom.annotations}</Annotations>\n    </Plot>\n  );\n}\n\nexport default function UseRectangularZoom() {\n  return (\n    <PlotController>\n      <ZoomablePlot />\n    </PlotController>\n  );\n}\n",p=function(){return l.createElement(i.aE,null,l.createElement(m,null))};function d(e){var n=(0,l.useState)(!1),t=n[0],o=n[1];return l.createElement(l.Fragment,null,l.createElement("div",{className:"demo-example-wrapper"},l.createElement(p,null),l.createElement("div",{className:"demo-example-buttons"},l.createElement("button",{onClick:function(){return o((function(e){return!e}))},type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:l.createElement(u.Z,{name:"use-rectangular-zoom",source:c,dependencies:{react:"^17.0.2","react-plot":"^0.17.1"}},(function(){return l.createElement("button",{type:"submit"},"Open sandbox")})))),t&&l.createElement(s.Z,{className:"language-jsx"},c))}function k(){var e=(0,i.NU)();return l.createElement(i.XN,{width:300,height:300},l.createElement(i.X6,{title:"Draw a rectangle"}),l.createElement(i.eh,{data:[{x:1,y:1},{x:2,y:2},{x:3,y:3},{x:4,y:2},{x:5,y:1}]}),l.createElement(i.uN,null,e.annotations))}var h="import React from 'react';\nimport {\n  Annotations,\n  Heading,\n  LineSeries,\n  Plot,\n  PlotController,\n  useRectangularZoom,\n} from 'react-plot';\n\nfunction ZoomablePlot() {\n  const zoom = useRectangularZoom();\n  return (\n    <Plot width={300} height={300}>\n      <Heading title=\"Draw a rectangle\" />\n      <LineSeries\n        data={[\n          { x: 1, y: 1 },\n          { x: 2, y: 2 },\n          { x: 3, y: 3 },\n          { x: 4, y: 2 },\n          { x: 5, y: 1 },\n        ]}\n      />\n      <Annotations>{zoom.annotations}</Annotations>\n    </Plot>\n  );\n}\n\nexport default function MultiRectangularZoom() {\n  return (\n    <PlotController>\n      <ZoomablePlot />\n      <ZoomablePlot />\n    </PlotController>\n  );\n}\n",x=function(){return l.createElement(i.aE,null,l.createElement(k,null),l.createElement(k,null))};function f(e){var n=(0,l.useState)(!1),t=n[0],o=n[1];return l.createElement(l.Fragment,null,l.createElement("div",{className:"demo-example-wrapper"},l.createElement(x,null),l.createElement("div",{className:"demo-example-buttons"},l.createElement("button",{onClick:function(){return o((function(e){return!e}))},type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:l.createElement(u.Z,{name:"multi-rectangular-zoom",source:h,dependencies:{react:"^17.0.2","react-plot":"^0.17.1"}},(function(){return l.createElement("button",{type:"submit"},"Open sandbox")})))),t&&l.createElement(s.Z,{className:"language-jsx"},h))}function N(){var e=(0,i.AO)();return l.createElement(i.XN,{width:300,height:300},l.createElement(i.X6,{title:"Draw a rectangle"}),l.createElement(i.eh,{data:[{x:1,y:1},{x:2,y:2},{x:3,y:3},{x:4,y:2},{x:5,y:1}]}),l.createElement(i.uN,null,e.annotations))}var g="import React from 'react';\nimport {\n  Annotations,\n  Heading,\n  LineSeries,\n  Plot,\n  PlotController,\n  useAxisZoom,\n} from 'react-plot';\nfunction ZoomablePlot() {\n  const zoom = useAxisZoom();\n  return (\n    <Plot width={300} height={300}>\n      <Heading title=\"Draw a rectangle\" />\n      <LineSeries\n        data={[\n          { x: 1, y: 1 },\n          { x: 2, y: 2 },\n          { x: 3, y: 3 },\n          { x: 4, y: 2 },\n          { x: 5, y: 1 },\n        ]}\n      />\n      <Annotations>{zoom.annotations}</Annotations>\n    </Plot>\n  );\n}\nexport default function UseAxisZoom() {\n  return (\n    <PlotController>\n      <ZoomablePlot />\n    </PlotController>\n  );\n}\n",y=function(){return l.createElement(i.aE,null,l.createElement(N,null))};function C(e){var n=(0,l.useState)(!1),t=n[0],o=n[1];return l.createElement(l.Fragment,null,l.createElement("div",{className:"demo-example-wrapper"},l.createElement(y,null),l.createElement("div",{className:"demo-example-buttons"},l.createElement("button",{onClick:function(){return o((function(e){return!e}))},type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:l.createElement(u.Z,{name:"use-axis-zoom",source:g,dependencies:{react:"^17.0.2","react-plot":"^0.17.1"}},(function(){return l.createElement("button",{type:"submit"},"Open sandbox")})))),t&&l.createElement(s.Z,{className:"language-jsx"},g))}function b(){return(0,i.l1)(),l.createElement(i.XN,{width:300,height:300},l.createElement(i.X6,{title:"Scroll inside the plot"}),l.createElement(i.eh,{data:[{x:1,y:1},{x:2,y:2},{x:3,y:3},{x:4,y:2},{x:5,y:1}]}))}var E="import React from 'react';\nimport {\n  Annotations,\n  Heading,\n  LineSeries,\n  Plot,\n  PlotController,\n  useAxisWheelZoom,\n  usePan,\n  useRectangularZoom,\n} from 'react-plot';\n\nfunction WheelPlot() {\n  useAxisWheelZoom();\n  return (\n    <Plot width={300} height={300}>\n      <Heading title=\"Scroll inside the plot\" />\n      <LineSeries\n        data={[\n          { x: 1, y: 1 },\n          { x: 2, y: 2 },\n          { x: 3, y: 3 },\n          { x: 4, y: 2 },\n          { x: 5, y: 1 },\n        ]}\n      />\n    </Plot>\n  );\n}\n\nexport default function UseAxisWheelZoom() {\n  return (\n    <PlotController>\n      <WheelPlot />\n    </PlotController>\n  );\n}\n",P=function(){return l.createElement(i.aE,null,l.createElement(b,null))};function v(e){var n=(0,l.useState)(!1),t=n[0],o=n[1];return l.createElement(l.Fragment,null,l.createElement("div",{className:"demo-example-wrapper"},l.createElement(P,null),l.createElement("div",{className:"demo-example-buttons"},l.createElement("button",{onClick:function(){return o((function(e){return!e}))},type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:l.createElement(u.Z,{name:"use-axis-wheel-zoom",source:E,dependencies:{react:"^17.0.2","react-plot":"^0.17.1"}},(function(){return l.createElement("button",{type:"submit"},"Open sandbox")})))),t&&l.createElement(s.Z,{className:"language-jsx"},E))}function w(){return(0,i.od)(),l.createElement(i.XN,{width:300,height:300},l.createElement(i.X6,{title:"Press SHIFT & Grab and drag"}),l.createElement(i.eh,{data:[{x:1,y:1},{x:2,y:2},{x:3,y:3},{x:4,y:2},{x:5,y:1}]}))}var Z="import React from 'react';\nimport {\n  Annotations,\n  Heading,\n  LineSeries,\n  Plot,\n  PlotController,\n  usePan,\n  useRectangularZoom,\n} from 'react-plot';\n\nfunction PanPlot() {\n  usePan();\n  return (\n    <Plot width={300} height={300}>\n      <Heading title=\"Press SHIFT & Grab and drag\" />\n      <LineSeries\n        data={[\n          { x: 1, y: 1 },\n          { x: 2, y: 2 },\n          { x: 3, y: 3 },\n          { x: 4, y: 2 },\n          { x: 5, y: 1 },\n        ]}\n      />\n    </Plot>\n  );\n}\n\nexport default function UsePan() {\n  return (\n    <PlotController>\n      <PanPlot />\n    </PlotController>\n  );\n}\n",z=function(){return l.createElement(i.aE,null,l.createElement(w,null))};function A(e){var n=(0,l.useState)(!1),t=n[0],o=n[1];return l.createElement(l.Fragment,null,l.createElement("div",{className:"demo-example-wrapper"},l.createElement(z,null),l.createElement("div",{className:"demo-example-buttons"},l.createElement("button",{onClick:function(){return o((function(e){return!e}))},type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:l.createElement(u.Z,{name:"use-pan",source:Z,dependencies:{react:"^17.0.2","react-plot":"^0.17.1"}},(function(){return l.createElement("button",{type:"submit"},"Open sandbox")})))),t&&l.createElement(s.Z,{className:"language-jsx"},Z))}function H(){var e=(0,i.GP)();return l.createElement(i.XN,{width:300,height:300},l.createElement(i.X6,{title:"Move the mouse inside"}),l.createElement(i.eh,{data:[{x:1,y:1},{x:2,y:2},{x:3,y:3},{x:4,y:2},{x:5,y:1}]}),l.createElement(i.uN,null,e.annotations))}var S="import React from 'react';\nimport {\n  Annotations,\n  Heading,\n  LineSeries,\n  Plot,\n  PlotController,\n  useCrossHair,\n} from 'react-plot';\n\nfunction CrossHairPlot() {\n  const crossHair = useCrossHair();\n  return (\n    <Plot width={300} height={300}>\n      <Heading title=\"Move the mouse inside\" />\n      <LineSeries\n        data={[\n          { x: 1, y: 1 },\n          { x: 2, y: 2 },\n          { x: 3, y: 3 },\n          { x: 4, y: 2 },\n          { x: 5, y: 1 },\n        ]}\n      />\n      <Annotations>{crossHair.annotations}</Annotations>\n    </Plot>\n  );\n}\n\nexport default function UseCrossHair() {\n  return (\n    <PlotController>\n      <CrossHairPlot />\n    </PlotController>\n  );\n}\n",T=function(){return l.createElement(i.aE,null,l.createElement(H,null))};function R(e){var n=(0,l.useState)(!1),t=n[0],o=n[1];return l.createElement(l.Fragment,null,l.createElement("div",{className:"demo-example-wrapper"},l.createElement(T,null),l.createElement("div",{className:"demo-example-buttons"},l.createElement("button",{onClick:function(){return o((function(e){return!e}))},type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:l.createElement(u.Z,{name:"use-cross-hair",source:S,dependencies:{react:"^17.0.2","react-plot":"^0.17.1"}},(function(){return l.createElement("button",{type:"submit"},"Open sandbox")})))),t&&l.createElement(s.Z,{className:"language-jsx"},S))}var X=["components"],D={},L="Fonctional",U={unversionedId:"hooks/functional",id:"hooks/functional",title:"Fonctional",description:"These hooks allows you to do a specific precodeed functionalities",source:"@site/docs/400_hooks/300_functional.md",sourceDirName:"400_hooks",slug:"/hooks/functional",permalink:"/hooks/functional",editUrl:"https://github.com/zakodium-oss/react-plot-docs/tree/main/docs/400_hooks/300_functional.md",tags:[],version:"current",sidebarPosition:300,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Draw",permalink:"/hooks/draw"},next:{title:"Introduction",permalink:"/illusrations/intro"}},F={},W=[{value:"useAxisZoom",id:"useaxiszoom",level:2},{value:"useRectangularZoom",id:"userectangularzoom",level:2},{value:"useAxisWheelZoom",id:"useaxiswheelzoom",level:2},{value:"useCrossHair",id:"usecrosshair",level:2},{value:"usePan",id:"usepan",level:2}],_={toc:W};function M(e){var n=e.components,t=(0,a.Z)(e,X);return(0,r.kt)("wrapper",(0,o.Z)({},_,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"fonctional"},"Fonctional"),(0,r.kt)("p",null,"These hooks allows you to do a specific precodeed functionalities"),(0,r.kt)("p",null,"currently we support the following functional hooks:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"/hooks/functional#useaxiszoom"},"useAxisZoom"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"/hooks/functional#userectangularzoom"},"useRectangularZoom"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"/hooks/functional#useaxiswheelzoom"},"useAxisWheelZoom"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"/hooks/functional#usecrosshair"},"useCrossHair"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"/hooks/functional#usepan"},"usePan")))),(0,r.kt)("h2",{id:"useaxiszoom"},"useAxisZoom"),(0,r.kt)("p",null,"This hook allows to zoom in a plot along the specified axis (default to horitzontal) while drawing a rectangle. There are 3 steps in order ot implement the zoom:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"wrap your plot component in ",(0,r.kt)("inlineCode",{parentName:"li"},"<PlotController>")),(0,r.kt)("li",{parentName:"ul"},"add the hook: ",(0,r.kt)("inlineCode",{parentName:"li"},"const zoom = useAxisZoom({direction:'horizontal'});")),(0,r.kt)("li",{parentName:"ul"},"add the ",(0,r.kt)("inlineCode",{parentName:"li"},"zoom.annotations")," in order to draw the zoom rectangle: ",(0,r.kt)("inlineCode",{parentName:"li"},"<Annotations>{zoom.annotations}</Annotations>"))),(0,r.kt)("p",null,"This hook also implements the ",(0,r.kt)("inlineCode",{parentName:"p"},"double click")," detection to reset the zoom to its original value."),(0,r.kt)(C,{mdxType:"UseAxisZoom"}),(0,r.kt)("h2",{id:"userectangularzoom"},"useRectangularZoom"),(0,r.kt)("p",null,"This hook allows directly to manage the zoom in a plot. There are 3 steps in order ot implement the zoom:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"wrap your plot component in ",(0,r.kt)("inlineCode",{parentName:"li"},"<PlotController>")),(0,r.kt)("li",{parentName:"ul"},"add the hook: ",(0,r.kt)("inlineCode",{parentName:"li"},"const zoom = useRectangularZoom();")),(0,r.kt)("li",{parentName:"ul"},"add the ",(0,r.kt)("inlineCode",{parentName:"li"},"zoom.annotations")," in order to draw the zoom rectangle: ",(0,r.kt)("inlineCode",{parentName:"li"},"<Annotations>{zoom.annotations}</Annotations>"))),(0,r.kt)("p",null,"This hook also implements the ",(0,r.kt)("inlineCode",{parentName:"p"},"double click")," detection to reset the zoom to its original value."),(0,r.kt)(d,{mdxType:"UseRectangularZoomDemo"}),(0,r.kt)("p",null,"If a ",(0,r.kt)("inlineCode",{parentName:"p"},"PlotController")," contains many ",(0,r.kt)("inlineCode",{parentName:"p"},"Plot")," the change will be applied on all of them."),(0,r.kt)(f,{mdxType:"MultiRectangularZoom"}),(0,r.kt)("h2",{id:"useaxiswheelzoom"},"useAxisWheelZoom"),(0,r.kt)("p",null,"This hook allows to zoom in a plot along the specified axis (default to vertical) using mouse wheel."),(0,r.kt)("p",null,"The hook may be customized with the following props:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"center")," : it define zoom center, used to choose a specific point or the mouse cursor ",(0,r.kt)("inlineCode",{parentName:"p"},'"pointer"')," as zoom center",(0,r.kt)("br",null),"\ntype : ",(0,r.kt)("inlineCode",{parentName:"p"},'number | "pointer"'),(0,r.kt)("br",null),"\ndefault : ",(0,r.kt)("inlineCode",{parentName:"p"},"0"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"factor")," : control zoom speed",(0,r.kt)("br",null),"\ntype : ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),(0,r.kt)("br",null),"\ndefault : ",(0,r.kt)("inlineCode",{parentName:"p"},'"0"'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"invert")," : invert wheel zooming (default wheel up will zoom in our plot)",(0,r.kt)("br",null),"\ntype : ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),(0,r.kt)("br",null),"\ndefault : ",(0,r.kt)("inlineCode",{parentName:"p"},"false")))),(0,r.kt)("p",null,"There are 2 steps in order ot implement the wheel zoom:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"wrap your plot component in ",(0,r.kt)("inlineCode",{parentName:"li"},"<PlotController>")),(0,r.kt)("li",{parentName:"ul"},"add the hook: ",(0,r.kt)("inlineCode",{parentName:"li"},"useAxisWheelZoom({direction:'vertical', center:0, factor:1, invert:false})"))),(0,r.kt)("p",null,"This hook also implements the ",(0,r.kt)("inlineCode",{parentName:"p"},"double click")," detection to reset the zoom to its original value."),(0,r.kt)(v,{mdxType:"UseAxisWheelZoom"}),(0,r.kt)("h2",{id:"usecrosshair"},"useCrossHair"),(0,r.kt)("p",null,"This hook adds crossHair to the plot .\nThe hook may be customized with the following props:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"color")," : crossHair color",(0,r.kt)("br",null),"\ntype : ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),(0,r.kt)("br",null),"\ndefault : ",(0,r.kt)("inlineCode",{parentName:"p"},'"black"'))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"lineStyle")," : add style to crossHair line",(0,r.kt)("br",null),"\ntype : ",(0,r.kt)("inlineCode",{parentName:"p"},"CSSProperties"),(0,r.kt)("br",null),"\ndefault : ",(0,r.kt)("inlineCode",{parentName:"p"},"{}"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"textStyle")," : add style to crossHair text",(0,r.kt)("br",null),"\ntype : ",(0,r.kt)("inlineCode",{parentName:"p"},"CSSProperties"),(0,r.kt)("br",null),"\ndefault : ",(0,r.kt)("inlineCode",{parentName:"p"},"{}"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"textTransform")," : trasform crossHair text",(0,r.kt)("br",null),"\ntype : ",(0,r.kt)("inlineCode",{parentName:"p"},"string"),(0,r.kt)("br",null),"\ndefault : ",(0,r.kt)("inlineCode",{parentName:"p"},'""')))),(0,r.kt)("p",null,"There are 3 steps in order ot implement the crossHair:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"wrap your plot component in ",(0,r.kt)("inlineCode",{parentName:"li"},"<PlotController>")),(0,r.kt)("li",{parentName:"ul"},"add the hook: ",(0,r.kt)("inlineCode",{parentName:"li"},"const crossHair = useCrossHair();")),(0,r.kt)("li",{parentName:"ul"},"add the ",(0,r.kt)("inlineCode",{parentName:"li"},"crossHair.annotations")," in order to draw CrossHair: ",(0,r.kt)("inlineCode",{parentName:"li"},"<Annotations>{crossHair.annotations}</Annotations>"))),(0,r.kt)(R,{mdxType:"UseCrossHairDemo"}),(0,r.kt)("h2",{id:"usepan"},"usePan"),(0,r.kt)("p",null,"This hook adds an interactive pan to the plot to move in all direction while holding ",(0,r.kt)("inlineCode",{parentName:"p"},"SHIFT"),". There are 2 steps in order ot implement the pan:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"wrap your plot component in ",(0,r.kt)("inlineCode",{parentName:"li"},"<PlotController>")),(0,r.kt)("li",{parentName:"ul"},"add the hook: ",(0,r.kt)("inlineCode",{parentName:"li"},"usePan();"))),(0,r.kt)("p",null,"This hook also implements the ",(0,r.kt)("inlineCode",{parentName:"p"},"double click")," detection to reset the zoom to its original value."),(0,r.kt)(A,{mdxType:"UsePanDemo"}))}M.isMDXComponent=!0}}]);