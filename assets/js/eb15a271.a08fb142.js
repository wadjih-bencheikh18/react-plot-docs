"use strict";(self.webpackChunkdocs_react_plot=self.webpackChunkdocs_react_plot||[]).push([[6202],{2262:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>me,contentTitle:()=>re,default:()=>ce,frontMatter:()=>oe,metadata:()=>se,toc:()=>de});var a=n(7462),i=n(7294),l=n(3905),o=n(8154),r=n(814),s=n(1119);const m='import React from \'react\';\nimport { Plot, Axis } from \'react-plot\';\n\nexport default function Series() {\n  return (\n    <Plot width={600} height={50}>\n      <Axis\n        tickPosition="center"\n        min={0}\n        max={6}\n        position="bottom"\n        label="Axis Label"\n      />\n\n      {/** hidden axis */}\n      <Axis min={0} max={1} position="left" hidden />\n    </Plot>\n  );\n}\n',d=function(){return i.createElement(o.XN,{width:600,height:50},i.createElement(o.RD,{tickPosition:"center",min:0,max:6,position:"bottom",label:"Axis Label"}),i.createElement(o.RD,{min:0,max:1,position:"left",hidden:!0}))};function p(e){const[t,n]=(0,i.useState)(!1);return i.createElement(i.Fragment,null,i.createElement("div",{className:"demo-example-wrapper"},i.createElement(d,null),i.createElement("div",{className:"demo-example-buttons"},i.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:i.createElement(s.Z,{name:"series",source:m,dependencies:{react:"^18.2.0","react-plot":"^0.20.4"}},(()=>i.createElement("button",{type:"submit"},"Open sandbox"))))),t&&i.createElement(r.Z,{className:"language-jsx"},m))}const c='import React from \'react\';\nimport { Plot, Axis, ScatterSeries } from \'react-plot\';\n\nexport default function Series() {\n  return (\n    <div\n      style={{\n        display: \'flex\',\n        justifyContent: \'space-around\',\n      }}\n    >\n      <Plot width={300} height={300}>\n        <ScatterSeries\n          data={[\n            { x: 1, y: 100 },\n            { x: 2, y: 50 },\n            { x: 3, y: 300 },\n            { x: 4, y: 350 },\n            { x: 5, y: 200 },\n            { x: 6, y: 100 },\n            { x: 7, y: 250 },\n            { x: 8, y: 200 },\n            { x: 9, y: 150 },\n          ]}\n        />\n        <Axis min={0} max={400} position="left" label="Left Axis" />\n        <Axis min={0} max={10} position="bottom" label="Bottom Axis" />\n      </Plot>\n      <Plot width={300} height={300}>\n        <ScatterSeries\n          data={[\n            { x: 1, y: 100 },\n            { x: 2, y: 50 },\n            { x: 3, y: 300 },\n            { x: 4, y: 350 },\n            { x: 5, y: 200 },\n            { x: 6, y: 100 },\n            { x: 7, y: 250 },\n            { x: 8, y: 200 },\n            { x: 9, y: 150 },\n          ]}\n        />\n        <Axis min={0} max={400} position="right" label="Right Axis" />\n        <Axis min={0} max={10} position="top" label="Top Axis" />\n      </Plot>\n    </div>\n  );\n}\n',x=function(){return i.createElement("div",{style:{display:"flex",justifyContent:"space-around"}},i.createElement(o.XN,{width:300,height:300},i.createElement(o.nC,{data:[{x:1,y:100},{x:2,y:50},{x:3,y:300},{x:4,y:350},{x:5,y:200},{x:6,y:100},{x:7,y:250},{x:8,y:200},{x:9,y:150}]}),i.createElement(o.RD,{min:0,max:400,position:"left",label:"Left Axis"}),i.createElement(o.RD,{min:0,max:10,position:"bottom",label:"Bottom Axis"})),i.createElement(o.XN,{width:300,height:300},i.createElement(o.nC,{data:[{x:1,y:100},{x:2,y:50},{x:3,y:300},{x:4,y:350},{x:5,y:200},{x:6,y:100},{x:7,y:250},{x:8,y:200},{x:9,y:150}]}),i.createElement(o.RD,{min:0,max:400,position:"right",label:"Right Axis"}),i.createElement(o.RD,{min:0,max:10,position:"top",label:"Top Axis"})))};function u(e){const[t,n]=(0,i.useState)(!1);return i.createElement(i.Fragment,null,i.createElement("div",{className:"demo-example-wrapper"},i.createElement(x,null),i.createElement("div",{className:"demo-example-buttons"},i.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:i.createElement(s.Z,{name:"series",source:c,dependencies:{react:"^18.2.0","react-plot":"^0.20.4"}},(()=>i.createElement("button",{type:"submit"},"Open sandbox"))))),t&&i.createElement(r.Z,{className:"language-jsx"},c))}const y='import React from \'react\';\nimport { Axis, LineSeries, Plot, ScatterSeries } from \'react-plot\';\n\nexport default function Series() {\n  return (\n    <Plot width={600} height={50}>\n      <ScatterSeries\n        data={[\n          { x: 2, y: 0 },\n          { x: 4, y: 0 },\n          { x: 6, y: 0 },\n          { x: 7, y: 0 },\n          { x: 10, y: 0 },\n          { x: 14, y: 0 },\n          { x: 20, y: 0 },\n        ]}\n      />\n      <Axis position="bottom" label="Automatique range" />\n      {/** hidden axis */}\n      <Axis position="left" hidden />\n    </Plot>\n  );\n}\n',b=function(){return i.createElement(o.XN,{width:600,height:50},i.createElement(o.nC,{data:[{x:2,y:0},{x:4,y:0},{x:6,y:0},{x:7,y:0},{x:10,y:0},{x:14,y:0},{x:20,y:0}]}),i.createElement(o.RD,{position:"bottom",label:"Automatique range"}),i.createElement(o.RD,{position:"left",hidden:!0}))};function k(e){const[t,n]=(0,i.useState)(!1);return i.createElement(i.Fragment,null,i.createElement("div",{className:"demo-example-wrapper"},i.createElement(b,null),i.createElement("div",{className:"demo-example-buttons"},i.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:i.createElement(s.Z,{name:"series",source:y,dependencies:{react:"^18.2.0","react-plot":"^0.20.4"}},(()=>i.createElement("button",{type:"submit"},"Open sandbox"))))),t&&i.createElement(r.Z,{className:"language-jsx"},y))}const h='import React from \'react\';\nimport { Axis, LineSeries, Plot, ScatterSeries } from \'react-plot\';\n\nexport default function Series() {\n  return (\n    <Plot width={600} height={50}>\n      <ScatterSeries\n        data={[\n          { x: 2, y: 0 },\n          { x: 4, y: 0 },\n          { x: 6, y: 0 },\n          { x: 7, y: 0 },\n          { x: 10, y: 0 },\n          { x: 14, y: 0 },\n          { x: 20, y: 0 },\n        ]}\n      />\n      <Axis min={0} max={30} position="bottom" label="Domain [0,30]" />\n      {/** hidden axis */}\n      <Axis position="left" hidden />\n    </Plot>\n  );\n}\n',f=function(){return i.createElement(o.XN,{width:600,height:50},i.createElement(o.nC,{data:[{x:2,y:0},{x:4,y:0},{x:6,y:0},{x:7,y:0},{x:10,y:0},{x:14,y:0},{x:20,y:0}]}),i.createElement(o.RD,{min:0,max:30,position:"bottom",label:"Domain [0,30]"}),i.createElement(o.RD,{position:"left",hidden:!0}))};function g(e){const[t,n]=(0,i.useState)(!1);return i.createElement(i.Fragment,null,i.createElement("div",{className:"demo-example-wrapper"},i.createElement(f,null),i.createElement("div",{className:"demo-example-buttons"},i.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:i.createElement(s.Z,{name:"series",source:h,dependencies:{react:"^18.2.0","react-plot":"^0.20.4"}},(()=>i.createElement("button",{type:"submit"},"Open sandbox"))))),t&&i.createElement(r.Z,{className:"language-jsx"},h))}const E='import React from \'react\';\nimport { Axis, LineSeries, Plot, ScatterSeries } from \'react-plot\';\n\nexport default function Series() {\n  return (\n    <div\n      style={{\n        display: \'flex\',\n        flexDirection: \'column\',\n        gap: \'40px\',\n      }}\n    >\n      <Plot width={600} height={50}>\n        <ScatterSeries\n          data={[\n            { x: 2, y: 0 },\n            { x: 4, y: 0 },\n            { x: 6, y: 0 },\n            { x: 7, y: 0 },\n            { x: 10, y: 0 },\n            { x: 14, y: 0 },\n            { x: 20, y: 0 },\n          ]}\n        />\n        <Axis paddingStart="10%" position="bottom" label="paddingStart=\'10%\'" />\n        {/** hidden axis */}\n        <Axis position="left" hidden />\n      </Plot>\n      <Plot width={600} height={50}>\n        <ScatterSeries\n          data={[\n            { x: 2, y: 0 },\n            { x: 4, y: 0 },\n            { x: 6, y: 0 },\n            { x: 7, y: 0 },\n            { x: 10, y: 0 },\n            { x: 14, y: 0 },\n            { x: 20, y: 0 },\n          ]}\n        />\n        <Axis paddingEnd="30%" position="bottom" label="paddingEnd=\'30%\'" />\n        {/** hidden axis */}\n        <Axis position="left" hidden />\n      </Plot>\n      <Plot width={600} height={50}>\n        <ScatterSeries\n          data={[\n            { x: 2, y: 0 },\n            { x: 4, y: 0 },\n            { x: 6, y: 0 },\n            { x: 7, y: 0 },\n            { x: 10, y: 0 },\n            { x: 14, y: 0 },\n            { x: 20, y: 0 },\n          ]}\n        />\n        <Axis paddingEnd="100" position="bottom" label="paddingEnd=\'100\'" />\n        {/** hidden axis */}\n        <Axis position="left" hidden />\n      </Plot>\n      <Plot width={600} height={50}>\n        <ScatterSeries\n          data={[\n            { x: 2, y: 0 },\n            { x: 4, y: 0 },\n            { x: 6, y: 0 },\n            { x: 7, y: 0 },\n            { x: 10, y: 0 },\n            { x: 14, y: 0 },\n            { x: 20, y: 0 },\n          ]}\n        />\n        <Axis paddingEnd={10} position="bottom" label="paddingEnd=10" />\n        {/** hidden axis */}\n        <Axis position="left" hidden />\n      </Plot>\n    </div>\n  );\n}\n',N=function(){return i.createElement("div",{style:{display:"flex",flexDirection:"column",gap:"40px"}},i.createElement(o.XN,{width:600,height:50},i.createElement(o.nC,{data:[{x:2,y:0},{x:4,y:0},{x:6,y:0},{x:7,y:0},{x:10,y:0},{x:14,y:0},{x:20,y:0}]}),i.createElement(o.RD,{paddingStart:"10%",position:"bottom",label:"paddingStart='10%'"}),i.createElement(o.RD,{position:"left",hidden:!0})),i.createElement(o.XN,{width:600,height:50},i.createElement(o.nC,{data:[{x:2,y:0},{x:4,y:0},{x:6,y:0},{x:7,y:0},{x:10,y:0},{x:14,y:0},{x:20,y:0}]}),i.createElement(o.RD,{paddingEnd:"30%",position:"bottom",label:"paddingEnd='30%'"}),i.createElement(o.RD,{position:"left",hidden:!0})),i.createElement(o.XN,{width:600,height:50},i.createElement(o.nC,{data:[{x:2,y:0},{x:4,y:0},{x:6,y:0},{x:7,y:0},{x:10,y:0},{x:14,y:0},{x:20,y:0}]}),i.createElement(o.RD,{paddingEnd:"100",position:"bottom",label:"paddingEnd='100'"}),i.createElement(o.RD,{position:"left",hidden:!0})),i.createElement(o.XN,{width:600,height:50},i.createElement(o.nC,{data:[{x:2,y:0},{x:4,y:0},{x:6,y:0},{x:7,y:0},{x:10,y:0},{x:14,y:0},{x:20,y:0}]}),i.createElement(o.RD,{paddingEnd:10,position:"bottom",label:"paddingEnd=10"}),i.createElement(o.RD,{position:"left",hidden:!0})))};function C(e){const[t,n]=(0,i.useState)(!1);return i.createElement(i.Fragment,null,i.createElement("div",{className:"demo-example-wrapper"},i.createElement(N,null),i.createElement("div",{className:"demo-example-buttons"},i.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:i.createElement(s.Z,{name:"series",source:E,dependencies:{react:"^18.2.0","react-plot":"^0.20.4"}},(()=>i.createElement("button",{type:"submit"},"Open sandbox"))))),t&&i.createElement(r.Z,{className:"language-jsx"},E))}const S='import React from \'react\';\nimport { Plot, Axis, ScatterSeries } from \'react-plot\';\n\nexport default function Series() {\n  return (\n    <Plot width={600} height={400}>\n      <ScatterSeries\n        yAxis="y"\n        data={[\n          { x: 1, y: 1 },\n          { x: 2, y: 3 },\n          { x: 3, y: 5 },\n          { x: 5, y: 1 },\n          { x: 6, y: 2 },\n        ]}\n        markerStyle={{ fill: \'red\' }}\n      />\n      <ScatterSeries\n        yAxis="z"\n        data={[\n          { x: 1, y: 1 },\n          { x: 2, y: 1 },\n          { x: 3, y: 2 },\n          { x: 4, y: 1 },\n          { x: 5, y: 2 },\n          { x: 6, y: 2.5 },\n        ]}\n        markerStyle={{ fill: \'blue\' }}\n      />\n\n      <Axis min={0} max={7} id="x" position="bottom" />\n      <Axis min={0} max={6} id="y" position="left" label="red" />\n      <Axis min={0} max={3} id="z" position="right" label="blue" />\n    </Plot>\n  );\n}\n',A=function(){return i.createElement(o.XN,{width:600,height:400},i.createElement(o.nC,{yAxis:"y",data:[{x:1,y:1},{x:2,y:3},{x:3,y:5},{x:5,y:1},{x:6,y:2}],markerStyle:{fill:"red"}}),i.createElement(o.nC,{yAxis:"z",data:[{x:1,y:1},{x:2,y:1},{x:3,y:2},{x:4,y:1},{x:5,y:2},{x:6,y:2.5}],markerStyle:{fill:"blue"}}),i.createElement(o.RD,{min:0,max:7,id:"x",position:"bottom"}),i.createElement(o.RD,{min:0,max:6,id:"y",position:"left",label:"red"}),i.createElement(o.RD,{min:0,max:3,id:"z",position:"right",label:"blue"}))};function v(e){const[t,n]=(0,i.useState)(!1);return i.createElement(i.Fragment,null,i.createElement("div",{className:"demo-example-wrapper"},i.createElement(A,null),i.createElement("div",{className:"demo-example-buttons"},i.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:i.createElement(s.Z,{name:"series",source:S,dependencies:{react:"^18.2.0","react-plot":"^0.20.4"}},(()=>i.createElement("button",{type:"submit"},"Open sandbox"))))),t&&i.createElement(r.Z,{className:"language-jsx"},S))}const P='import React from \'react\';\nimport { Plot, Axis, ScatterSeries, Heading } from \'react-plot\';\n\nexport default function Series() {\n  return (\n    <div style={{ display: \'flex\', justifyContent: \'space-around\' }}>\n      <Plot width={250} height={200}>\n        <ScatterSeries\n          data={[\n            { x: 12, y: 1 },\n            { x: 14, y: 2 },\n            { x: 16, y: 3 },\n            { x: 18, y: 4 },\n          ]}\n        />\n        <Axis\n          paddingStart={0.1}\n          paddingEnd={0.1}\n          position="bottom"\n          label="Linear Axis"\n          scale="linear"\n        />\n        <Axis min={0} max={5} position="left" />\n      </Plot>\n      <Plot width={250} height={200}>\n        <ScatterSeries\n          data={[\n            { x: 10, y: 1 },\n            { x: 100, y: 2 },\n            { x: 1000, y: 3 },\n            { x: 10000, y: 4 },\n          ]}\n          markerStyle={{ fill: \'green\', stroke: \'none\' }}\n        />\n        <Axis\n          paddingStart={0.0005}\n          paddingEnd={0.5}\n          position="bottom"\n          label="Log Axis"\n          scale="log"\n        />\n        <Axis min={0} max={5} position="left" />\n      </Plot>\n      <Plot width={250} height={200}>\n        <ScatterSeries\n          data={[\n            { x: new Date(2002, 11, 24, 7, 30).getTime(), y: 1 },\n            { x: new Date(2002, 11, 24, 8, 30).getTime(), y: 2 },\n            { x: new Date(2002, 11, 24, 9, 30).getTime(), y: 3 },\n            { x: new Date(2002, 11, 24, 10, 30).getTime(), y: 4 },\n          ]}\n          markerStyle={{ fill: \'blue\', stroke: \'none\' }}\n        />\n        <Axis\n          paddingStart={0.1}\n          paddingEnd={0.1}\n          position="bottom"\n          label="Time Axis"\n          scale="time"\n        />\n        <Axis min={0} max={5} position="left" />\n      </Plot>\n    </div>\n  );\n}\n',w=function(){return i.createElement("div",{style:{display:"flex",justifyContent:"space-around"}},i.createElement(o.XN,{width:250,height:200},i.createElement(o.nC,{data:[{x:12,y:1},{x:14,y:2},{x:16,y:3},{x:18,y:4}]}),i.createElement(o.RD,{paddingStart:.1,paddingEnd:.1,position:"bottom",label:"Linear Axis",scale:"linear"}),i.createElement(o.RD,{min:0,max:5,position:"left"})),i.createElement(o.XN,{width:250,height:200},i.createElement(o.nC,{data:[{x:10,y:1},{x:100,y:2},{x:1e3,y:3},{x:1e4,y:4}],markerStyle:{fill:"green",stroke:"none"}}),i.createElement(o.RD,{paddingStart:5e-4,paddingEnd:.5,position:"bottom",label:"Log Axis",scale:"log"}),i.createElement(o.RD,{min:0,max:5,position:"left"})),i.createElement(o.XN,{width:250,height:200},i.createElement(o.nC,{data:[{x:new Date(2002,11,24,7,30).getTime(),y:1},{x:new Date(2002,11,24,8,30).getTime(),y:2},{x:new Date(2002,11,24,9,30).getTime(),y:3},{x:new Date(2002,11,24,10,30).getTime(),y:4}],markerStyle:{fill:"blue",stroke:"none"}}),i.createElement(o.RD,{paddingStart:.1,paddingEnd:.1,position:"bottom",label:"Time Axis",scale:"time"}),i.createElement(o.RD,{min:0,max:5,position:"left"})))};function R(e){const[t,n]=(0,i.useState)(!1);return i.createElement(i.Fragment,null,i.createElement("div",{className:"demo-example-wrapper"},i.createElement(w,null),i.createElement("div",{className:"demo-example-buttons"},i.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:i.createElement(s.Z,{name:"series",source:P,dependencies:{react:"^18.2.0","react-plot":"^0.20.4"}},(()=>i.createElement("button",{type:"submit"},"Open sandbox"))))),t&&i.createElement(r.Z,{className:"language-jsx"},P))}const D='import React from \'react\';\nimport { Plot, Axis } from \'react-plot\';\n\nexport default function Series() {\n  return (\n    <div>\n      <Plot width={600} height={50}>\n        <Axis min={0} max={6} position="top" label="Normal Axis" />\n        {/** hidden axis */}\n        <Axis min={0} max={1} position="left" hidden />\n      </Plot>\n      <Plot width={600} height={50}>\n        <Axis\n          min={0}\n          max={6}\n          tickLabelStyle={{ fill: \'red\', fontWeight: \'bold\' }}\n          position="bottom"\n          label="Flipped Axis"\n          flip\n        />\n        {/** hidden axis */}\n        <Axis min={0} max={1} position="left" hidden />\n      </Plot>\n    </div>\n  );\n}\n',T=function(){return i.createElement("div",null,i.createElement(o.XN,{width:600,height:50},i.createElement(o.RD,{min:0,max:6,position:"top",label:"Normal Axis"}),i.createElement(o.RD,{min:0,max:1,position:"left",hidden:!0})),i.createElement(o.XN,{width:600,height:50},i.createElement(o.RD,{min:0,max:6,tickLabelStyle:{fill:"red",fontWeight:"bold"},position:"bottom",label:"Flipped Axis",flip:!0}),i.createElement(o.RD,{min:0,max:1,position:"left",hidden:!0})))};function L(e){const[t,n]=(0,i.useState)(!1);return i.createElement(i.Fragment,null,i.createElement("div",{className:"demo-example-wrapper"},i.createElement(T,null),i.createElement("div",{className:"demo-example-buttons"},i.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:i.createElement(s.Z,{name:"series",source:D,dependencies:{react:"^18.2.0","react-plot":"^0.20.4"}},(()=>i.createElement("button",{type:"submit"},"Open sandbox"))))),t&&i.createElement(r.Z,{className:"language-jsx"},D))}const Z="import React from 'react';\nimport { Plot, LineSeries, Axis } from 'react-plot';\n\nexport default function Series() {\n  return (\n    <Plot width={300} height={300}>\n      <LineSeries\n        data={[\n          { x: 1, y: 1 },\n          { x: 2, y: 2 },\n          { x: 3, y: 3 },\n          { x: 4, y: 2 },\n          { x: 5, y: 1 },\n        ]}\n      />\n      <Axis position=\"left\" hidden />\n    </Plot>\n  );\n}\n",X=function(){return i.createElement(o.XN,{width:300,height:300},i.createElement(o.eh,{data:[{x:1,y:1},{x:2,y:2},{x:3,y:3},{x:4,y:2},{x:5,y:1}]}),i.createElement(o.RD,{position:"left",hidden:!0}))};function F(e){const[t,n]=(0,i.useState)(!1);return i.createElement(i.Fragment,null,i.createElement("div",{className:"demo-example-wrapper"},i.createElement(X,null),i.createElement("div",{className:"demo-example-buttons"},i.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:i.createElement(s.Z,{name:"series",source:Z,dependencies:{react:"^18.2.0","react-plot":"^0.20.4"}},(()=>i.createElement("button",{type:"submit"},"Open sandbox"))))),t&&i.createElement(r.Z,{className:"language-jsx"},Z))}const j='import React from \'react\';\nimport { Plot, Axis } from \'react-plot\';\n\nexport default function Series() {\n  return (\n    <Plot width={300} height={100}>\n      <Axis max={20} min={0} position="bottom" hiddenLine label="Hidden Line" />\n      <Axis\n        max={20}\n        min={0}\n        position="top"\n        lineStyle={{ stroke: \'red\' }}\n        label="Change line style"\n      />\n\n      {/** hidden axis */}\n      <Axis min={0} max={1} position="left" hidden />\n    </Plot>\n  );\n}\n',O=function(){return i.createElement(o.XN,{width:300,height:100},i.createElement(o.RD,{max:20,min:0,position:"bottom",hiddenLine:!0,label:"Hidden Line"}),i.createElement(o.RD,{max:20,min:0,position:"top",lineStyle:{stroke:"red"},label:"Change line style"}),i.createElement(o.RD,{min:0,max:1,position:"left",hidden:!0}))};function z(e){const[t,n]=(0,i.useState)(!1);return i.createElement(i.Fragment,null,i.createElement("div",{className:"demo-example-wrapper"},i.createElement(O,null),i.createElement("div",{className:"demo-example-buttons"},i.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:i.createElement(s.Z,{name:"series",source:j,dependencies:{react:"^18.2.0","react-plot":"^0.20.4"}},(()=>i.createElement("button",{type:"submit"},"Open sandbox"))))),t&&i.createElement(r.Z,{className:"language-jsx"},j))}const G="import React from 'react';\nimport { Plot, Axis } from 'react-plot';\n\nexport default function Series() {\n  return (\n    <Plot width={300} height={50}>\n      <Axis\n        max={20}\n        min={0}\n        position=\"bottom\"\n        label=\"Axis Label\"\n        labelStyle={{ fill: 'green', fontSize: '25px', fontWeight: 'bold' }}\n      />\n\n      {/** hidden axis */}\n      <Axis min={0} max={1} position=\"left\" hidden />\n    </Plot>\n  );\n}\n",H=function(){return i.createElement(o.XN,{width:300,height:50},i.createElement(o.RD,{max:20,min:0,position:"bottom",label:"Axis Label",labelStyle:{fill:"green",fontSize:"25px",fontWeight:"bold"}}),i.createElement(o.RD,{min:0,max:1,position:"left",hidden:!0}))};function _(e){const[t,n]=(0,i.useState)(!1);return i.createElement(i.Fragment,null,i.createElement("div",{className:"demo-example-wrapper"},i.createElement(H,null),i.createElement("div",{className:"demo-example-buttons"},i.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:i.createElement(s.Z,{name:"series",source:G,dependencies:{react:"^18.2.0","react-plot":"^0.20.4"}},(()=>i.createElement("button",{type:"submit"},"Open sandbox"))))),t&&i.createElement(r.Z,{className:"language-jsx"},G))}const I="import React from 'react';\nimport { Plot, LineSeries, Axis } from 'react-plot';\n\nexport default function Series() {\n  return (\n    <Plot width={300} height={300}>\n      <LineSeries\n        data={[\n          { x: 1, y: 1 },\n          { x: 2, y: 2 },\n          { x: 3, y: 3 },\n          { x: 4, y: 2 },\n          { x: 5, y: 1 },\n        ]}\n      />\n      {/* todo: ajouter secondaryGridLine */}\n      <Axis\n        position=\"left\"\n        displayPrimaryGridLines\n        primaryGridLineStyle={{ fill: 'red' }}\n      />\n    </Plot>\n  );\n}\n",M=function(){return i.createElement(o.XN,{width:300,height:300},i.createElement(o.eh,{data:[{x:1,y:1},{x:2,y:2},{x:3,y:3},{x:4,y:2},{x:5,y:1}]}),i.createElement(o.RD,{position:"left",displayPrimaryGridLines:!0,primaryGridLineStyle:{fill:"red"}}))};function B(e){const[t,n]=(0,i.useState)(!1);return i.createElement(i.Fragment,null,i.createElement("div",{className:"demo-example-wrapper"},i.createElement(M,null),i.createElement("div",{className:"demo-example-buttons"},i.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:i.createElement(s.Z,{name:"series",source:I,dependencies:{react:"^18.2.0","react-plot":"^0.20.4"}},(()=>i.createElement("button",{type:"submit"},"Open sandbox"))))),t&&i.createElement(r.Z,{className:"language-jsx"},I))}const V='import React from \'react\';\nimport { Plot, Axis } from \'react-plot\';\n\nexport default function Series() {\n  return (\n    <Plot width={300} height={20}>\n      <Axis\n        max={20}\n        min={0}\n        position="bottom"\n        label="Hidden Ticks"\n        hiddenTicks\n      />\n      {/** hidden axis */}\n      <Axis min={0} max={1} position="left" hidden />\n    </Plot>\n  );\n}\n',W=function(){return i.createElement(o.XN,{width:300,height:20},i.createElement(o.RD,{max:20,min:0,position:"bottom",label:"Hidden Ticks",hiddenTicks:!0}),i.createElement(o.RD,{min:0,max:1,position:"left",hidden:!0}))};function q(e){const[t,n]=(0,i.useState)(!1);return i.createElement(i.Fragment,null,i.createElement("div",{className:"demo-example-wrapper"},i.createElement(W,null),i.createElement("div",{className:"demo-example-buttons"},i.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:i.createElement(s.Z,{name:"series",source:V,dependencies:{react:"^18.2.0","react-plot":"^0.20.4"}},(()=>i.createElement("button",{type:"submit"},"Open sandbox"))))),t&&i.createElement(r.Z,{className:"language-jsx"},V))}const $='import React from \'react\';\nimport { Plot, Axis } from \'react-plot\';\n\nexport default function Series() {\n  return (\n    <div\n      style={{\n        display: \'flex\',\n        flexDirection: \'column\',\n        gap: \'10px\',\n      }}\n    >\n      <Plot width={300} height={50}>\n        <Axis\n          max={20}\n          min={0}\n          position="bottom"\n          label="Inner Ticks"\n          tickPosition="inner"\n        />\n        {/** hidden axis */}\n        <Axis min={0} max={1} position="left" hidden />\n      </Plot>\n      <Plot width={300} height={50}>\n        <Axis\n          max={20}\n          min={0}\n          position="bottom"\n          label="Outer Ticks"\n          tickPosition="outer"\n        />\n        {/** hidden axis */}\n        <Axis min={0} max={1} position="left" hidden />\n      </Plot>\n      <Plot width={300} height={50}>\n        <Axis\n          max={20}\n          min={0}\n          position="bottom"\n          label="Center Ticks"\n          tickPosition="center"\n        />\n        {/** hidden axis */}\n        <Axis min={0} max={1} position="left" hidden />\n      </Plot>\n    </div>\n  );\n}\n',U=function(){return i.createElement("div",{style:{display:"flex",flexDirection:"column",gap:"10px"}},i.createElement(o.XN,{width:300,height:50},i.createElement(o.RD,{max:20,min:0,position:"bottom",label:"Inner Ticks",tickPosition:"inner"}),i.createElement(o.RD,{min:0,max:1,position:"left",hidden:!0})),i.createElement(o.XN,{width:300,height:50},i.createElement(o.RD,{max:20,min:0,position:"bottom",label:"Outer Ticks",tickPosition:"outer"}),i.createElement(o.RD,{min:0,max:1,position:"left",hidden:!0})),i.createElement(o.XN,{width:300,height:50},i.createElement(o.RD,{max:20,min:0,position:"bottom",label:"Center Ticks",tickPosition:"center"}),i.createElement(o.RD,{min:0,max:1,position:"left",hidden:!0})))};function J(e){const[t,n]=(0,i.useState)(!1);return i.createElement(i.Fragment,null,i.createElement("div",{className:"demo-example-wrapper"},i.createElement(U,null),i.createElement("div",{className:"demo-example-buttons"},i.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:i.createElement(s.Z,{name:"series",source:$,dependencies:{react:"^18.2.0","react-plot":"^0.20.4"}},(()=>i.createElement("button",{type:"submit"},"Open sandbox"))))),t&&i.createElement(r.Z,{className:"language-jsx"},$))}const K='import React from \'react\';\nimport { Plot, Axis } from \'react-plot\';\n\nexport default function Series() {\n  return (\n    <Plot width={300} height={100}>\n      <Axis\n        max={20}\n        min={0}\n        position="top"\n        label="hidden primary ticks"\n        primaryTickLength={0}\n      />\n      <Axis\n        max={20}\n        min={0}\n        position="bottom"\n        label="personalized primary ticks"\n        primaryTickLength={12}\n        primaryTickStyle={{ stroke: \'red\' }}\n      />\n      {/** hidden axis */}\n      <Axis min={0} max={1} position="left" hidden />\n    </Plot>\n  );\n}\n',Q=function(){return i.createElement(o.XN,{width:300,height:100},i.createElement(o.RD,{max:20,min:0,position:"top",label:"hidden primary ticks",primaryTickLength:0}),i.createElement(o.RD,{max:20,min:0,position:"bottom",label:"personalized primary ticks",primaryTickLength:12,primaryTickStyle:{stroke:"red"}}),i.createElement(o.RD,{min:0,max:1,position:"left",hidden:!0}))};function Y(e){const[t,n]=(0,i.useState)(!1);return i.createElement(i.Fragment,null,i.createElement("div",{className:"demo-example-wrapper"},i.createElement(Q,null),i.createElement("div",{className:"demo-example-buttons"},i.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:i.createElement(s.Z,{name:"series",source:K,dependencies:{react:"^18.2.0","react-plot":"^0.20.4"}},(()=>i.createElement("button",{type:"submit"},"Open sandbox"))))),t&&i.createElement(r.Z,{className:"language-jsx"},K))}const ee='import React from \'react\';\nimport { Plot, Axis } from \'react-plot\';\n\nexport default function Series() {\n  return (\n    <Plot width={300} height={100}>\n      <Axis\n        max={20}\n        min={0}\n        position="top"\n        label="hidden secondary ticks"\n        secondaryTickLength={0}\n      />\n      <Axis\n        max={20}\n        min={0}\n        position="bottom"\n        label="personalized secondary ticks"\n        secondaryTickLength={7}\n        secondaryTickStyle={{ stroke: \'red\' }}\n      />\n      {/** hidden axis */}\n      <Axis min={0} max={1} position="left" hidden />\n    </Plot>\n  );\n}\n',te=function(){return i.createElement(o.XN,{width:300,height:100},i.createElement(o.RD,{max:20,min:0,position:"top",label:"hidden secondary ticks",secondaryTickLength:0}),i.createElement(o.RD,{max:20,min:0,position:"bottom",label:"personalized secondary ticks",secondaryTickLength:7,secondaryTickStyle:{stroke:"red"}}),i.createElement(o.RD,{min:0,max:1,position:"left",hidden:!0}))};function ne(e){const[t,n]=(0,i.useState)(!1);return i.createElement(i.Fragment,null,i.createElement("div",{className:"demo-example-wrapper"},i.createElement(te,null),i.createElement("div",{className:"demo-example-buttons"},i.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:i.createElement(s.Z,{name:"series",source:ee,dependencies:{react:"^18.2.0","react-plot":"^0.20.4"}},(()=>i.createElement("button",{type:"submit"},"Open sandbox"))))),t&&i.createElement(r.Z,{className:"language-jsx"},ee))}const ae='import React from \'react\';\nimport { Plot, Axis } from \'react-plot\';\n\nexport default function Series() {\n  return (\n    <Plot width={300} height={80}>\n      <Axis\n        max={20}\n        min={0}\n        position="bottom"\n        label="Custom ticks label"\n        tickLabelStyle={{ fill: \'blue\' }}\n        tickLabelFormat={(x: number) => `${x}c\xb0`}\n      />\n      <Axis\n        max={20}\n        min={0}\n        position="top"\n        label="Hidden tick label"\n        tickLabelFormat={() => \'\'}\n      />\n      {/** hidden axis */}\n      <Axis min={0} max={1} position="left" hidden />\n    </Plot>\n  );\n}\n',ie=function(){return i.createElement(o.XN,{width:300,height:80},i.createElement(o.RD,{max:20,min:0,position:"bottom",label:"Custom ticks label",tickLabelStyle:{fill:"blue"},tickLabelFormat:e=>`${e}c\xb0`}),i.createElement(o.RD,{max:20,min:0,position:"top",label:"Hidden tick label",tickLabelFormat:()=>""}),i.createElement(o.RD,{min:0,max:1,position:"left",hidden:!0}))};function le(e){const[t,n]=(0,i.useState)(!1);return i.createElement(i.Fragment,null,i.createElement("div",{className:"demo-example-wrapper"},i.createElement(ie,null),i.createElement("div",{className:"demo-example-buttons"},i.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:i.createElement(s.Z,{name:"series",source:ae,dependencies:{react:"^18.2.0","react-plot":"^0.20.4"}},(()=>i.createElement("button",{type:"submit"},"Open sandbox"))))),t&&i.createElement(r.Z,{className:"language-jsx"},ae))}const oe={},re="Axis",se={unversionedId:"axes/axis",id:"axes/axis",title:"Axis",description:"Axis is a component that allows you to add different personalised axes in your Plot",source:"@site/docs/200_axes/100_axis.md",sourceDirName:"200_axes",slug:"/axes/axis",permalink:"/axes/axis",draft:!1,editUrl:"https://github.com/zakodium-oss/react-plot-docs/tree/main/docs/200_axes/100_axis.md",tags:[],version:"current",sidebarPosition:100,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/axes/intro"},next:{title:"ParallelAxis",permalink:"/axes/parallelAxis"}},me={},de=[{value:"Restriction",id:"restriction",level:2},{value:"Props",id:"props",level:2},{value:"1. Axis Positon",id:"1-axis-positon",level:3},{value:"2. Axis Range",id:"2-axis-range",level:3},{value:"3. Identify Axis",id:"3-identify-axis",level:3},{value:"4. Choose Axis Behaviour",id:"4-choose-axis-behaviour",level:3},{value:"5. Customize Axis",id:"5-customize-axis",level:3},{value:"a. Line",id:"a-line",level:4},{value:"b. Label",id:"b-label",level:4},{value:"c. Grid",id:"c-grid",level:4},{value:"d. Ticks",id:"d-ticks",level:4},{value:"e. Ticks labels",id:"e-ticks-labels",level:4}],pe={toc:de};function ce(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},pe,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"axis"},"Axis"),(0,l.kt)("p",null,"Axis is a component that allows you to add different personalised axes in your Plot"),(0,l.kt)(p,{mdxType:"AxisDemo"}),(0,l.kt)("h2",{id:"restriction"},"Restriction"),(0,l.kt)("p",null,"In a ",(0,l.kt)("inlineCode",{parentName:"p"},"Plot"),", we cannot have two ",(0,l.kt)("inlineCode",{parentName:"p"},"Axis")," in the same ",(0,l.kt)("inlineCode",{parentName:"p"},"position")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example:"),"\nAdding two bottom axes in the same plot will throw the following error :",(0,l.kt)("br",null),"\n",(0,l.kt)("inlineCode",{parentName:"p"},"Plot can only have one bottom axis")),(0,l.kt)("h2",{id:"props"},"Props"),(0,l.kt)("h3",{id:"1-axis-positon"},"1. Axis Positon"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"position:")," a mandatory prop that allows you to choose axis position",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"li"},"'top' | 'bottom' | 'left' | 'right'"))),(0,l.kt)(u,{mdxType:"AxisPosition"}),(0,l.kt)("h3",{id:"2-axis-range"},"2. Axis Range"),(0,l.kt)(k,{mdxType:"AxisRange"}),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"min:")," axis minimum domain value ",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"p"},"number"),(0,l.kt)("br",null),"\ndefault: calculated automatically based on series data")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"max:")," axis ",(0,l.kt)("strong",{parentName:"p"},"maximum")," domain value ",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"p"},"number"),(0,l.kt)("br",null),"\ndefault: calculated automatically based on series data"),(0,l.kt)(g,{mdxType:"AxisRangeMaxMin"})),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"paddingStart:")," added value to range in the beginning of domain",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("a",{parentName:"p",href:"/types/scalarValue"},(0,l.kt)("inlineCode",{parentName:"a"},"ScalarValue")),(0,l.kt)("br",null),"\ndefault: ",(0,l.kt)("inlineCode",{parentName:"p"},"0"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"paddingEnd:")," added value to range in the end of domain",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("a",{parentName:"p",href:"/types/scalarValue"},(0,l.kt)("inlineCode",{parentName:"a"},"ScalarValue")),(0,l.kt)("br",null),"\ndefault: ",(0,l.kt)("inlineCode",{parentName:"p"},"0")),(0,l.kt)(C,{mdxType:"AxisRangePadding"}))),(0,l.kt)("h3",{id:"3-identify-axis"},"3. Identify Axis"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"id:")," value used to identify an axis using a string",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"p"},"string"),(0,l.kt)("br",null),"\ndefault:",(0,l.kt)("inlineCode",{parentName:"p"},'"x" for horizontal axis,"y" for vertical axis')),(0,l.kt)(v,{mdxType:"AxisId"})),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"scale:")," Axis scale type",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"p"},"'linear' | 'log' | 'time'"),(0,l.kt)("br",null),"\ndefault:",(0,l.kt)("inlineCode",{parentName:"p"},"'linear'")),(0,l.kt)(R,{mdxType:"AxisScale"}))),(0,l.kt)("h3",{id:"4-choose-axis-behaviour"},"4. Choose Axis Behaviour"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"flip:")," used to flip axis",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean"),(0,l.kt)("br",null),"\ndefault: ",(0,l.kt)("inlineCode",{parentName:"p"},"false")),(0,l.kt)(L,{mdxType:"AxisFlip"})),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"hidden:")," Hides all axis elements",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean"),(0,l.kt)("br",null),"\ndefault: ",(0,l.kt)("inlineCode",{parentName:"p"},"false")),(0,l.kt)(F,{mdxType:"AxisHidden"}))),(0,l.kt)("h3",{id:"5-customize-axis"},"5. Customize Axis"),(0,l.kt)("h4",{id:"a-line"},"a. Line"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"hiddenLine:")," hides axis line",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean"),(0,l.kt)("br",null),"\ndefault: ",(0,l.kt)("inlineCode",{parentName:"p"},"false"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"lineStyle:")," changes axis line style",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"p"},"CSSProperties"),(0,l.kt)("br",null),"\ndefault: ",(0,l.kt)("inlineCode",{parentName:"p"},"{}")),(0,l.kt)(z,{mdxType:"AxisLine"}))),(0,l.kt)("h4",{id:"b-label"},"b. Label"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"label:")," Axis label",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"p"},"ReactNode"),(0,l.kt)("br",null),"\ndefault: ",(0,l.kt)("inlineCode",{parentName:"p"},'""'))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"labelStyle:")," changes label style",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"p"},"CSSProperties"),(0,l.kt)("br",null),"\ndefault: ",(0,l.kt)("inlineCode",{parentName:"p"},"{}")),(0,l.kt)(_,{mdxType:"AxisLabel"}))),(0,l.kt)("h4",{id:"c-grid"},"c. Grid"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"displayPrimaryGridLines:")," adds simple grid lines to the plot",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean"),(0,l.kt)("br",null),"\ndefault: ",(0,l.kt)("inlineCode",{parentName:"p"},"false"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"primaryGridLineStyle:")," customises grid lines style",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"p"},"CSSProperties"),(0,l.kt)("br",null),"\ndefault: ",(0,l.kt)("inlineCode",{parentName:"p"},"{}"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"displaySecondaryGridLines:")," adds secondary grid lines to the plot",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean"),(0,l.kt)("br",null),"\ndefault: ",(0,l.kt)("inlineCode",{parentName:"p"},"false"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"secondaryGridLineStyle:")," changes secondary style of grid lines",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"p"},"CSSProperties"),(0,l.kt)("br",null),"\ndefault: ",(0,l.kt)("inlineCode",{parentName:"p"},"{}")),(0,l.kt)(B,{mdxType:"AxisGrid"}))),(0,l.kt)("h4",{id:"d-ticks"},"d. Ticks"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"hiddenTicks:")," Hides axis ticks",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean"),(0,l.kt)("br",null),"\ndefault: ",(0,l.kt)("inlineCode",{parentName:"p"},"false")),(0,l.kt)(q,{mdxType:"AxisTicksHidden"})),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"tickPosition:")," changes ticks position",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"p"},"'inner' | 'outer' | 'center'"),(0,l.kt)("br",null),"\ndefault: ",(0,l.kt)("inlineCode",{parentName:"p"},"'center'")),(0,l.kt)(J,{mdxType:"AxisTicksPosition"})),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"primaryTickLength:")," changes primary ticks length",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"p"},"number"),(0,l.kt)("br",null),"\ndefault: ",(0,l.kt)("inlineCode",{parentName:"p"},"5"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"primaryTickStyle:")," customises primary ticks style",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"p"},"CSSProperties"),(0,l.kt)("br",null),"\ndefault: ",(0,l.kt)("inlineCode",{parentName:"p"},"{}")),(0,l.kt)(Y,{mdxType:"AxisTicksPrimary"})),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"secondaryTickLength:")," changes secondary ticks length",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"p"},"number"),(0,l.kt)("br",null),"\ndefault: ",(0,l.kt)("inlineCode",{parentName:"p"},"3"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"secondaryTickStyle:")," customises secondary ticks style",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"p"},"CSSProperties"),(0,l.kt)("br",null),"\ndefault: ",(0,l.kt)("inlineCode",{parentName:"p"},"{}")),(0,l.kt)(ne,{mdxType:"AxisTicksSecondary"}))),(0,l.kt)("h4",{id:"e-ticks-labels"},"e. Ticks labels"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"tickLabelFormat:")," personalises the format of tick labels",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"p"},"(x: number)=>string"),(0,l.kt)("br",null),"\ndefault: ",(0,l.kt)("inlineCode",{parentName:"p"},"d3's smart tickFormat for time scale, String for others"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"tickLabelStyle:")," changes tick labels style",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"p"},"CSSProperties"),(0,l.kt)("br",null),"\ndefault: ",(0,l.kt)("inlineCode",{parentName:"p"},"{}")),(0,l.kt)(le,{mdxType:"AxisTicksLabel"}))))}ce.isMDXComponent=!0}}]);