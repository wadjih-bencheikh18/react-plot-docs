"use strict";(self.webpackChunkdocs_react_plot=self.webpackChunkdocs_react_plot||[]).push([[7877],{1447:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>D,contentTitle:()=>z,default:()=>M,frontMatter:()=>V,metadata:()=>w,toc:()=>R});var a=n(7462),l=n(7294),o=n(3905),r=n(8154),i=n(814),p=n(1119);const s='import React from \'react\';\nimport { Annotations, Annotation, LineSeries, Plot, Axis } from \'react-plot\';\nexport default function PlotAnnotations() {\n  return (\n    <Plot width={300} height={200}>\n      <Annotations>\n        <Annotation.DirectedEllipse\n          x1="10"\n          y1={9}\n          x2="100"\n          y2="100"\n          width="50"\n          color="red"\n        />\n        <Annotation.Circle r="20" x="90%" y="20" color="blue" />\n        <Annotation.Ellipse rx="20" ry="10" x="200" y="100" color="green" />\n        <Annotation.Rectangle\n          x1="20"\n          y1="100"\n          x2="50"\n          y2="150"\n          color="violet"\n        />\n        <Annotation.Polygon\n          points={[\n            { x: \'200\', y: \'50\' },\n            { x: \'130\', y: \'8\' },\n            { x: \'120\', y: \'10\' },\n            { x: \'120\', y: \'40\' },\n          ]}\n          color="orange"\n        />\n        <Annotation.Shape\n          x="240"\n          y="60"\n          shape="diamond"\n          size={50}\n          color="brown"\n        />\n      </Annotations>\n      <Axis min={0} max={10} position="bottom" />\n      <Axis min={0} max={10} position="left" />\n    </Plot>\n  );\n}\n',c=function(){return l.createElement(r.XN,{width:300,height:200},l.createElement(r.uN,null,l.createElement(r.q6.DirectedEllipse,{x1:"10",y1:9,x2:"100",y2:"100",width:"50",color:"red"}),l.createElement(r.q6.Circle,{r:"20",x:"90%",y:"20",color:"blue"}),l.createElement(r.q6.Ellipse,{rx:"20",ry:"10",x:"200",y:"100",color:"green"}),l.createElement(r.q6.Rectangle,{x1:"20",y1:"100",x2:"50",y2:"150",color:"violet"}),l.createElement(r.q6.Polygon,{points:[{x:"200",y:"50"},{x:"130",y:"8"},{x:"120",y:"10"},{x:"120",y:"40"}],color:"orange"}),l.createElement(r.q6.Shape,{x:"240",y:"60",shape:"diamond",size:50,color:"brown"})),l.createElement(r.RD,{min:0,max:10,position:"bottom"}),l.createElement(r.RD,{min:0,max:10,position:"left"}))};function m(e){const[t,n]=(0,l.useState)(!1);return l.createElement(l.Fragment,null,l.createElement("div",{className:"demo-example-wrapper"},l.createElement(c,null),l.createElement("div",{className:"demo-example-buttons"},l.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:l.createElement(p.Z,{name:"plot-annotations",source:s,dependencies:{react:"^18.2.0","react-plot":"^0.20.4"}},(()=>l.createElement("button",{type:"submit"},"Open sandbox"))))),t&&l.createElement(i.Z,{className:"language-jsx"},s))}const d='import React from \'react\';\nimport { Annotations, Annotation, Plot, Axis } from \'react-plot\';\nexport default function PlotAnnotations() {\n  const Explanation = [\n    <Annotation.Shape size={8} shape="circle" x={2} y={2} color="red" />,\n    <Annotation.Text x={1} y={1}>\n      (x1,y1)\n    </Annotation.Text>,\n    <Annotation.Shape size={8} shape="circle" x={9} y={8} color="red" />,\n    <Annotation.Text x={8} y={8.5}>\n      (x2,y2)\n    </Annotation.Text>,\n  ];\n  return (\n    <Plot width={300} height={200}>\n      <Annotations>\n        <Annotation.Rectangle x1={2} y1={2} x2={9} y2={8} color="violet" />\n\n        {/* Props explication */}\n        {Explanation}\n      </Annotations>\n      <Axis min={0} max={10} position="bottom" />\n      <Axis min={0} max={10} position="left" />\n    </Plot>\n  );\n}\n',u=function(){const e=[l.createElement(r.q6.Shape,{size:8,shape:"circle",x:2,y:2,color:"red"}),l.createElement(r.q6.Text,{x:1,y:1},"(x1,y1)"),l.createElement(r.q6.Shape,{size:8,shape:"circle",x:9,y:8,color:"red"}),l.createElement(r.q6.Text,{x:8,y:8.5},"(x2,y2)")];return l.createElement(r.XN,{width:300,height:200},l.createElement(r.uN,null,l.createElement(r.q6.Rectangle,{x1:2,y1:2,x2:9,y2:8,color:"violet"}),e),l.createElement(r.RD,{min:0,max:10,position:"bottom"}),l.createElement(r.RD,{min:0,max:10,position:"left"}))};function x(e){const[t,n]=(0,l.useState)(!1);return l.createElement(l.Fragment,null,l.createElement("div",{className:"demo-example-wrapper"},l.createElement(u,null),l.createElement("div",{className:"demo-example-buttons"},l.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:l.createElement(p.Z,{name:"plot-annotations",source:d,dependencies:{react:"^18.2.0","react-plot":"^0.20.4"}},(()=>l.createElement("button",{type:"submit"},"Open sandbox"))))),t&&l.createElement(i.Z,{className:"language-jsx"},d))}const y='import React from \'react\';\nimport { Annotations, Annotation, Plot, Axis } from \'react-plot\';\nexport default function PlotAnnotations() {\n  const Explanation = [\n    <Annotation.Line\n      x1={5}\n      x2={5}\n      y1={5}\n      y2={5.05}\n      style={{ strokeWidth: \'5px\' }}\n      stroke-linecap="round"\n      color="red"\n    />,\n    <Annotation.Text x={5} y={5.3} text-anchor="end">\n      (x,y)\n    </Annotation.Text>,\n    <Annotation.Text x={6.5} y={5.2} text-anchor="end">\n      r\n    </Annotation.Text>,\n    <Annotation.Line\n      x1={5}\n      y1={5}\n      x2={8}\n      y2={5}\n      style={{ strokeWidth: \'3px\' }}\n      color="green"\n    />,\n  ];\n  return (\n    <Plot width={300} height={200}>\n      <Annotations>\n        <Annotation.Circle x={5} y={5} r={3} color="violet" />\n\n        {/* Props explication */}\n        {Explanation}\n      </Annotations>\n      <Axis min={0} max={10} position="bottom" />\n      <Axis min={0} max={10} position="left" />\n    </Plot>\n  );\n}\n',k=function(){const e=[l.createElement(r.q6.Line,{x1:5,x2:5,y1:5,y2:5.05,style:{strokeWidth:"5px"},"stroke-linecap":"round",color:"red"}),l.createElement(r.q6.Text,{x:5,y:5.3,"text-anchor":"end"},"(x,y)"),l.createElement(r.q6.Text,{x:6.5,y:5.2,"text-anchor":"end"},"r"),l.createElement(r.q6.Line,{x1:5,y1:5,x2:8,y2:5,style:{strokeWidth:"3px"},color:"green"})];return l.createElement(r.XN,{width:300,height:200},l.createElement(r.uN,null,l.createElement(r.q6.Circle,{x:5,y:5,r:3,color:"violet"}),e),l.createElement(r.RD,{min:0,max:10,position:"bottom"}),l.createElement(r.RD,{min:0,max:10,position:"left"}))};function h(e){const[t,n]=(0,l.useState)(!1);return l.createElement(l.Fragment,null,l.createElement("div",{className:"demo-example-wrapper"},l.createElement(k,null),l.createElement("div",{className:"demo-example-buttons"},l.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:l.createElement(p.Z,{name:"plot-annotations",source:y,dependencies:{react:"^18.2.0","react-plot":"^0.20.4"}},(()=>l.createElement("button",{type:"submit"},"Open sandbox"))))),t&&l.createElement(i.Z,{className:"language-jsx"},y))}const b='import React from \'react\';\nimport { Annotations, Annotation, Plot, Axis } from \'react-plot\';\nexport default function PlotAnnotations() {\n  const Explanation = [\n    <Annotation.Line\n      x1={5}\n      x2={5}\n      y1={5}\n      y2={5.05}\n      style={{ strokeWidth: \'5px\' }}\n      stroke-linecap="round"\n      color="red"\n    />,\n    <Annotation.Text x={4.8} y={4.5} text-anchor="end">\n      (x,y)\n    </Annotation.Text>,\n    <Annotation.Text x={6.5} y={5.2} text-anchor="end">\n      rx\n    </Annotation.Text>,\n    <Annotation.Text x={4.8} y={6} text-anchor="end">\n      ry\n    </Annotation.Text>,\n    <Annotation.Line\n      x1={5}\n      y1={5}\n      x2={8}\n      y2={5}\n      style={{ strokeWidth: \'3px\' }}\n      color="green"\n    />,\n    <Annotation.Line\n      x1={5}\n      y1={5}\n      x2={5}\n      y2={7}\n      style={{ strokeWidth: \'3px\' }}\n      color="blue"\n    />,\n  ];\n  return (\n    <Plot width={300} height={200}>\n      <Annotations>\n        <Annotation.Ellipse x={5} y={5} rx={3} ry={2} color="violet" />\n\n        {/* Props explication */}\n        {Explanation}\n      </Annotations>\n      <Axis min={0} max={10} position="bottom" />\n      <Axis min={0} max={10} position="left" />\n    </Plot>\n  );\n}\n',E=function(){const e=[l.createElement(r.q6.Line,{x1:5,x2:5,y1:5,y2:5.05,style:{strokeWidth:"5px"},"stroke-linecap":"round",color:"red"}),l.createElement(r.q6.Text,{x:4.8,y:4.5,"text-anchor":"end"},"(x,y)"),l.createElement(r.q6.Text,{x:6.5,y:5.2,"text-anchor":"end"},"rx"),l.createElement(r.q6.Text,{x:4.8,y:6,"text-anchor":"end"},"ry"),l.createElement(r.q6.Line,{x1:5,y1:5,x2:8,y2:5,style:{strokeWidth:"3px"},color:"green"}),l.createElement(r.q6.Line,{x1:5,y1:5,x2:5,y2:7,style:{strokeWidth:"3px"},color:"blue"})];return l.createElement(r.XN,{width:300,height:200},l.createElement(r.uN,null,l.createElement(r.q6.Ellipse,{x:5,y:5,rx:3,ry:2,color:"violet"}),e),l.createElement(r.RD,{min:0,max:10,position:"bottom"}),l.createElement(r.RD,{min:0,max:10,position:"left"}))};function N(e){const[t,n]=(0,l.useState)(!1);return l.createElement(l.Fragment,null,l.createElement("div",{className:"demo-example-wrapper"},l.createElement(E,null),l.createElement("div",{className:"demo-example-buttons"},l.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:l.createElement(p.Z,{name:"plot-annotations",source:b,dependencies:{react:"^18.2.0","react-plot":"^0.20.4"}},(()=>l.createElement("button",{type:"submit"},"Open sandbox"))))),t&&l.createElement(i.Z,{className:"language-jsx"},b))}const g='import React from \'react\';\nimport { Annotations, Annotation, Plot, Axis } from \'react-plot\';\nexport default function PlotAnnotations() {\n  const Explanation = [\n    <Annotation.Line\n      x1={2}\n      x2={2}\n      y1={5}\n      y2={5.05}\n      style={{ strokeWidth: \'5px\' }}\n      stroke-linecap="round"\n      color="red"\n    />,\n    <Annotation.Line\n      x1={8}\n      x2={8}\n      y1={5}\n      y2={5.05}\n      style={{ strokeWidth: \'5px\' }}\n      stroke-linecap="round"\n      color="red"\n    />,\n    <Annotation.Text x={1.8} y={5} text-anchor="end">\n      (x1,y1)\n    </Annotation.Text>,\n    <Annotation.Text x={8.1} y={5}>\n      (x2,y2)\n    </Annotation.Text>,\n\n    <Annotation.Text x={4.8} y={5} text-anchor="end">\n      width\n    </Annotation.Text>,\n\n    <Annotation.Line\n      x1={5}\n      y1={3}\n      x2={5}\n      y2={7}\n      style={{ strokeWidth: \'3px\' }}\n      color="blue"\n    />,\n  ];\n  return (\n    <Plot width={300} height={200}>\n      <Annotations>\n        <Annotation.DirectedEllipse\n          x1={2}\n          y1={5}\n          x2={8}\n          y2={5}\n          width={4}\n          color="violet"\n        />\n\n        {/* Props explication */}\n        {Explanation}\n      </Annotations>\n      <Axis min={0} max={10} position="bottom" />\n      <Axis min={0} max={10} position="left" />\n    </Plot>\n  );\n}\n',f=function(){const e=[l.createElement(r.q6.Line,{x1:2,x2:2,y1:5,y2:5.05,style:{strokeWidth:"5px"},"stroke-linecap":"round",color:"red"}),l.createElement(r.q6.Line,{x1:8,x2:8,y1:5,y2:5.05,style:{strokeWidth:"5px"},"stroke-linecap":"round",color:"red"}),l.createElement(r.q6.Text,{x:1.8,y:5,"text-anchor":"end"},"(x1,y1)"),l.createElement(r.q6.Text,{x:8.1,y:5},"(x2,y2)"),l.createElement(r.q6.Text,{x:4.8,y:5,"text-anchor":"end"},"width"),l.createElement(r.q6.Line,{x1:5,y1:3,x2:5,y2:7,style:{strokeWidth:"3px"},color:"blue"})];return l.createElement(r.XN,{width:300,height:200},l.createElement(r.uN,null,l.createElement(r.q6.DirectedEllipse,{x1:2,y1:5,x2:8,y2:5,width:4,color:"violet"}),e),l.createElement(r.RD,{min:0,max:10,position:"bottom"}),l.createElement(r.RD,{min:0,max:10,position:"left"}))};function v(e){const[t,n]=(0,l.useState)(!1);return l.createElement(l.Fragment,null,l.createElement("div",{className:"demo-example-wrapper"},l.createElement(f,null),l.createElement("div",{className:"demo-example-buttons"},l.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:l.createElement(p.Z,{name:"plot-annotations",source:g,dependencies:{react:"^18.2.0","react-plot":"^0.20.4"}},(()=>l.createElement("button",{type:"submit"},"Open sandbox"))))),t&&l.createElement(i.Z,{className:"language-jsx"},g))}const A='import React from \'react\';\nimport { Annotations, Annotation, Plot, Axis, Heading } from \'react-plot\';\nexport default function PlotAnnotations() {\n  const Explanation = [\n    <Annotation.Shape size={5} shape="circle" x={1} y={1} color="red" />,\n    <Annotation.Shape size={5} shape="circle" x={2} y={3} color="red" />,\n    <Annotation.Shape size={5} shape="circle" x={3} y={7} color="red" />,\n    <Annotation.Shape size={5} shape="circle" x={4} y={5} color="red" />,\n    <Annotation.Shape size={5} shape="circle" x={5} y={1} color="red" />,\n    <Annotation.Text x={1} y={1.3} text-anchor="end">\n      P1\n    </Annotation.Text>,\n    <Annotation.Text x={2} y={3.3} text-anchor="end">\n      P2\n    </Annotation.Text>,\n    <Annotation.Text x={3} y={7.3} text-anchor="end">\n      P3\n    </Annotation.Text>,\n    <Annotation.Text x={4} y={5.3} text-anchor="start">\n      P4\n    </Annotation.Text>,\n    <Annotation.Text x={5} y={1.3} text-anchor="start">\n      P5\n    </Annotation.Text>,\n  ];\n  return (\n    <div style={{ display: \'flex\' }}>\n      <Plot width={300} height={200}>\n        <Annotations>\n          <Annotation.Polygon\n            points={[\n              { x: 1, y: 1 },\n              { x: 2, y: 3 },\n              { x: 3, y: 7 },\n              { x: 4, y: 5 },\n              { x: 5, y: 1 },\n            ]}\n            color="blue"\n          />\n\n          {/* Props explication */}\n          {Explanation}\n        </Annotations>\n        <Axis min={0} max={10} position="bottom" />\n        <Axis min={0} max={10} position="left" />\n      </Plot>\n    </div>\n  );\n}\n',C=function(){const e=[l.createElement(r.q6.Shape,{size:5,shape:"circle",x:1,y:1,color:"red"}),l.createElement(r.q6.Shape,{size:5,shape:"circle",x:2,y:3,color:"red"}),l.createElement(r.q6.Shape,{size:5,shape:"circle",x:3,y:7,color:"red"}),l.createElement(r.q6.Shape,{size:5,shape:"circle",x:4,y:5,color:"red"}),l.createElement(r.q6.Shape,{size:5,shape:"circle",x:5,y:1,color:"red"}),l.createElement(r.q6.Text,{x:1,y:1.3,"text-anchor":"end"},"P1"),l.createElement(r.q6.Text,{x:2,y:3.3,"text-anchor":"end"},"P2"),l.createElement(r.q6.Text,{x:3,y:7.3,"text-anchor":"end"},"P3"),l.createElement(r.q6.Text,{x:4,y:5.3,"text-anchor":"start"},"P4"),l.createElement(r.q6.Text,{x:5,y:1.3,"text-anchor":"start"},"P5")];return l.createElement("div",{style:{display:"flex"}},l.createElement(r.XN,{width:300,height:200},l.createElement(r.uN,null,l.createElement(r.q6.Polygon,{points:[{x:1,y:1},{x:2,y:3},{x:3,y:7},{x:4,y:5},{x:5,y:1}],color:"blue"}),e),l.createElement(r.RD,{min:0,max:10,position:"bottom"}),l.createElement(r.RD,{min:0,max:10,position:"left"})))};function S(e){const[t,n]=(0,l.useState)(!1);return l.createElement(l.Fragment,null,l.createElement("div",{className:"demo-example-wrapper"},l.createElement(C,null),l.createElement("div",{className:"demo-example-buttons"},l.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:l.createElement(p.Z,{name:"plot-annotations",source:A,dependencies:{react:"^18.2.0","react-plot":"^0.20.4"}},(()=>l.createElement("button",{type:"submit"},"Open sandbox"))))),t&&l.createElement(i.Z,{className:"language-jsx"},A))}const P='import React from \'react\';\nimport { Annotations, Annotation, Plot, Axis } from \'react-plot\';\nexport default function PlotAnnotations() {\n  return (\n    <Plot width={300} height={200}>\n      <Annotations>\n        <Annotation.Shape x={2} y={2} size={15} shape="circle" color="blue" />\n        <Annotation.Shape\n          x={7}\n          y={8}\n          size={30}\n          shape="triangle"\n          color="green"\n        />\n        <Annotation.Shape x={3} y={5} size={20} shape="diamond" color="red" />\n        <Annotation.Shape x={6} y={4} size={25} shape="square" color="violet" />\n      </Annotations>\n      <Axis min={0} max={10} position="bottom" />\n      <Axis min={0} max={10} position="left" />\n    </Plot>\n  );\n}\n',T=function(){return l.createElement(r.XN,{width:300,height:200},l.createElement(r.uN,null,l.createElement(r.q6.Shape,{x:2,y:2,size:15,shape:"circle",color:"blue"}),l.createElement(r.q6.Shape,{x:7,y:8,size:30,shape:"triangle",color:"green"}),l.createElement(r.q6.Shape,{x:3,y:5,size:20,shape:"diamond",color:"red"}),l.createElement(r.q6.Shape,{x:6,y:4,size:25,shape:"square",color:"violet"})),l.createElement(r.RD,{min:0,max:10,position:"bottom"}),l.createElement(r.RD,{min:0,max:10,position:"left"}))};function q(e){const[t,n]=(0,l.useState)(!1);return l.createElement(l.Fragment,null,l.createElement("div",{className:"demo-example-wrapper"},l.createElement(T,null),l.createElement("div",{className:"demo-example-buttons"},l.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:l.createElement(p.Z,{name:"plot-annotations",source:P,dependencies:{react:"^18.2.0","react-plot":"^0.20.4"}},(()=>l.createElement("button",{type:"submit"},"Open sandbox"))))),t&&l.createElement(i.Z,{className:"language-jsx"},P))}const V={},z="Filled shapes",w={unversionedId:"annotations/filledShapes",id:"annotations/filledShapes",title:"Filled shapes",description:"Rectangle",source:"@site/docs/300_annotations/200_filledShapes.md",sourceDirName:"300_annotations",slug:"/annotations/filledShapes",permalink:"/annotations/filledShapes",draft:!1,editUrl:"https://github.com/zakodium-oss/react-plot-docs/tree/main/docs/300_annotations/200_filledShapes.md",tags:[],version:"current",sidebarPosition:200,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Text",permalink:"/annotations/text"},next:{title:"Other shapes",permalink:"/annotations/otherShapes"}},D={},R=[{value:"Rectangle",id:"rectangle",level:2},{value:"Props",id:"props",level:3},{value:"Mandatory",id:"mandatory",level:4},{value:"Optional",id:"optional",level:4},{value:"Circle",id:"circle",level:2},{value:"Props",id:"props-1",level:3},{value:"Mandatory",id:"mandatory-1",level:4},{value:"Optional",id:"optional-1",level:4},{value:"Ellipse",id:"ellipse",level:2},{value:"Props",id:"props-2",level:3},{value:"Mandatory",id:"mandatory-2",level:4},{value:"Optional",id:"optional-2",level:4},{value:"DirectedEllipse",id:"directedellipse",level:2},{value:"Props",id:"props-3",level:3},{value:"Mandatory",id:"mandatory-3",level:4},{value:"Optional",id:"optional-3",level:4},{value:"Polygon",id:"polygon",level:2},{value:"Props",id:"props-4",level:3},{value:"Mandatory",id:"mandatory-4",level:4},{value:"Optional",id:"optional-4",level:4},{value:"Shape",id:"shape",level:2},{value:"Props",id:"props-5",level:3},{value:"Mandatory",id:"mandatory-5",level:4},{value:"Optional",id:"optional-5",level:4}],W={toc:R};function M(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},W,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"filled-shapes"},"Filled shapes"),(0,o.kt)(m,{mdxType:"FilledShapesDemo"}),(0,o.kt)("h2",{id:"rectangle"},"Rectangle"),(0,o.kt)(x,{mdxType:"RectangleDemo"}),(0,o.kt)("h3",{id:"props"},"Props"),(0,o.kt)("h4",{id:"mandatory"},"Mandatory"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"x1:")," first corner horizontal coordinate",(0,o.kt)("br",null),"\ntype: ",(0,o.kt)("a",{parentName:"li",href:"/types/scalarValue"},(0,o.kt)("inlineCode",{parentName:"a"},"ScalarValue")),(0,o.kt)("br",null)),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"y1:")," first corner vertical coordinate",(0,o.kt)("br",null),"\ntype: ",(0,o.kt)("a",{parentName:"li",href:"/types/scalarValue"},(0,o.kt)("inlineCode",{parentName:"a"},"ScalarValue")),(0,o.kt)("br",null)),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"x2:")," second corner horizontal coordinate",(0,o.kt)("br",null),"\ntype: ",(0,o.kt)("a",{parentName:"li",href:"/types/scalarValue"},(0,o.kt)("inlineCode",{parentName:"a"},"ScalarValue")),(0,o.kt)("br",null)),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"y2:")," second corner vertical coordinate",(0,o.kt)("br",null),"\ntype: ",(0,o.kt)("a",{parentName:"li",href:"/types/scalarValue"},(0,o.kt)("inlineCode",{parentName:"a"},"ScalarValue")),(0,o.kt)("br",null))),(0,o.kt)("h4",{id:"optional"},"Optional"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"color:")," fill color",(0,o.kt)("br",null),"\ntype: ",(0,o.kt)("inlineCode",{parentName:"li"},"string"),(0,o.kt)("br",null),"\ndefault: ",(0,o.kt)("inlineCode",{parentName:"li"},'"black"'))),(0,o.kt)("p",null,"all ",(0,o.kt)("inlineCode",{parentName:"p"},"<rect>")," svg props are supported. For more information visit ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/SVG/Element/rect"},"the documentation")),(0,o.kt)("h2",{id:"circle"},"Circle"),(0,o.kt)(h,{mdxType:"CircleDemo"}),(0,o.kt)("h3",{id:"props-1"},"Props"),(0,o.kt)("h4",{id:"mandatory-1"},"Mandatory"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"x:")," centers horizontal coordinate",(0,o.kt)("br",null),"\ntype: ",(0,o.kt)("a",{parentName:"li",href:"/types/scalarValue"},(0,o.kt)("inlineCode",{parentName:"a"},"ScalarValue")),(0,o.kt)("br",null)),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"y:")," centers vertical coordinate",(0,o.kt)("br",null),"\ntype: ",(0,o.kt)("a",{parentName:"li",href:"/types/scalarValue"},(0,o.kt)("inlineCode",{parentName:"a"},"ScalarValue")),(0,o.kt)("br",null)),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"r:")," circle radius",(0,o.kt)("br",null),"\ntype: ",(0,o.kt)("a",{parentName:"li",href:"/types/scalarValue"},(0,o.kt)("inlineCode",{parentName:"a"},"ScalarValue")),(0,o.kt)("br",null))),(0,o.kt)("h4",{id:"optional-1"},"Optional"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"color:")," fill color",(0,o.kt)("br",null),"\ntype: ",(0,o.kt)("inlineCode",{parentName:"li"},"string"),(0,o.kt)("br",null),"\ndefault: ",(0,o.kt)("inlineCode",{parentName:"li"},'"black"'))),(0,o.kt)("p",null,"all ",(0,o.kt)("inlineCode",{parentName:"p"},"<circle>")," svg props are supported. For more information visit ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/SVG/Element/circle"},"the documentation")),(0,o.kt)("h2",{id:"ellipse"},"Ellipse"),(0,o.kt)(N,{mdxType:"EllipseDemo"}),(0,o.kt)("h3",{id:"props-2"},"Props"),(0,o.kt)("h4",{id:"mandatory-2"},"Mandatory"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"x:")," centers horizontal coordinate",(0,o.kt)("br",null),"\ntype: ",(0,o.kt)("a",{parentName:"li",href:"/types/scalarValue"},(0,o.kt)("inlineCode",{parentName:"a"},"ScalarValue")),(0,o.kt)("br",null)),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"y:")," centers vertical coordinate",(0,o.kt)("br",null),"\ntype: ",(0,o.kt)("a",{parentName:"li",href:"/types/scalarValue"},(0,o.kt)("inlineCode",{parentName:"a"},"ScalarValue")),(0,o.kt)("br",null)),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"rx:")," radius on the horizontal axis",(0,o.kt)("br",null),"\ntype: ",(0,o.kt)("a",{parentName:"li",href:"/types/scalarValue"},(0,o.kt)("inlineCode",{parentName:"a"},"ScalarValue")),(0,o.kt)("br",null)),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"ry:")," radius on the vertical axis",(0,o.kt)("br",null),"\ntype: ",(0,o.kt)("a",{parentName:"li",href:"/types/scalarValue"},(0,o.kt)("inlineCode",{parentName:"a"},"ScalarValue")),(0,o.kt)("br",null))),(0,o.kt)("h4",{id:"optional-2"},"Optional"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"color:")," fill color",(0,o.kt)("br",null),"\ntype: ",(0,o.kt)("inlineCode",{parentName:"li"},"string"),(0,o.kt)("br",null),"\ndefault: ",(0,o.kt)("inlineCode",{parentName:"li"},'"black"'))),(0,o.kt)("p",null,"all ",(0,o.kt)("inlineCode",{parentName:"p"},"<ellipse>")," svg props are supported for more information visit ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/SVG/Element/ellipse"},"the documentation")),(0,o.kt)("h2",{id:"directedellipse"},"DirectedEllipse"),(0,o.kt)(v,{mdxType:"DirectedEllipseDemo"}),(0,o.kt)("h3",{id:"props-3"},"Props"),(0,o.kt)("h4",{id:"mandatory-3"},"Mandatory"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"x1:")," first corner horizontal coordinate",(0,o.kt)("br",null),"\ntype: ",(0,o.kt)("a",{parentName:"li",href:"/types/scalarValue"},(0,o.kt)("inlineCode",{parentName:"a"},"ScalarValue")),(0,o.kt)("br",null)),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"y1:")," first corner vertical coordinate",(0,o.kt)("br",null),"\ntype: ",(0,o.kt)("a",{parentName:"li",href:"/types/scalarValue"},(0,o.kt)("inlineCode",{parentName:"a"},"ScalarValue")),(0,o.kt)("br",null)),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"x2:")," second corner horizontal coordinate",(0,o.kt)("br",null),"\ntype: ",(0,o.kt)("a",{parentName:"li",href:"/types/scalarValue"},(0,o.kt)("inlineCode",{parentName:"a"},"ScalarValue")),(0,o.kt)("br",null)),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"y2:")," second corner vertical coordinate",(0,o.kt)("br",null),"\ntype: ",(0,o.kt)("a",{parentName:"li",href:"/types/scalarValue"},(0,o.kt)("inlineCode",{parentName:"a"},"ScalarValue")),(0,o.kt)("br",null)),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"width:")," ellipse width",(0,o.kt)("br",null),"\ntype: ",(0,o.kt)("a",{parentName:"li",href:"/types/scalarValue"},(0,o.kt)("inlineCode",{parentName:"a"},"ScalarValue")),(0,o.kt)("br",null))),(0,o.kt)("h4",{id:"optional-3"},"Optional"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"color:")," fill color",(0,o.kt)("br",null),"\ntype: ",(0,o.kt)("inlineCode",{parentName:"li"},"string"),(0,o.kt)("br",null),"\ndefault: ",(0,o.kt)("inlineCode",{parentName:"li"},'"black"'))),(0,o.kt)("p",null,"all ",(0,o.kt)("inlineCode",{parentName:"p"},"<ellipse>")," svg props are supported. For more information visit ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/SVG/Element/ellipse"},"the documentation")),(0,o.kt)("h2",{id:"polygon"},"Polygon"),(0,o.kt)(S,{mdxType:"PolygonDemo"}),(0,o.kt)("h3",{id:"props-4"},"Props"),(0,o.kt)("h4",{id:"mandatory-4"},"Mandatory"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"points:")," series of points",(0,o.kt)("br",null),"\ntype: ",(0,o.kt)("inlineCode",{parentName:"li"},"Array<{ x: ScalarValue, y: ScalarValue }>"),(0,o.kt)("br",null))),(0,o.kt)("h4",{id:"optional-4"},"Optional"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"color:")," fill color",(0,o.kt)("br",null),"\ntype: ",(0,o.kt)("inlineCode",{parentName:"li"},"string"),(0,o.kt)("br",null),"\ndefault: ",(0,o.kt)("inlineCode",{parentName:"li"},'"black"'))),(0,o.kt)("p",null,"all ",(0,o.kt)("inlineCode",{parentName:"p"},"<polygon>")," svg props are supported. For more information visit ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/SVG/Element/polygon"},"the documentation")),(0,o.kt)("h2",{id:"shape"},"Shape"),(0,o.kt)(q,{mdxType:"ShapeDemo"}),(0,o.kt)("h3",{id:"props-5"},"Props"),(0,o.kt)("h4",{id:"mandatory-5"},"Mandatory"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"x:")," horizontal coordinate",(0,o.kt)("br",null),"\ntype: ",(0,o.kt)("a",{parentName:"li",href:"/types/scalarValue"},(0,o.kt)("inlineCode",{parentName:"a"},"ScalarValue")),(0,o.kt)("br",null)),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"y:")," vertical coordinate",(0,o.kt)("br",null),"\ntype: ",(0,o.kt)("a",{parentName:"li",href:"/types/scalarValue"},(0,o.kt)("inlineCode",{parentName:"a"},"ScalarValue")),(0,o.kt)("br",null)),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"size:")," shape size",(0,o.kt)("br",null),"\ntype: ",(0,o.kt)("inlineCode",{parentName:"li"},"number"),(0,o.kt)("br",null)),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"shape:")," shape name",(0,o.kt)("br",null),"\ntype: ",(0,o.kt)("inlineCode",{parentName:"li"},"'triangle' | 'circle' | 'diamond' | 'square'"),(0,o.kt)("br",null))),(0,o.kt)("h4",{id:"optional-5"},"Optional"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"color:")," fill color",(0,o.kt)("br",null),"\ntype: ",(0,o.kt)("inlineCode",{parentName:"li"},"string"),(0,o.kt)("br",null),"\ndefault: ",(0,o.kt)("inlineCode",{parentName:"li"},'"black"')),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"style:")," customises shape styling",(0,o.kt)("br",null),"\ntype: ",(0,o.kt)("inlineCode",{parentName:"li"},"CSSProperties"),(0,o.kt)("br",null),"\ndefault: ",(0,o.kt)("inlineCode",{parentName:"li"},"{}")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"onMouseEnter:")," mouse enter event callback",(0,o.kt)("br",null),"\ntype: ",(0,o.kt)("inlineCode",{parentName:"li"},"MouseEventHandler<SVGGElement>"),(0,o.kt)("br",null)),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"onMouseLeave:")," mouse leave event callback",(0,o.kt)("br",null),"\ntype: ",(0,o.kt)("inlineCode",{parentName:"li"},"MouseEventHandler<SVGGElement>"),(0,o.kt)("br",null))))}M.isMDXComponent=!0}}]);