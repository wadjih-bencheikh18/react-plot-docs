"use strict";(self.webpackChunkdocs_react_plot=self.webpackChunkdocs_react_plot||[]).push([[698],{1332:function(e,t,n){n.r(t),n.d(t,{assets:function(){return S},contentTitle:function(){return g},default:function(){return w},frontMatter:function(){return v},metadata:function(){return P},toc:function(){return C}});var o=n(7462),a=n(3366),r=n(7294),l=n(3905),i=n(1465),c=n(1736),s=n(1119),p='import React from \'react\';\nimport { Annotations, Annotation, LineSeries, Plot, Axis } from \'react-plot\';\nexport default function PlotAnnotations() {\n  return (\n    <Plot width={300} height={200}>\n      <Annotations>\n        <Annotation.Line\n          x1="10"\n          y1={9}\n          x2="100"\n          y2="100"\n          width="50"\n          color="red"\n          strokeWidth={3}\n        />\n        <Annotation.Arrow\n          x1="20"\n          y1="100"\n          x2="200"\n          y2="150"\n          endPoint="triangle"\n          color="violet"\n          strokeWidth={3}\n        />\n        <Annotation.Polyline\n          points={[\n            { x: \'100\', y: \'80\' },\n            { x: \'200\', y: \'50\' },\n            { x: \'130\', y: \'8\' },\n            { x: \'120\', y: \'10\' },\n            { x: \'120\', y: \'40\' },\n          ]}\n          color="orange"\n          strokeWidth={3}\n        />\n      </Annotations>\n      <Axis min={0} max={10} position="bottom" />\n      <Axis min={0} max={10} position="left" />\n    </Plot>\n  );\n}\n',m=function(){return r.createElement(i.XN,{width:300,height:200},r.createElement(i.uN,null,r.createElement(i.q6.Line,{x1:"10",y1:9,x2:"100",y2:"100",width:"50",color:"red",strokeWidth:3}),r.createElement(i.q6.Arrow,{x1:"20",y1:"100",x2:"200",y2:"150",endPoint:"triangle",color:"violet",strokeWidth:3}),r.createElement(i.q6.Polyline,{points:[{x:"100",y:"80"},{x:"200",y:"50"},{x:"130",y:"8"},{x:"120",y:"10"},{x:"120",y:"40"}],color:"orange",strokeWidth:3})),r.createElement(i.RD,{min:0,max:10,position:"bottom"}),r.createElement(i.RD,{min:0,max:10,position:"left"}))};function u(e){var t=(0,r.useState)(!1),n=t[0],o=t[1];return r.createElement(r.Fragment,null,r.createElement("div",{className:"demo-example-wrapper"},r.createElement(m,null),r.createElement("div",{className:"demo-example-buttons"},r.createElement("button",{onClick:function(){return o((function(e){return!e}))},type:"button",style:{backgroundColor:n?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:r.createElement(s.Z,{name:"plot-annotations",source:p,dependencies:{react:"^17.0.2","react-plot":"^0.17.1"}},(function(){return r.createElement("button",{type:"submit"},"Open sandbox")})))),n&&r.createElement(c.Z,{className:"language-jsx"},p))}var d='import React from \'react\';\nimport { Annotations, Annotation, Plot, Axis } from \'react-plot\';\nexport default function PlotAnnotations() {\n  const Explication = [\n    <Annotation.Shape size={5} shape="circle" x={3} y={2} color="red" />,\n    <Annotation.Shape size={5} shape="circle" x={7} y={7} color="red" />,\n    <Annotation.Text x={3} y={2.3} text-anchor="end">\n      (x1,y1)\n    </Annotation.Text>,\n    <Annotation.Text x={7} y={7.3} text-anchor="start">\n      (x2,y2)\n    </Annotation.Text>,\n  ];\n  return (\n    <Plot width={300} height={200}>\n      <Annotations>\n        <Annotation.Line x1={3} y1={2} x2={7} y2={7} color="violet" />\n\n        {/* Props explication */}\n        {Explication}\n      </Annotations>\n      <Axis min={0} max={10} position="bottom" />\n      <Axis min={0} max={10} position="left" />\n    </Plot>\n  );\n}\n',x=function(){var e=[r.createElement(i.q6.Shape,{size:5,shape:"circle",x:3,y:2,color:"red"}),r.createElement(i.q6.Shape,{size:5,shape:"circle",x:7,y:7,color:"red"}),r.createElement(i.q6.Text,{x:3,y:2.3,"text-anchor":"end"},"(x1,y1)"),r.createElement(i.q6.Text,{x:7,y:7.3,"text-anchor":"start"},"(x2,y2)")];return r.createElement(i.XN,{width:300,height:200},r.createElement(i.uN,null,r.createElement(i.q6.Line,{x1:3,y1:2,x2:7,y2:7,color:"violet"}),e),r.createElement(i.RD,{min:0,max:10,position:"bottom"}),r.createElement(i.RD,{min:0,max:10,position:"left"}))};function h(e){var t=(0,r.useState)(!1),n=t[0],o=t[1];return r.createElement(r.Fragment,null,r.createElement("div",{className:"demo-example-wrapper"},r.createElement(x,null),r.createElement("div",{className:"demo-example-buttons"},r.createElement("button",{onClick:function(){return o((function(e){return!e}))},type:"button",style:{backgroundColor:n?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:r.createElement(s.Z,{name:"plot-annotations",source:d,dependencies:{react:"^17.0.2","react-plot":"^0.17.1"}},(function(){return r.createElement("button",{type:"submit"},"Open sandbox")})))),n&&r.createElement(c.Z,{className:"language-jsx"},d))}var y='import React from \'react\';\nimport { Annotations, Annotation, Plot, Axis } from \'react-plot\';\nexport default function PlotAnnotations() {\n  const Explication = [\n    <Annotation.Text x={3.3} y={1.7} text-anchor="start">\n      startPoint="circle"\n    </Annotation.Text>,\n    <Annotation.Text x={7} y={7.3} text-anchor="end">\n      endPoint="triangle"\n    </Annotation.Text>,\n  ];\n  return (\n    <Plot width={300} height={200}>\n      <Annotations>\n        <Annotation.Arrow\n          x1={3}\n          y1={2}\n          x2={7}\n          y2={7}\n          endPoint="triangle"\n          startPoint="circle"\n          strokeWidth={2}\n          color="blue"\n        />\n\n        {/* Props explication */}\n        {Explication}\n      </Annotations>\n      <Axis min={0} max={10} position="bottom" />\n      <Axis min={0} max={10} position="left" />\n    </Plot>\n  );\n}\n',k=function(){var e=[r.createElement(i.q6.Text,{x:3.3,y:1.7,"text-anchor":"start"},'startPoint="circle"'),r.createElement(i.q6.Text,{x:7,y:7.3,"text-anchor":"end"},'endPoint="triangle"')];return r.createElement(i.XN,{width:300,height:200},r.createElement(i.uN,null,r.createElement(i.q6.Arrow,{x1:3,y1:2,x2:7,y2:7,endPoint:"triangle",startPoint:"circle",strokeWidth:2,color:"blue"}),e),r.createElement(i.RD,{min:0,max:10,position:"bottom"}),r.createElement(i.RD,{min:0,max:10,position:"left"}))};function f(e){var t=(0,r.useState)(!1),n=t[0],o=t[1];return r.createElement(r.Fragment,null,r.createElement("div",{className:"demo-example-wrapper"},r.createElement(k,null),r.createElement("div",{className:"demo-example-buttons"},r.createElement("button",{onClick:function(){return o((function(e){return!e}))},type:"button",style:{backgroundColor:n?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:r.createElement(s.Z,{name:"plot-annotations",source:y,dependencies:{react:"^17.0.2","react-plot":"^0.17.1"}},(function(){return r.createElement("button",{type:"submit"},"Open sandbox")})))),n&&r.createElement(c.Z,{className:"language-jsx"},y))}var E='import React from \'react\';\nimport { Annotations, Annotation, Plot, Axis } from \'react-plot\';\nexport default function PlotAnnotations() {\n  const Explication = [\n    <Annotation.Shape size={5} shape="circle" x={1} y={1} color="red" />,\n    <Annotation.Shape size={5} shape="circle" x={2} y={3} color="red" />,\n    <Annotation.Shape size={5} shape="circle" x={3} y={7} color="red" />,\n    <Annotation.Shape size={5} shape="circle" x={4} y={5} color="red" />,\n    <Annotation.Shape size={5} shape="circle" x={5} y={1} color="red" />,\n    <Annotation.Text x={1} y={1.3} text-anchor="end">\n      P1\n    </Annotation.Text>,\n    <Annotation.Text x={2} y={3.3} text-anchor="end">\n      P2\n    </Annotation.Text>,\n    <Annotation.Text x={3} y={7.3} text-anchor="end">\n      P3\n    </Annotation.Text>,\n    <Annotation.Text x={4} y={5.3} text-anchor="start">\n      P4\n    </Annotation.Text>,\n    <Annotation.Text x={5} y={1.3} text-anchor="start">\n      P5\n    </Annotation.Text>,\n  ];\n  return (\n    <Plot width={300} height={200}>\n      <Annotations>\n        <Annotation.Polyline\n          points={[\n            { x: 1, y: 1 },\n            { x: 2, y: 3 },\n            { x: 3, y: 7 },\n            { x: 4, y: 5 },\n            { x: 5, y: 1 },\n          ]}\n          strokeWidth={4}\n          color="blue"\n        />\n\n        {/* Props explication */}\n        {Explication}\n      </Annotations>\n      <Axis min={0} max={10} position="bottom" />\n      <Axis min={0} max={10} position="left" />\n    </Plot>\n  );\n}\n',b=function(){var e=[r.createElement(i.q6.Shape,{size:5,shape:"circle",x:1,y:1,color:"red"}),r.createElement(i.q6.Shape,{size:5,shape:"circle",x:2,y:3,color:"red"}),r.createElement(i.q6.Shape,{size:5,shape:"circle",x:3,y:7,color:"red"}),r.createElement(i.q6.Shape,{size:5,shape:"circle",x:4,y:5,color:"red"}),r.createElement(i.q6.Shape,{size:5,shape:"circle",x:5,y:1,color:"red"}),r.createElement(i.q6.Text,{x:1,y:1.3,"text-anchor":"end"},"P1"),r.createElement(i.q6.Text,{x:2,y:3.3,"text-anchor":"end"},"P2"),r.createElement(i.q6.Text,{x:3,y:7.3,"text-anchor":"end"},"P3"),r.createElement(i.q6.Text,{x:4,y:5.3,"text-anchor":"start"},"P4"),r.createElement(i.q6.Text,{x:5,y:1.3,"text-anchor":"start"},"P5")];return r.createElement(i.XN,{width:300,height:200},r.createElement(i.uN,null,r.createElement(i.q6.Polyline,{points:[{x:1,y:1},{x:2,y:3},{x:3,y:7},{x:4,y:5},{x:5,y:1}],strokeWidth:4,color:"blue"}),e),r.createElement(i.RD,{min:0,max:10,position:"bottom"}),r.createElement(i.RD,{min:0,max:10,position:"left"}))};function A(e){var t=(0,r.useState)(!1),n=t[0],o=t[1];return r.createElement(r.Fragment,null,r.createElement("div",{className:"demo-example-wrapper"},r.createElement(b,null),r.createElement("div",{className:"demo-example-buttons"},r.createElement("button",{onClick:function(){return o((function(e){return!e}))},type:"button",style:{backgroundColor:n?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:r.createElement(s.Z,{name:"plot-annotations",source:E,dependencies:{react:"^17.0.2","react-plot":"^0.17.1"}},(function(){return r.createElement("button",{type:"submit"},"Open sandbox")})))),n&&r.createElement(c.Z,{className:"language-jsx"},E))}var N=["components"],v={},g="Other shapes",P={unversionedId:"annotations/otherShapes",id:"annotations/otherShapes",title:"Other shapes",description:"Line",source:"@site/docs/300_annotations/300_otherShapes.md",sourceDirName:"300_annotations",slug:"/annotations/otherShapes",permalink:"/annotations/otherShapes",editUrl:"https://github.com/zakodium-oss/react-plot-docs/tree/main/docs/300_annotations/300_otherShapes.md",tags:[],version:"current",sidebarPosition:300,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Filled shapes",permalink:"/annotations/filledShapes"},next:{title:"Group",permalink:"/annotations/group"}},S={},C=[{value:"Line",id:"line",level:2},{value:"Props",id:"props",level:3},{value:"Mandatory",id:"mandatory",level:4},{value:"Optional",id:"optional",level:4},{value:"Arrow",id:"arrow",level:2},{value:"Polyline",id:"polyline",level:2},{value:"Props",id:"props-1",level:3},{value:"Mandatory",id:"mandatory-1",level:4},{value:"Optional",id:"optional-1",level:4}],T={toc:C};function w(e){var t=e.components,n=(0,a.Z)(e,N);return(0,l.kt)("wrapper",(0,o.Z)({},T,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"other-shapes"},"Other shapes"),(0,l.kt)(u,{mdxType:"OtherShapesDemo"}),(0,l.kt)("h2",{id:"line"},"Line"),(0,l.kt)(h,{mdxType:"LineDemo"}),(0,l.kt)("h3",{id:"props"},"Props"),(0,l.kt)("h4",{id:"mandatory"},"Mandatory"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"x1:")," start point horizontal coordinate",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("a",{parentName:"li",href:"/types/scalarValue"},(0,l.kt)("inlineCode",{parentName:"a"},"ScalarValue")),(0,l.kt)("br",null)),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"y1:")," start point vertical coordinate",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("a",{parentName:"li",href:"/types/scalarValue"},(0,l.kt)("inlineCode",{parentName:"a"},"ScalarValue")),(0,l.kt)("br",null)),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"x2:")," end point horizontal coordinate",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("a",{parentName:"li",href:"/types/scalarValue"},(0,l.kt)("inlineCode",{parentName:"a"},"ScalarValue")),(0,l.kt)("br",null)),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"y2:")," end point vertical coordinate",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("a",{parentName:"li",href:"/types/scalarValue"},(0,l.kt)("inlineCode",{parentName:"a"},"ScalarValue")),(0,l.kt)("br",null))),(0,l.kt)("h4",{id:"optional"},"Optional"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"color:")," stroke color",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("br",null),"\ndefault: ",(0,l.kt)("inlineCode",{parentName:"li"},'"black"'))),(0,l.kt)("p",null,"all ",(0,l.kt)("inlineCode",{parentName:"p"},"<line>")," svg props are supported for more information visit ",(0,l.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/SVG/Element/line"},"the documentation")),(0,l.kt)("h2",{id:"arrow"},"Arrow"),(0,l.kt)(f,{mdxType:"ArrowDemo"}),(0,l.kt)("p",null,"same as ",(0,l.kt)("a",{parentName:"p",href:"/annotations/otherShapes#line"},"Line")," with 2 more special props :"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"startPoint:")," shape added to starting point",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"li"},"'circle' | 'triangle' | 'line' | 'none'"),(0,l.kt)("br",null),"\ndefault: ",(0,l.kt)("inlineCode",{parentName:"li"},'"none"')),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"endPoint:")," shape added to ending point",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"li"},"'circle' | 'triangle' | 'line' | 'none'"),(0,l.kt)("br",null),"\ndefault: ",(0,l.kt)("inlineCode",{parentName:"li"},'"none"'))),(0,l.kt)("h2",{id:"polyline"},"Polyline"),(0,l.kt)(A,{mdxType:"PolylineDemo"}),(0,l.kt)("h3",{id:"props-1"},"Props"),(0,l.kt)("h4",{id:"mandatory-1"},"Mandatory"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"points:")," series of points",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"li"},"Array<{ x: ScalarValue, y: ScalarValue }>"),(0,l.kt)("br",null))),(0,l.kt)("h4",{id:"optional-1"},"Optional"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"color:")," stroke color",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"li"},"string"),(0,l.kt)("br",null),"\ndefault: ",(0,l.kt)("inlineCode",{parentName:"li"},'"black"'))),(0,l.kt)("p",null,"all ",(0,l.kt)("inlineCode",{parentName:"p"},"<polygone>")," svg props are supported for more information visit ",(0,l.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/SVG/Element/polygone"},"the documentation")))}w.isMDXComponent=!0}}]);