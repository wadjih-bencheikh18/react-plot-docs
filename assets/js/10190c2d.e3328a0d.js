"use strict";(self.webpackChunkdocs_react_plot=self.webpackChunkdocs_react_plot||[]).push([[681],{893:function(e,n,t){t.r(n),t.d(n,{assets:function(){return L},contentTitle:function(){return M},default:function(){return O},frontMatter:function(){return T},metadata:function(){return D},toc:function(){return U}});var o=t(7462),a=t(3366),l=t(7294),r=t(3905),i=t(2255),u=t(1059),s=t(1736),c=t(1119);function m(){var e=(0,l.useState)(),n=e[0],t=e[1];return(0,u.T1)({onStart:function(e){t({kind:"onStart",event:e})},onMove:function(e){t({kind:"onMove",event:e})},onEnd:function(e){t({kind:"onEnd",event:e})}}),l.createElement("div",{style:{display:"flex"}},l.createElement(u.XN,{width:300,height:300},l.createElement(u.eh,{data:[{x:1,y:1},{x:2,y:2},{x:3,y:3},{x:4,y:2},{x:5,y:1}]})),l.createElement(i.vu,{data:n,expandLevel:2,expandPaths:["$.event.coordinates","$.event.clampedCoordinates"]}))}var d="import React from 'react';\nimport { useState } from 'react';\nimport { ObjectInspector } from 'react-inspector';\nimport { LineSeries, Plot, PlotController, useStartMoveEnd } from 'react-plot';\nimport { TrackingResult } from 'react-plot/lib-esm/components/Tracking';\n\nfunction TrackablePlot() {\n  const [currentEvent, setCurrentEvent] =\n    useState<{ kind: string; event: TrackingResult }>();\n  useStartMoveEnd({\n    onStart: (event) => {\n      setCurrentEvent({ kind: 'onStart', event });\n    },\n    onMove: (event) => {\n      setCurrentEvent({ kind: 'onMove', event });\n    },\n    onEnd: (event) => {\n      setCurrentEvent({ kind: 'onEnd', event });\n    },\n  });\n  return (\n    <div style={{ display: 'flex' }}>\n      <Plot width={300} height={300}>\n        <LineSeries\n          data={[\n            { x: 1, y: 1 },\n            { x: 2, y: 2 },\n            { x: 3, y: 3 },\n            { x: 4, y: 2 },\n            { x: 5, y: 1 },\n          ]}\n        />\n      </Plot>\n      <ObjectInspector\n        data={currentEvent}\n        expandLevel={2}\n        expandPaths={['$.event.coordinates', '$.event.clampedCoordinates']}\n      />\n    </div>\n  );\n}\n\nexport default function UseStartMoveEnd() {\n  return (\n    <PlotController>\n      <TrackablePlot />\n    </PlotController>\n  );\n}\n",p=function(){return l.createElement(u.aE,null,l.createElement(m,null))};function k(e){var n=(0,l.useState)(!1),t=n[0],o=n[1];return l.createElement(l.Fragment,null,l.createElement("div",{className:"demo-example-wrapper"},l.createElement(p,null),l.createElement("div",{className:"demo-example-buttons"},l.createElement("button",{onClick:function(){return o((function(e){return!e}))},type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:l.createElement(c.Z,{name:"use-start-move-end",source:d,dependencies:{react:"^17.0.2","react-inspector":"^5.1.1","react-plot":"^0.16.0"}},(function(){return l.createElement("button",{type:"submit"},"Open sandbox")})))),t&&l.createElement(s.Z,{className:"language-jsx"},d))}function h(){var e=(0,u.Q6)();return l.createElement(u.XN,{width:300,height:300},l.createElement(u.eh,{data:[{x:1,y:1},{x:2,y:2},{x:3,y:3},{x:4,y:2},{x:5,y:1}]}),l.createElement(u.uN,null,e.annotations))}var x="import React from 'react';\nimport {\n  Annotations,\n  LineSeries,\n  Plot,\n  PlotController,\n  useDrawRectangle,\n} from 'react-plot';\n\nfunction DrawRectanglePlot() {\n  const drawRectangle = useDrawRectangle();\n  return (\n    <Plot width={300} height={300}>\n      <LineSeries\n        data={[\n          { x: 1, y: 1 },\n          { x: 2, y: 2 },\n          { x: 3, y: 3 },\n          { x: 4, y: 2 },\n          { x: 5, y: 1 },\n        ]}\n      />\n      <Annotations>{drawRectangle.annotations}</Annotations>\n    </Plot>\n  );\n}\n\nexport default function UseDrawRectangle() {\n  return (\n    <PlotController>\n      <DrawRectanglePlot />\n    </PlotController>\n  );\n}\n",f=function(){return l.createElement(u.aE,null,l.createElement(h,null))};function v(e){var n=(0,l.useState)(!1),t=n[0],o=n[1];return l.createElement(l.Fragment,null,l.createElement("div",{className:"demo-example-wrapper"},l.createElement(f,null),l.createElement("div",{className:"demo-example-buttons"},l.createElement("button",{onClick:function(){return o((function(e){return!e}))},type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:l.createElement(c.Z,{name:"use-draw-rectangle",source:x,dependencies:{react:"^17.0.2","react-plot":"^0.16.0"}},(function(){return l.createElement("button",{type:"submit"},"Open sandbox")})))),t&&l.createElement(s.Z,{className:"language-jsx"},x))}function y(){var e=(0,u.NU)();return l.createElement(u.XN,{width:300,height:300},l.createElement(u.eh,{data:[{x:1,y:1},{x:2,y:2},{x:3,y:3},{x:4,y:2},{x:5,y:1}]}),l.createElement(u.uN,null,e.annotations))}var E="import React from 'react';\n\nimport {\n  Annotations,\n  LineSeries,\n  Plot,\n  PlotController,\n  useRectangularZoom,\n} from 'react-plot';\n\nfunction ZoomablePlot() {\n  const zoom = useRectangularZoom();\n  return (\n    <Plot width={300} height={300}>\n      <LineSeries\n        data={[\n          { x: 1, y: 1 },\n          { x: 2, y: 2 },\n          { x: 3, y: 3 },\n          { x: 4, y: 2 },\n          { x: 5, y: 1 },\n        ]}\n      />\n      <Annotations>{zoom.annotations}</Annotations>\n    </Plot>\n  );\n}\n\nexport default function UseRectangularZoom() {\n  return (\n    <PlotController>\n      <ZoomablePlot />\n    </PlotController>\n  );\n}\n",g=function(){return l.createElement(u.aE,null,l.createElement(y,null))};function C(e){var n=(0,l.useState)(!1),t=n[0],o=n[1];return l.createElement(l.Fragment,null,l.createElement("div",{className:"demo-example-wrapper"},l.createElement(g,null),l.createElement("div",{className:"demo-example-buttons"},l.createElement("button",{onClick:function(){return o((function(e){return!e}))},type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:l.createElement(c.Z,{name:"use-rectangular-zoom",source:E,dependencies:{react:"^17.0.2","react-plot":"^0.16.0"}},(function(){return l.createElement("button",{type:"submit"},"Open sandbox")})))),t&&l.createElement(s.Z,{className:"language-jsx"},E))}function b(){var e=(0,u.NU)();return l.createElement(u.XN,{width:300,height:300},l.createElement(u.eh,{data:[{x:1,y:1},{x:2,y:2},{x:3,y:3},{x:4,y:2},{x:5,y:1}]}),l.createElement(u.uN,null,e.annotations))}var N="import React from 'react';\nimport {\n  Annotations,\n  LineSeries,\n  Plot,\n  PlotController,\n  useRectangularZoom,\n} from 'react-plot';\n\nfunction ZoomablePlot() {\n  const zoom = useRectangularZoom();\n  return (\n    <Plot width={300} height={300}>\n      <LineSeries\n        data={[\n          { x: 1, y: 1 },\n          { x: 2, y: 2 },\n          { x: 3, y: 3 },\n          { x: 4, y: 2 },\n          { x: 5, y: 1 },\n        ]}\n      />\n      <Annotations>{zoom.annotations}</Annotations>\n    </Plot>\n  );\n}\n\nexport default function MultiRectangularZoom() {\n  return (\n    <PlotController>\n      <ZoomablePlot />\n      <ZoomablePlot />\n    </PlotController>\n  );\n}\n",w=function(){return l.createElement(u.aE,null,l.createElement(b,null),l.createElement(b,null))};function P(e){var n=(0,l.useState)(!1),t=n[0],o=n[1];return l.createElement(l.Fragment,null,l.createElement("div",{className:"demo-example-wrapper"},l.createElement(w,null),l.createElement("div",{className:"demo-example-buttons"},l.createElement("button",{onClick:function(){return o((function(e){return!e}))},type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:l.createElement(c.Z,{name:"multi-rectangular-zoom",source:N,dependencies:{react:"^17.0.2","react-plot":"^0.16.0"}},(function(){return l.createElement("button",{type:"submit"},"Open sandbox")})))),t&&l.createElement(s.Z,{className:"language-jsx"},N))}function Z(){var e=(0,u.AO)();return l.createElement(u.XN,{width:300,height:300},l.createElement(u.eh,{data:[{x:1,y:1},{x:2,y:2},{x:3,y:3},{x:4,y:2},{x:5,y:1}]}),l.createElement(u.uN,null,e.annotations))}var R="import React from 'react';\nimport {\n  Annotations,\n  LineSeries,\n  Plot,\n  PlotController,\n  useAxisZoom,\n} from 'react-plot';\nfunction ZoomablePlot() {\n  const zoom = useAxisZoom();\n  return (\n    <Plot width={300} height={300}>\n      <LineSeries\n        data={[\n          { x: 1, y: 1 },\n          { x: 2, y: 2 },\n          { x: 3, y: 3 },\n          { x: 4, y: 2 },\n          { x: 5, y: 1 },\n        ]}\n      />\n      <Annotations>{zoom.annotations}</Annotations>\n    </Plot>\n  );\n}\nexport default function UseAxisZoom() {\n  return (\n    <PlotController>\n      <ZoomablePlot />\n    </PlotController>\n  );\n}\n",S=function(){return l.createElement(u.aE,null,l.createElement(Z,null))};function z(e){var n=(0,l.useState)(!1),t=n[0],o=n[1];return l.createElement(l.Fragment,null,l.createElement("div",{className:"demo-example-wrapper"},l.createElement(S,null),l.createElement("div",{className:"demo-example-buttons"},l.createElement("button",{onClick:function(){return o((function(e){return!e}))},type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:l.createElement(c.Z,{name:"use-axis-zoom",source:R,dependencies:{react:"^17.0.2","react-plot":"^0.16.0"}},(function(){return l.createElement("button",{type:"submit"},"Open sandbox")})))),t&&l.createElement(s.Z,{className:"language-jsx"},R))}var A=["components"],T={},M="Hooks",D={unversionedId:"hooks/intro",id:"hooks/intro",title:"Hooks",description:"react-plot provides hook that allows to add functionalities to the plot.",source:"@site/docs/400_hooks/intro.md",sourceDirName:"400_hooks",slug:"/hooks/intro",permalink:"/hooks/intro",editUrl:"https://github.com/zakodium/react-plot-docs/tree/main/docs/400_hooks/intro.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Annotations",permalink:"/annotations/intro"},next:{title:"Infrared spectrum",permalink:"/experimental/ir"}},L={},U=[{value:"useStartMoveEnd",id:"usestartmoveend",level:2},{value:"useDrawRectangle",id:"usedrawrectangle",level:2},{value:"useRectangularZoom",id:"userectangularzoom",level:2},{value:"useAxisZoom",id:"useaxiszoom",level:2}],I={toc:U};function O(e){var n=e.components,t=(0,a.Z)(e,A);return(0,r.kt)("wrapper",(0,o.Z)({},I,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"hooks"},"Hooks"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"react-plot")," provides hook that allows to add functionalities to the plot."),(0,r.kt)("p",null,"To benefit of those features the hooks have to be wrapped in a ",(0,r.kt)("inlineCode",{parentName:"p"},"PlotController"),". Some hooks like ",(0,r.kt)("inlineCode",{parentName:"p"},"useRectangularZoom")," will apply by default to all the ",(0,r.kt)("inlineCode",{parentName:"p"},"Plot")," components contained in the ",(0,r.kt)("inlineCode",{parentName:"p"},"PlotController"),". In the same page there may be many ",(0,r.kt)("inlineCode",{parentName:"p"},"Plot")," components group in different ",(0,r.kt)("inlineCode",{parentName:"p"},"PlotController")," components."),(0,r.kt)("h2",{id:"usestartmoveend"},"useStartMoveEnd"),(0,r.kt)("p",null,"The low level hook ",(0,r.kt)("inlineCode",{parentName:"p"},"useStartMoveEnd")," allows to track the mouse. This hook is used by other hooks but can also be used natively."),(0,r.kt)("p",null,"If accepts 3 callbacks:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"onStart: the mouse was clicked"),(0,r.kt)("li",{parentName:"ul"},"onMove: the mouse was dragged"),(0,r.kt)("li",{parentName:"ul"},"onEnd: the mouse was released")),(0,r.kt)("p",null,"In the following example we simply log the different events."),(0,r.kt)(k,{mdxType:"UseStartMoveEndDemo"}),(0,r.kt)("h2",{id:"usedrawrectangle"},"useDrawRectangle"),(0,r.kt)("p",null,"A more advanced hook will not only monitor the movement of the mouse but will also return ",(0,r.kt)("inlineCode",{parentName:"p"},"annotations")," that can directly be drawn in the ",(0,r.kt)("inlineCode",{parentName:"p"},"Plot"),"."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"wrap your plot component in ",(0,r.kt)("inlineCode",{parentName:"li"},"<PlotController>")),(0,r.kt)("li",{parentName:"ul"},"add the hook: ",(0,r.kt)("inlineCode",{parentName:"li"},"const drawRectangle = useDrawRectangle();")),(0,r.kt)("li",{parentName:"ul"},"add the ",(0,r.kt)("inlineCode",{parentName:"li"},"drawRectangle.annotations")," in order to draw the zoom rectangle: ",(0,r.kt)("inlineCode",{parentName:"li"},"<Annotations>{drawRectangle.annotations}</Annotations>"))),(0,r.kt)(v,{mdxType:"UseDrawRectangleDemo"}),(0,r.kt)("h2",{id:"userectangularzoom"},"useRectangularZoom"),(0,r.kt)("p",null,"This hook allows directly to manage the zoom in a plot. There are 3 steps in order ot implement the zoom:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"wrap your plot component in ",(0,r.kt)("inlineCode",{parentName:"li"},"<PlotController>")),(0,r.kt)("li",{parentName:"ul"},"add the hook: ",(0,r.kt)("inlineCode",{parentName:"li"},"const zoom = useRectangularZoom();")),(0,r.kt)("li",{parentName:"ul"},"add the ",(0,r.kt)("inlineCode",{parentName:"li"},"zoom.annotations")," in order to draw the zoom rectangle: ",(0,r.kt)("inlineCode",{parentName:"li"},"<Annotations>{zoom.annotations}</Annotations>"))),(0,r.kt)("p",null,"This hook also implements the ",(0,r.kt)("inlineCode",{parentName:"p"},"double click")," detection to reset the zoom to its original value."),(0,r.kt)(C,{mdxType:"UseRectangularZoomDemo"}),(0,r.kt)("p",null,"If a ",(0,r.kt)("inlineCode",{parentName:"p"},"PlotController")," contains many ",(0,r.kt)("inlineCode",{parentName:"p"},"Plot")," the change will be applied on all of them."),(0,r.kt)(P,{mdxType:"MultiRectangularZoom"}),(0,r.kt)("h2",{id:"useaxiszoom"},"useAxisZoom"),(0,r.kt)("p",null,"This hook allows to zoom in a plot along the specified axis (default to horitzontal). There are 3 steps in order ot implement the zoom:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"wrap your plot component in ",(0,r.kt)("inlineCode",{parentName:"li"},"<PlotController>")),(0,r.kt)("li",{parentName:"ul"},"add the hook: ",(0,r.kt)("inlineCode",{parentName:"li"},"const zoom = useAxisZoom({direction:'horizontal'});")),(0,r.kt)("li",{parentName:"ul"},"add the ",(0,r.kt)("inlineCode",{parentName:"li"},"zoom.annotations")," in order to draw the zoom rectangle: ",(0,r.kt)("inlineCode",{parentName:"li"},"<Annotations>{zoom.annotations}</Annotations>"))),(0,r.kt)("p",null,"This hook also implements the ",(0,r.kt)("inlineCode",{parentName:"p"},"double click")," detection to reset the zoom to its original value."),(0,r.kt)(z,{mdxType:"UseAxisZoom"}))}O.isMDXComponent=!0}}]);