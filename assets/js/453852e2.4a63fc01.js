"use strict";(self.webpackChunkdocs_react_plot=self.webpackChunkdocs_react_plot||[]).push([[6532],{7490:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>y,contentTitle:()=>k,default:()=>N,frontMatter:()=>m,metadata:()=>c,toc:()=>x});var a=n(7462),r=n(7294),i=n(3905),l=n(8154),s=n(814),o=n(1119);const p="import React from 'react';\nimport { LineSeries, Plot, ScatterSeries, BarSeries } from 'react-plot';\n\nexport default function Series() {\n  return (\n    <Plot width={300} height={300}>\n      <LineSeries\n        data={[\n          { x: 1, y: 1 },\n          { x: 2, y: 2 },\n          { x: 3, y: 3 },\n          { x: 4, y: 2 },\n          { x: 5, y: 1 },\n        ]}\n      />\n      <ScatterSeries\n        data={[\n          { x: 1, y: 2 },\n          { x: 2, y: 1 },\n          { x: 3, y: 2 },\n          { x: 4, y: 1 },\n          { x: 5, y: 2 },\n        ]}\n        // todo: in next release\n        // xShift={2}\n        // yShift={5}\n      />\n      <BarSeries\n        hidden\n        data={[\n          { x: 1, y: 2 },\n          { x: 2, y: 0 },\n          { x: 3, y: 2 },\n          { x: 5, y: 1 },\n          { x: 6, y: 2 },\n        ]}\n      />\n    </Plot>\n  );\n}\n",d=function(){return r.createElement(l.XN,{width:300,height:300},r.createElement(l.eh,{data:[{x:1,y:1},{x:2,y:2},{x:3,y:3},{x:4,y:2},{x:5,y:1}]}),r.createElement(l.nC,{data:[{x:1,y:2},{x:2,y:1},{x:3,y:2},{x:4,y:1},{x:5,y:2}]}),r.createElement(l.QG,{hidden:!0,data:[{x:1,y:2},{x:2,y:0},{x:3,y:2},{x:5,y:1},{x:6,y:2}]}))};function u(e){const[t,n]=(0,r.useState)(!1);return r.createElement(r.Fragment,null,r.createElement("div",{className:"demo-example-wrapper"},r.createElement(d,null),r.createElement("div",{className:"demo-example-buttons"},r.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:r.createElement(o.Z,{name:"series",source:p,dependencies:{react:"^18.2.0","react-plot":"^0.20.4"}},(()=>r.createElement("button",{type:"submit"},"Open sandbox"))))),t&&r.createElement(s.Z,{className:"language-jsx"},p))}const m={},k="Introduction",c={unversionedId:"series/intro",id:"series/intro",title:"Introduction",description:"There are currently 5 different types of series that can be added to a plot:",source:"@site/docs/100_series/000_intro.md",sourceDirName:"100_series",slug:"/series/intro",permalink:"/series/intro",draft:!1,editUrl:"https://github.com/zakodium-oss/react-plot-docs/tree/main/docs/100_series/000_intro.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"BoxPlot",permalink:"/boxplot"},next:{title:"ScatterSeries",permalink:"/series/scatterSeries"}},y={},x=[{value:"Data",id:"data",level:2},{value:"Base Props",id:"base-props",level:2},{value:"<u>Mandatory</u>",id:"mandatory",level:4},{value:"<u>Optional</u>",id:"optional",level:4},{value:"Example",id:"example",level:2}],h={toc:x};function N(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"There are currently 5 different types of series that can be added to a plot:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("a",{parentName:"strong",href:"/series/scatterSeries"},"ScatterSeries"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("a",{parentName:"strong",href:"/series/lineSeries"},"LineSeries"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("a",{parentName:"strong",href:"/series/barSeries"},"BarSeries"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("a",{parentName:"strong",href:"/series/functionSeries"},"FunctionSeries"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("a",{parentName:"strong",href:"/series/rangeSeries"},"RangeSeries")))),(0,i.kt)("p",null,"Series are direct children of the ",(0,i.kt)("inlineCode",{parentName:"p"},"Plot")," component and you may have as many Series as you wish on the same plot."),(0,i.kt)("h2",{id:"data"},"Data"),(0,i.kt)("p",null,"The main purpose of ",(0,i.kt)("inlineCode",{parentName:"p"},"react-plot")," is to display different data in different ways.\nData is an array of points that differ from one serie to another"),(0,i.kt)("h2",{id:"base-props"},"Base Props"),(0,i.kt)("p",null,"Base props are the props that all series have:"),(0,i.kt)("h4",{id:"mandatory"},(0,i.kt)("u",null,"Mandatory")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"data:")," displays serie's data",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("a",{parentName:"li",href:"/types/data"},(0,i.kt)("inlineCode",{parentName:"a"},"Data")))),(0,i.kt)("h4",{id:"optional"},(0,i.kt)("u",null,"Optional")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"id:")," serie id",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),"\ndefault: generated automatically"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"xAxis:")," series horizontal axis id ",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),(0,i.kt)("br",null),"\ndefault: ",(0,i.kt)("inlineCode",{parentName:"li"},'"x"')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"yAxis:")," series vertical axis id ",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),(0,i.kt)("br",null),"\ndefault: ",(0,i.kt)("inlineCode",{parentName:"li"},'"y"')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"label:")," label of the serie that can be displayed in legends",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"li"},"string"),(0,i.kt)("br",null)),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"hidden:")," hides serie",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"li"},"boolean"),(0,i.kt)("br",null),"\ndefault: ",(0,i.kt)("inlineCode",{parentName:"li"},"false")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"xShift:")," shifts the data relative to horizontal axis",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"li"},"number or string"),(0,i.kt)("br",null),"\ndefault: ",(0,i.kt)("inlineCode",{parentName:"li"},"0")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"yShift:")," shifts the data relative to vertical axis",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"li"},"number or string"),(0,i.kt)("br",null),"\ndefault: ",(0,i.kt)("inlineCode",{parentName:"li"},"0"))),(0,i.kt)("h2",{id:"example"},"Example"),(0,i.kt)(u,{mdxType:"SeriesDemo"}))}N.isMDXComponent=!0}}]);