"use strict";(self.webpackChunkdocs_react_plot=self.webpackChunkdocs_react_plot||[]).push([[5800],{2401:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>P,contentTitle:()=>L,default:()=>Z,frontMatter:()=>C,metadata:()=>v,toc:()=>w});var r=n(7462),a=n(7294),l=n(3905),i=n(8154),o=n(814),s=n(1119);const p="import React from 'react';\nimport { Plot, LineSeries } from 'react-plot';\n\nexport default function Series() {\n  return (\n    <Plot width={300} height={300}>\n      <LineSeries\n        data={[\n          { x: 1, y: 1 },\n          { x: 2, y: 2 },\n          { x: 3, y: 3 },\n          { x: 4, y: 2 },\n          { x: 5, y: 1 },\n        ]}\n      />\n      <LineSeries\n        data={[\n          { x: 1, y: 0 },\n          { x: 2, y: 1 },\n          { x: 3, y: 2 },\n          { x: 4, y: 1 },\n          { x: 5, y: 2 },\n          { x: 6, y: 3 },\n        ]}\n      />\n    </Plot>\n  );\n}\n",m=function(){return a.createElement(i.XN,{width:300,height:300},a.createElement(i.eh,{data:[{x:1,y:1},{x:2,y:2},{x:3,y:3},{x:4,y:2},{x:5,y:1}]}),a.createElement(i.eh,{data:[{x:1,y:0},{x:2,y:1},{x:3,y:2},{x:4,y:1},{x:5,y:2},{x:6,y:3}]}))};function d(e){const[t,n]=(0,a.useState)(!1);return a.createElement(a.Fragment,null,a.createElement("div",{className:"demo-example-wrapper"},a.createElement(m,null),a.createElement("div",{className:"demo-example-buttons"},a.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:a.createElement(s.Z,{name:"series",source:p,dependencies:{react:"^18.2.0","react-plot":"^0.20.4"}},(()=>a.createElement("button",{type:"submit"},"Open sandbox"))))),t&&a.createElement(o.Z,{className:"language-jsx"},p))}const c="import React from 'react';\nimport { Plot, LineSeries } from 'react-plot';\n\nexport default function Series() {\n  return (\n    <Plot width={300} height={300}>\n      <LineSeries\n        displayMarkers\n        markerShape=\"diamond\"\n        markerSize={15}\n        markerStyle={{\n          fill: ({ x }) => (x > 3 ? 'blue' : 'red'),\n          stroke: 'black',\n        }}\n        data={[\n          { x: 1, y: 1 },\n          { x: 2, y: 2 },\n          { x: 3, y: 3 },\n          { x: 4, y: 2 },\n          { x: 5, y: 1 },\n        ]}\n      />\n    </Plot>\n  );\n}\n",u=function(){return a.createElement(i.XN,{width:300,height:300},a.createElement(i.eh,{displayMarkers:!0,markerShape:"diamond",markerSize:15,markerStyle:{fill:e=>{let{x:t}=e;return t>3?"blue":"red"},stroke:"black"},data:[{x:1,y:1},{x:2,y:2},{x:3,y:3},{x:4,y:2},{x:5,y:1}]}))};function y(e){const[t,n]=(0,a.useState)(!1);return a.createElement(a.Fragment,null,a.createElement("div",{className:"demo-example-wrapper"},a.createElement(u,null),a.createElement("div",{className:"demo-example-buttons"},a.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:a.createElement(s.Z,{name:"series",source:c,dependencies:{react:"^18.2.0","react-plot":"^0.20.4"}},(()=>a.createElement("button",{type:"submit"},"Open sandbox"))))),t&&a.createElement(o.Z,{className:"language-jsx"},c))}const k="import React from 'react';\nimport { Plot, LineSeries } from 'react-plot';\n\nexport default function Series() {\n  return (\n    <Plot width={300} height={300}>\n      <LineSeries\n        pointLabel=\"5\"\n        pointLabelStyle={{\n          fill: ({ x }) => (x > 2 ? 'green' : 'blue'),\n          fontWeight: 'bolder',\n        }}\n        data={[\n          { x: 1, y: 1 },\n          { x: 2, y: 2 },\n          { x: 3, y: 3 },\n          { x: 4, y: 2 },\n          { x: 5, y: 1 },\n        ]}\n      />\n      <LineSeries\n        pointLabel={({ x, y }) => `(${x},${y})`}\n        pointLabelStyle={{\n          transform: 'translate(3px, -4px)',\n        }}\n        data={[\n          { x: 1, y: 0 },\n          { x: 2, y: 1 },\n          { x: 3, y: 2 },\n          { x: 4, y: 1 },\n          { x: 5, y: 2 },\n          { x: 6, y: 3 },\n        ]}\n      />\n    </Plot>\n  );\n}\n",x=function(){return a.createElement(i.XN,{width:300,height:300},a.createElement(i.eh,{pointLabel:"5",pointLabelStyle:{fill:e=>{let{x:t}=e;return t>2?"green":"blue"},fontWeight:"bolder"},data:[{x:1,y:1},{x:2,y:2},{x:3,y:3},{x:4,y:2},{x:5,y:1}]}),a.createElement(i.eh,{pointLabel:e=>{let{x:t,y:n}=e;return`(${t},${n})`},pointLabelStyle:{transform:"translate(3px, -4px)"},data:[{x:1,y:0},{x:2,y:1},{x:3,y:2},{x:4,y:1},{x:5,y:2},{x:6,y:3}]}))};function b(e){const[t,n]=(0,a.useState)(!1);return a.createElement(a.Fragment,null,a.createElement("div",{className:"demo-example-wrapper"},a.createElement(x,null),a.createElement("div",{className:"demo-example-buttons"},a.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:a.createElement(s.Z,{name:"series",source:k,dependencies:{react:"^18.2.0","react-plot":"^0.20.4"}},(()=>a.createElement("button",{type:"submit"},"Open sandbox"))))),t&&a.createElement(o.Z,{className:"language-jsx"},k))}const S="import React from 'react';\nimport { Plot, LineSeries } from 'react-plot';\n\nexport default function Series() {\n  return (\n    <Plot width={300} height={300}>\n      <LineSeries\n        displayErrorBars\n        errorBarsStyle={{ stroke: 'green', strokeWidth: '5px' }}\n        errorBarsCapSize={10}\n        errorBarsCapStyle={{ stroke: 'blue', strokeWidth: '2px' }}\n        data={[\n          { x: 1, y: 1, xError: 0.2 },\n          { x: 2, y: 2, yError: 0.05 },\n          { x: 3, y: 3, xError: [0.1, 0.2], yError: [0.2, 0.3] },\n          { x: 4, y: 2, xError: [0.6, 0.2], yError: [0.2, 0.3] },\n          { x: 5, y: 1 },\n        ]}\n      />\n    </Plot>\n  );\n}\n",h=function(){return a.createElement(i.XN,{width:300,height:300},a.createElement(i.eh,{displayErrorBars:!0,errorBarsStyle:{stroke:"green",strokeWidth:"5px"},errorBarsCapSize:10,errorBarsCapStyle:{stroke:"blue",strokeWidth:"2px"},data:[{x:1,y:1,xError:.2},{x:2,y:2,yError:.05},{x:3,y:3,xError:[.1,.2],yError:[.2,.3]},{x:4,y:2,xError:[.6,.2],yError:[.2,.3]},{x:5,y:1}]}))};function E(e){const[t,n]=(0,a.useState)(!1);return a.createElement(a.Fragment,null,a.createElement("div",{className:"demo-example-wrapper"},a.createElement(h,null),a.createElement("div",{className:"demo-example-buttons"},a.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:a.createElement(s.Z,{name:"series",source:S,dependencies:{react:"^18.2.0","react-plot":"^0.20.4"}},(()=>a.createElement("button",{type:"submit"},"Open sandbox"))))),t&&a.createElement(o.Z,{className:"language-jsx"},S))}const f="import React from 'react';\nimport { Plot, LineSeries } from 'react-plot';\n\nexport default function Series() {\n  return (\n    <Plot width={300} height={300}>\n      <LineSeries\n        lineStyle={{ stroke: 'green' }}\n        data={[\n          { x: 1, y: 1 },\n          { x: 2, y: 2 },\n          { x: 3, y: 3 },\n          { x: 4, y: 2 },\n          { x: 5, y: 1 },\n        ]}\n      />\n    </Plot>\n  );\n}\n",N=function(){return a.createElement(i.XN,{width:300,height:300},a.createElement(i.eh,{lineStyle:{stroke:"green"},data:[{x:1,y:1},{x:2,y:2},{x:3,y:3},{x:4,y:2},{x:5,y:1}]}))};function g(e){const[t,n]=(0,a.useState)(!1);return a.createElement(a.Fragment,null,a.createElement("div",{className:"demo-example-wrapper"},a.createElement(N,null),a.createElement("div",{className:"demo-example-buttons"},a.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:a.createElement(s.Z,{name:"series",source:f,dependencies:{react:"^18.2.0","react-plot":"^0.20.4"}},(()=>a.createElement("button",{type:"submit"},"Open sandbox"))))),t&&a.createElement(o.Z,{className:"language-jsx"},f))}const C={},L="LineSeries",v={unversionedId:"series/lineSeries",id:"series/lineSeries",title:"LineSeries",description:"Display",source:"@site/docs/100_series/200_lineSeries.md",sourceDirName:"100_series",slug:"/series/lineSeries",permalink:"/series/lineSeries",draft:!1,editUrl:"https://github.com/zakodium-oss/react-plot-docs/tree/main/docs/100_series/200_lineSeries.md",tags:[],version:"current",sidebarPosition:200,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ScatterSeries",permalink:"/series/scatterSeries"},next:{title:"BarSeries",permalink:"/series/barSeries"}},P={},w=[{value:"Display",id:"display",level:2},{value:"Data",id:"data",level:2},{value:"Props",id:"props",level:2},{value:"1. Markers",id:"1-markers",level:3},{value:"2. Point Label",id:"2-point-label",level:3},{value:"3. ErrorBars",id:"3-errorbars",level:3},{value:"4. Lines",id:"4-lines",level:3}],B={toc:w};function Z(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,r.Z)({},B,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"lineseries"},"LineSeries"),(0,l.kt)("h2",{id:"display"},"Display"),(0,l.kt)(d,{mdxType:"LineSeriesDemo"}),(0,l.kt)("h2",{id:"data"},"Data"),(0,l.kt)("p",null,"point type must extend from ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"/types/data#1-seriespoint"},(0,l.kt)("inlineCode",{parentName:"a"},"SeriesPoint")))),(0,l.kt)("h2",{id:"props"},"Props"),(0,l.kt)("p",null,"Like all other series, line series have ",(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("a",{parentName:"strong",href:"/series/intro/#base-props"},"Base props")),(0,l.kt)("br",null),"\nThey also have many other props that we can class into following categories :"),(0,l.kt)("h3",{id:"1-markers"},"1. Markers"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"displayMarkers:")," displays scatter points markers",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"li"},"boolean"),(0,l.kt)("br",null),"\ndefault: ",(0,l.kt)("inlineCode",{parentName:"li"},"false")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"markerShape:")," shape of serie's markers",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"li"},"Shape"),(0,l.kt)("br",null),"\ndefault: ",(0,l.kt)("inlineCode",{parentName:"li"},"'circle'")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"markerSize:")," size of serie's markers",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"li"},"number"),(0,l.kt)("br",null),"\ndefault: ",(0,l.kt)("inlineCode",{parentName:"li"},"8")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"markerStyle:")," serie's markers style that can be dynamic or static",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"li"},"CSSFuncProps"),(0,l.kt)("br",null),"\ndefault: ",(0,l.kt)("inlineCode",{parentName:"li"},"{}"))),(0,l.kt)(y,{mdxType:"LineSeriesMarkerDemo"}),(0,l.kt)("h3",{id:"2-point-label"},"2. Point Label"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"pointLabel:")," serie's point label that can be dynamic or static, depending on kind of points",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"li"},"LabelFuncProps<point>"),(0,l.kt)("br",null),"\ndefault: ",(0,l.kt)("inlineCode",{parentName:"li"},"''")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"pointLabelStyle:")," serie's point label style, dynamic or static, depending on kind of points",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"li"},"CSSFuncProps<point>"),(0,l.kt)("br",null),"\ndefault: ",(0,l.kt)("inlineCode",{parentName:"li"},"{}"))),(0,l.kt)(b,{mdxType:"LineSeriesPointLabel"}),(0,l.kt)("h3",{id:"3-errorbars"},"3. ErrorBars"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"displayErrorBars:")," displays error bars in the series",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"li"},"boolean"),(0,l.kt)("br",null),"\ndefault: ",(0,l.kt)("inlineCode",{parentName:"li"},"false")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"errorBarsStyle:")," changes error bars' style",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"li"},"SVGAttributes<SVGLineElement>"),(0,l.kt)("br",null)),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"errorBarsCapSize:")," changes size of error bars' cap",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"li"},"number"),(0,l.kt)("br",null)),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"errorBarsCapStyle:")," changes error bars cap's style",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"li"},"SVGAttributes<SVGLineElement>"),(0,l.kt)("br",null))),(0,l.kt)(E,{mdxType:"LineSeriesError"}),(0,l.kt)("h3",{id:"4-lines"},"4. Lines"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("strong",{parentName:"li"},"lineStyle:")," styling of the serie's path dynamic or static, depending on series' id",(0,l.kt)("br",null),"\ntype: ",(0,l.kt)("inlineCode",{parentName:"li"},"CSSFuncProps<{id}>"),(0,l.kt)("br",null),"\ndefault: ",(0,l.kt)("inlineCode",{parentName:"li"},"false"))),(0,l.kt)(g,{mdxType:"LineSeriesLines"}))}Z.isMDXComponent=!0}}]);