"use strict";(self.webpackChunkdocs_react_plot=self.webpackChunkdocs_react_plot||[]).push([[299],{1426:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>E,contentTitle:()=>b,default:()=>A,frontMatter:()=>g,metadata:()=>y,toc:()=>v});var r=n(7462),o=n(7294),a=n(3905),s=n(2854),i=n(8154),l=n(7217),m=n(4091);function u(e,t={}){let{rescale:n=!1,uniqueX:r=!1,xColumn:o=0,yColumn:a=1,bestGuess:i=!1,keepInfo:u,numberColumns:c=Number.MAX_SAFE_INTEGER,maxNumberColumns:p=Number.MAX_SAFE_INTEGER,minNumberColumns:f=2}=t;if(void 0!==u)throw new Error("keepInfo has been deprecated, pelase use the new method parseXYAndKeepInfo");e=(0,l.Z)(e),p=Math.max(p,o+1,a+1),f=Math.max(o+1,a+1,f);let d=e.split(/[\r\n]+/),h=[],x=[],g=0;if(d.forEach((e=>{if(e=e.trim(),/[0-9]+/.test(e)&&/^[0-9eE,;. \t+-]+$/.test(e)){let t=e.split(/,[; \t]+|[; \t]+/);1===t.length&&(t=e.split(/[,; \t]+/)),t&&t.length>=f&&t.length<=p&&(h.push(t.map((e=>parseFloat(e.replace(",","."))))),g++)}else e&&x.push({position:g,value:e})})),i){if(h[0]&&3===h[0].length&&void 0===t.xColumn&&void 0===t.yColumn){let e=!0;for(let t=0;t<h.length-1;t++)1!==Math.abs(h[t][0]-h[t+1][0])&&(e=!1);e&&(o=1,a=2)}if(h[0]&&h[0].length>3){const e=[];for(let t of h)for(let n=o;n<t.length;n+=2)e.push(t[n]);(0,s.GZ)(e)&&(c=2)}}if(c){const e=[];for(const t of h)for(let n=0;n<t.length;n+=c)e.push(t.slice(n,n+c));h=e}const b={x:h.map((e=>e[o])),y:h.map((e=>e[a]))};if(r&&function(e={}){const{x:t,y:n}=e;if(t.length<2)return;if(t.length!==n.length)throw new Error("The X and Y arrays mush have the same length");let r=t[0],o=0;for(let a=1;a<t.length;a++)r!==t[a]&&(o++,r=t[a],t[o]=t[a],a!==o&&(n[o]=0)),a!==o&&(n[o]+=n[a]);t.length=o+1,n.length=o+1}(b),n){let e=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(!(0,m.N)(e))throw new TypeError("input must be an array");if(0===e.length)throw new TypeError("input must not be empty");var n=t.fromIndex,r=void 0===n?0:n,o=t.toIndex,a=void 0===o?e.length:o;if(r<0||r>=e.length||!Number.isInteger(r))throw new Error("fromIndex must be a positive integer smaller than length");if(a<=r||a>e.length||!Number.isInteger(a))throw new Error("toIndex must be an integer greater than fromIndex and at most equal to length");for(var s=e[r],i=r+1;i<a;i++)e[i]>s&&(s=e[i]);return s}(b.y);for(let t=0;t<b.y.length;t++)b.y[t]/=e}return{info:x,data:b}}var c=n(814),p=n(1119);function f(){const[e,t]=(0,o.useState)([]),n=(0,i.AO)({direction:"horizontal"});return(0,o.useEffect)((()=>{fetch("/data/mass-peg1500.txt").then((e=>{e.text().then((e=>{t((0,s.G0)(function(e,t={}){return u(e,t).data}(e)))}))}))}),[]),o.createElement("div",null,o.createElement(i.XN,{width:800,height:300},o.createElement(i.eh,{data:e,xAxis:"x",yAxis:"y"}),o.createElement(i.RD,{id:"x",position:"bottom",label:"m/z",displayPrimaryGridLines:!0}),o.createElement(i.RD,{position:"left",label:"Relative intensity",paddingStart:.03}),o.createElement(i.uN,null,n.annotations)))}const d="import React from 'react';\nimport { xyToXYObject } from 'ml-spectra-processing';\nimport { useEffect, useState } from 'react';\nimport {\n  Annotations,\n  Axis,\n  LineSeries,\n  Plot,\n  PlotController,\n  SeriesPoint,\n  useAxisZoom,\n} from 'react-plot';\nimport { parseXY } from 'xy-parser';\n\nfunction ZoomablePlot() {\n  const [data, setData] = useState<SeriesPoint[]>([]);\n  const zoom = useAxisZoom({ direction: 'horizontal' });\n\n  useEffect(() => {\n    fetch('/data/mass-peg1500.txt').then((response) => {\n      response.text().then((text) => {\n        setData(xyToXYObject(parseXY(text)));\n      });\n    });\n  }, []);\n\n  return (\n    <div>\n      <Plot width={800} height={300}>\n        <LineSeries data={data} xAxis=\"x\" yAxis=\"y\" />\n        <Axis id=\"x\" position=\"bottom\" label=\"m/z\" displayPrimaryGridLines />\n        <Axis position=\"left\" label=\"Relative intensity\" paddingStart={0.03} />\n        <Annotations>{zoom.annotations}</Annotations>\n      </Plot>\n    </div>\n  );\n}\n\nexport default function MassPlot() {\n  return (\n    <PlotController>\n      <ZoomablePlot />\n    </PlotController>\n  );\n}\n",h=function(){return o.createElement(i.aE,null,o.createElement(f,null))};function x(e){const[t,n]=(0,o.useState)(!1);return o.createElement(o.Fragment,null,o.createElement("div",{className:"demo-example-wrapper"},o.createElement(h,null),o.createElement("div",{className:"demo-example-buttons"},o.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:o.createElement(p.Z,{name:"mass-plot",source:d,dependencies:{react:"^18.2.0","ml-spectra-processing":"^11.13.0","react-plot":"^0.20.4","xy-parser":"^5.0.2"}},(()=>o.createElement("button",{type:"submit"},"Open sandbox"))))),t&&o.createElement(c.Z,{className:"language-jsx"},d))}const g={},b="Mass spectrum",y={unversionedId:"experimental/mass",id:"experimental/mass",title:"Mass spectrum",description:"Example of code loading and converting a text file (using xy-parser)",source:"@site/docs/550_experimental/mass.md",sourceDirName:"550_experimental",slug:"/experimental/mass",permalink:"/experimental/mass",draft:!1,editUrl:"https://github.com/zakodium-oss/react-plot-docs/tree/main/docs/550_experimental/mass.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Infrared spectrum",permalink:"/experimental/ir"},next:{title:"NMR spectra",permalink:"/experimental/nmr"}},E={},v=[],w={toc:v};function A(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},w,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"mass-spectrum"},"Mass spectrum"),(0,a.kt)("p",null,"Example of code loading and converting a text file (using ",(0,a.kt)("inlineCode",{parentName:"p"},"xy-parser"),")"),(0,a.kt)(x,{mdxType:"MassDemo"}))}A.isMDXComponent=!0},7217:(e,t,n)=>{function r(e,t={}){if("string"==typeof e)return e;if(ArrayBuffer.isView(e)||e instanceof ArrayBuffer){const{encoding:n=o(e)}=t;return new TextDecoder(n).decode(e)}throw new TypeError("blob must be a string, ArrayBuffer or ArrayBufferView")}function o(e){const t=ArrayBuffer.isView(e)?new Uint8Array(e.buffer,e.byteOffset,e.byteLength):new Uint8Array(e);if(t.length>=2){if(254===t[0]&&255===t[1])return"utf-16be";if(255===t[0]&&254===t[1])return"utf-16le"}return function(e){if(!e)return!1;for(var t=0,n=e.length;t<n;)if(e[t]<=127)t++;else{if(e[t]>=194&&e[t]<=223){if(e[t+1]>>6==2){t+=2;continue}return!1}if((224===e[t]&&e[t+1]>=160&&e[t+1]<=191||237===e[t]&&e[t+1]>=128&&e[t+1]<=159)&&e[t+2]>>6==2)t+=3;else if((e[t]>=225&&e[t]<=236||e[t]>=238&&e[t]<=239)&&e[t+1]>>6==2&&e[t+2]>>6==2)t+=3;else{if(!(240===e[t]&&e[t+1]>=144&&e[t+1]<=191||e[t]>=241&&e[t]<=243&&e[t+1]>>6==2||244===e[t]&&e[t+1]>=128&&e[t+1]<=143)||e[t+2]>>6!=2||e[t+3]>>6!=2)return!1;t+=4}}return!0}(e)?"utf-8":"latin1"}n.d(t,{Z:()=>r})}}]);