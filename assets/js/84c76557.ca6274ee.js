"use strict";(self.webpackChunkdocs_react_plot=self.webpackChunkdocs_react_plot||[]).push([[595],{3471:function(e,n,t){t.r(n),t.d(n,{assets:function(){return W},contentTitle:function(){return P},default:function(){return V},frontMatter:function(){return D},metadata:function(){return B},toc:function(){return M}});var l=t(7462),a=t(3366),r=t(7294),i=t(3905),o=t(1465),s=t(1736),d=t(1119),y="import React from 'react';\nimport { Axis, BarSeries, Legend, Plot, RangeSeries } from 'react-plot';\n\nexport default function Illustrations() {\n  return (\n    <Plot width={300} height={300}>\n      <Legend />\n\n      <BarSeries\n        data={[\n          { x: 5, y: 20 },\n          { x: 1, y: 22 },\n          { x: 2, y: 24 },\n          { x: 3, y: 26 },\n          { x: 4, y: 28 },\n        ]}\n        lineStyle={{\n          stroke: 'green',\n        }}\n        displayMarkers\n        label=\"Label Bar series\"\n      />\n      <RangeSeries\n        data={[\n          { x: 0, y1: 11, y2: 10 },\n          { x: 1, y1: 6, y2: 3 },\n          { x: 3, y1: 25, y2: 20 },\n          { x: 4.5, y1: 11, y2: 9 },\n          { x: 6, y1: 14, y2: 11 },\n        ]}\n        lineStyle={{ fill: 'grey', stroke: 'black' }}\n        label=\"Label Range series\"\n      />\n      <Axis position=\"left\" paddingEnd=\"20%\" />\n    </Plot>\n  );\n}\n",p=function(){return r.createElement(o.XN,{width:300,height:300},r.createElement(o.De,null),r.createElement(o.QG,{data:[{x:5,y:20},{x:1,y:22},{x:2,y:24},{x:3,y:26},{x:4,y:28}],lineStyle:{stroke:"green"},displayMarkers:!0,label:"Label Bar series"}),r.createElement(o.sD,{data:[{x:0,y1:11,y2:10},{x:1,y1:6,y2:3},{x:3,y1:25,y2:20},{x:4.5,y1:11,y2:9},{x:6,y1:14,y2:11}],lineStyle:{fill:"grey",stroke:"black"},label:"Label Range series"}),r.createElement(o.RD,{position:"left",paddingEnd:"20%"}))};function c(e){var n=(0,r.useState)(!1),t=n[0],l=n[1];return r.createElement(r.Fragment,null,r.createElement("div",{className:"demo-example-wrapper"},r.createElement(p,null),r.createElement("div",{className:"demo-example-buttons"},r.createElement("button",{onClick:function(){return l((function(e){return!e}))},type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:r.createElement(d.Z,{name:"illustrations",source:y,dependencies:{react:"^17.0.2","react-plot":"^0.17.1"}},(function(){return r.createElement("button",{type:"submit"},"Open sandbox")})))),t&&r.createElement(s.Z,{className:"language-jsx"},y))}var m="import React from 'react';\nimport {\n  Axis,\n  BarSeries,\n  Heading,\n  Legend,\n  Plot,\n  RangeSeries,\n} from 'react-plot';\n\nexport default function Illustrations() {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'space-around',\n        flexWrap: 'wrap',\n        gap: '30px 10px',\n      }}\n    >\n      <Plot\n        width={250}\n        height={300}\n        plotViewportStyle={{\n          stroke: 'black',\n          strokeWidth: 1,\n        }}\n        seriesViewportStyle={{\n          stroke: 'red',\n          strokeWidth: 3,\n        }}\n        margin={{ right: 20, left: 10, top: 20 }}\n      >\n        <Heading title=\"embeded\" />\n        <Legend position=\"embedded\" />\n\n        <BarSeries\n          data={[\n            { x: 5, y: 20 },\n            { x: 1, y: 22 },\n            { x: 2, y: 24 },\n            { x: 3, y: 26 },\n            { x: 4, y: 28 },\n          ]}\n          lineStyle={{\n            stroke: 'green',\n          }}\n          displayMarkers\n          label=\"Label Bar series\"\n        />\n        <RangeSeries\n          data={[\n            { x: 0, y1: 11, y2: 10 },\n            { x: 1, y1: 6, y2: 3 },\n            { x: 3, y1: 25, y2: 20 },\n            { x: 4.5, y1: 11, y2: 9 },\n            { x: 6, y1: 14, y2: 11 },\n          ]}\n          lineStyle={{ fill: 'grey', stroke: 'black' }}\n          label=\"Label Range series\"\n        />\n        <Axis position=\"left\" paddingEnd=\"20%\" />\n      </Plot>\n      <Plot\n        width={250}\n        height={300}\n        plotViewportStyle={{\n          stroke: 'black',\n          strokeWidth: 1,\n        }}\n        seriesViewportStyle={{\n          stroke: 'red',\n          strokeWidth: 3,\n        }}\n        margin={{ right: 20, left: 10, top: 20 }}\n      >\n        <Heading title=\"top\" />\n        <Legend position=\"top\" />\n\n        <BarSeries\n          data={[\n            { x: 5, y: 20 },\n            { x: 1, y: 22 },\n            { x: 2, y: 24 },\n            { x: 3, y: 26 },\n            { x: 4, y: 28 },\n          ]}\n          lineStyle={{\n            stroke: 'green',\n          }}\n          displayMarkers\n          label=\"Label Bar series\"\n        />\n        <RangeSeries\n          data={[\n            { x: 0, y1: 11, y2: 10 },\n            { x: 1, y1: 6, y2: 3 },\n            { x: 3, y1: 25, y2: 20 },\n            { x: 4.5, y1: 11, y2: 9 },\n            { x: 6, y1: 14, y2: 11 },\n          ]}\n          lineStyle={{ fill: 'grey', stroke: 'black' }}\n          label=\"Label Range series\"\n        />\n        <Axis position=\"left\" paddingEnd=\"20%\" />\n      </Plot>\n      <Plot\n        width={250}\n        height={300}\n        plotViewportStyle={{\n          stroke: 'black',\n          strokeWidth: 1,\n        }}\n        seriesViewportStyle={{\n          stroke: 'red',\n          strokeWidth: 3,\n        }}\n        margin={{ right: 20, left: 10, top: 20 }}\n      >\n        <Heading title=\"bottom\" />\n        <Legend position=\"bottom\" />\n\n        <BarSeries\n          data={[\n            { x: 5, y: 20 },\n            { x: 1, y: 22 },\n            { x: 2, y: 24 },\n            { x: 3, y: 26 },\n            { x: 4, y: 28 },\n          ]}\n          lineStyle={{\n            stroke: 'green',\n          }}\n          displayMarkers\n          label=\"Label Bar series\"\n        />\n        <RangeSeries\n          data={[\n            { x: 0, y1: 11, y2: 10 },\n            { x: 1, y1: 6, y2: 3 },\n            { x: 3, y1: 25, y2: 20 },\n            { x: 4.5, y1: 11, y2: 9 },\n            { x: 6, y1: 14, y2: 11 },\n          ]}\n          lineStyle={{ fill: 'grey', stroke: 'black' }}\n          label=\"Label Range series\"\n        />\n        <Axis position=\"left\" paddingEnd=\"20%\" />\n      </Plot>\n      <Plot\n        width={387}\n        height={300}\n        plotViewportStyle={{\n          stroke: 'black',\n          strokeWidth: 1,\n        }}\n        seriesViewportStyle={{\n          stroke: 'red',\n          strokeWidth: 3,\n        }}\n        margin={{ right: 20, left: 10, top: 20 }}\n      >\n        <Heading title=\"left\" />\n        <Legend position=\"left\" />\n\n        <BarSeries\n          data={[\n            { x: 5, y: 20 },\n            { x: 1, y: 22 },\n            { x: 2, y: 24 },\n            { x: 3, y: 26 },\n            { x: 4, y: 28 },\n          ]}\n          lineStyle={{\n            stroke: 'green',\n          }}\n          displayMarkers\n          label=\"Label Bar series\"\n        />\n        <RangeSeries\n          data={[\n            { x: 0, y1: 11, y2: 10 },\n            { x: 1, y1: 6, y2: 3 },\n            { x: 3, y1: 25, y2: 20 },\n            { x: 4.5, y1: 11, y2: 9 },\n            { x: 6, y1: 14, y2: 11 },\n          ]}\n          lineStyle={{ fill: 'grey', stroke: 'black' }}\n          label=\"Label Range series\"\n        />\n        <Axis position=\"left\" paddingEnd=\"20%\" />\n      </Plot>\n      <Plot\n        width={387}\n        height={300}\n        plotViewportStyle={{\n          stroke: 'black',\n          strokeWidth: 1,\n        }}\n        seriesViewportStyle={{\n          stroke: 'red',\n          strokeWidth: 3,\n        }}\n        margin={{ right: 20, left: 10, top: 20 }}\n      >\n        <Heading title=\"right\" />\n        <Legend position=\"right\" />\n\n        <BarSeries\n          data={[\n            { x: 5, y: 20 },\n            { x: 1, y: 22 },\n            { x: 2, y: 24 },\n            { x: 3, y: 26 },\n            { x: 4, y: 28 },\n          ]}\n          lineStyle={{\n            stroke: 'green',\n          }}\n          displayMarkers\n          label=\"Label Bar series\"\n        />\n        <RangeSeries\n          data={[\n            { x: 0, y1: 11, y2: 10 },\n            { x: 1, y1: 6, y2: 3 },\n            { x: 3, y1: 25, y2: 20 },\n            { x: 4.5, y1: 11, y2: 9 },\n            { x: 6, y1: 14, y2: 11 },\n          ]}\n          lineStyle={{ fill: 'grey', stroke: 'black' }}\n          label=\"Label Range series\"\n        />\n        <Axis position=\"left\" paddingEnd=\"20%\" />\n      </Plot>\n    </div>\n  );\n}\n",u=function(){return r.createElement("div",{style:{display:"flex",justifyContent:"space-around",flexWrap:"wrap",gap:"30px 10px"}},r.createElement(o.XN,{width:250,height:300,plotViewportStyle:{stroke:"black",strokeWidth:1},seriesViewportStyle:{stroke:"red",strokeWidth:3},margin:{right:20,left:10,top:20}},r.createElement(o.X6,{title:"embeded"}),r.createElement(o.De,{position:"embedded"}),r.createElement(o.QG,{data:[{x:5,y:20},{x:1,y:22},{x:2,y:24},{x:3,y:26},{x:4,y:28}],lineStyle:{stroke:"green"},displayMarkers:!0,label:"Label Bar series"}),r.createElement(o.sD,{data:[{x:0,y1:11,y2:10},{x:1,y1:6,y2:3},{x:3,y1:25,y2:20},{x:4.5,y1:11,y2:9},{x:6,y1:14,y2:11}],lineStyle:{fill:"grey",stroke:"black"},label:"Label Range series"}),r.createElement(o.RD,{position:"left",paddingEnd:"20%"})),r.createElement(o.XN,{width:250,height:300,plotViewportStyle:{stroke:"black",strokeWidth:1},seriesViewportStyle:{stroke:"red",strokeWidth:3},margin:{right:20,left:10,top:20}},r.createElement(o.X6,{title:"top"}),r.createElement(o.De,{position:"top"}),r.createElement(o.QG,{data:[{x:5,y:20},{x:1,y:22},{x:2,y:24},{x:3,y:26},{x:4,y:28}],lineStyle:{stroke:"green"},displayMarkers:!0,label:"Label Bar series"}),r.createElement(o.sD,{data:[{x:0,y1:11,y2:10},{x:1,y1:6,y2:3},{x:3,y1:25,y2:20},{x:4.5,y1:11,y2:9},{x:6,y1:14,y2:11}],lineStyle:{fill:"grey",stroke:"black"},label:"Label Range series"}),r.createElement(o.RD,{position:"left",paddingEnd:"20%"})),r.createElement(o.XN,{width:250,height:300,plotViewportStyle:{stroke:"black",strokeWidth:1},seriesViewportStyle:{stroke:"red",strokeWidth:3},margin:{right:20,left:10,top:20}},r.createElement(o.X6,{title:"bottom"}),r.createElement(o.De,{position:"bottom"}),r.createElement(o.QG,{data:[{x:5,y:20},{x:1,y:22},{x:2,y:24},{x:3,y:26},{x:4,y:28}],lineStyle:{stroke:"green"},displayMarkers:!0,label:"Label Bar series"}),r.createElement(o.sD,{data:[{x:0,y1:11,y2:10},{x:1,y1:6,y2:3},{x:3,y1:25,y2:20},{x:4.5,y1:11,y2:9},{x:6,y1:14,y2:11}],lineStyle:{fill:"grey",stroke:"black"},label:"Label Range series"}),r.createElement(o.RD,{position:"left",paddingEnd:"20%"})),r.createElement(o.XN,{width:387,height:300,plotViewportStyle:{stroke:"black",strokeWidth:1},seriesViewportStyle:{stroke:"red",strokeWidth:3},margin:{right:20,left:10,top:20}},r.createElement(o.X6,{title:"left"}),r.createElement(o.De,{position:"left"}),r.createElement(o.QG,{data:[{x:5,y:20},{x:1,y:22},{x:2,y:24},{x:3,y:26},{x:4,y:28}],lineStyle:{stroke:"green"},displayMarkers:!0,label:"Label Bar series"}),r.createElement(o.sD,{data:[{x:0,y1:11,y2:10},{x:1,y1:6,y2:3},{x:3,y1:25,y2:20},{x:4.5,y1:11,y2:9},{x:6,y1:14,y2:11}],lineStyle:{fill:"grey",stroke:"black"},label:"Label Range series"}),r.createElement(o.RD,{position:"left",paddingEnd:"20%"})),r.createElement(o.XN,{width:387,height:300,plotViewportStyle:{stroke:"black",strokeWidth:1},seriesViewportStyle:{stroke:"red",strokeWidth:3},margin:{right:20,left:10,top:20}},r.createElement(o.X6,{title:"right"}),r.createElement(o.De,{position:"right"}),r.createElement(o.QG,{data:[{x:5,y:20},{x:1,y:22},{x:2,y:24},{x:3,y:26},{x:4,y:28}],lineStyle:{stroke:"green"},displayMarkers:!0,label:"Label Bar series"}),r.createElement(o.sD,{data:[{x:0,y1:11,y2:10},{x:1,y1:6,y2:3},{x:3,y1:25,y2:20},{x:4.5,y1:11,y2:9},{x:6,y1:14,y2:11}],lineStyle:{fill:"grey",stroke:"black"},label:"Label Range series"}),r.createElement(o.RD,{position:"left",paddingEnd:"20%"})))};function g(e){var n=(0,r.useState)(!1),t=n[0],l=n[1];return r.createElement(r.Fragment,null,r.createElement("div",{className:"demo-example-wrapper"},r.createElement(u,null),r.createElement("div",{className:"demo-example-buttons"},r.createElement("button",{onClick:function(){return l((function(e){return!e}))},type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:r.createElement(d.Z,{name:"illustrations",source:m,dependencies:{react:"^17.0.2","react-plot":"^0.17.1"}},(function(){return r.createElement("button",{type:"submit"},"Open sandbox")})))),t&&r.createElement(s.Z,{className:"language-jsx"},m))}var x="import React from 'react';\nimport { Axis, BarSeries, Legend, Plot, RangeSeries } from 'react-plot';\n\nexport default function Illustrations() {\n  return (\n    <Plot width={600} height={300}>\n      <Legend margin={100} position=\"left\" />\n\n      <RangeSeries\n        data={[\n          { x: 0, y1: 11, y2: 10 },\n          { x: 1, y1: 6, y2: 3 },\n          { x: 3, y1: 25, y2: 20 },\n          { x: 4.5, y1: 11, y2: 9 },\n          { x: 6, y1: 14, y2: 11 },\n        ]}\n        lineStyle={{ fill: 'grey', stroke: 'black' }}\n        label=\"Label Range series\"\n      />\n      <Axis position=\"left\" paddingEnd=\"20%\" />\n    </Plot>\n  );\n}\n",k=function(){return r.createElement(o.XN,{width:600,height:300},r.createElement(o.De,{margin:100,position:"left"}),r.createElement(o.sD,{data:[{x:0,y1:11,y2:10},{x:1,y1:6,y2:3},{x:3,y1:25,y2:20},{x:4.5,y1:11,y2:9},{x:6,y1:14,y2:11}],lineStyle:{fill:"grey",stroke:"black"},label:"Label Range series"}),r.createElement(o.RD,{position:"left",paddingEnd:"20%"}))};function b(e){var n=(0,r.useState)(!1),t=n[0],l=n[1];return r.createElement(r.Fragment,null,r.createElement("div",{className:"demo-example-wrapper"},r.createElement(k,null),r.createElement("div",{className:"demo-example-buttons"},r.createElement("button",{onClick:function(){return l((function(e){return!e}))},type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:r.createElement(d.Z,{name:"illustrations",source:x,dependencies:{react:"^17.0.2","react-plot":"^0.17.1"}},(function(){return r.createElement("button",{type:"submit"},"Open sandbox")})))),t&&r.createElement(s.Z,{className:"language-jsx"},x))}var h='import React, { useState } from \'react\';\nimport { Plot, Legend, LineSeries, Axis, Heading } from \'react-plot\';\n\nexport default function WithHiddenSerie() {\n  const [highlightSeries, setHighlightSeries] = useState<\n    Record<string, boolean>\n  >({});\n  const updateHightlight = (id: string) => {\n    setHighlightSeries((highlightSeries) => ({\n      ...highlightSeries,\n      [id]: !highlightSeries[id],\n    }));\n  };\n  const lineStyle = {\n    strokeWidth: ({ id }: { id: string }) => (highlightSeries[id] ? \'5\' : \'\'),\n  };\n  return (\n    <Plot width={600} height={300}>\n      <Heading title="Click on legend series" />\n      <Legend\n        labelStyle={{\n          fontWeight: ({ id }) => (highlightSeries[id] ? \'bold\' : \'normal\'),\n          cursor: \'hand\',\n        }}\n        onClick={({ id }) => updateHightlight(id)}\n        lineStyle={lineStyle}\n        position="right"\n      />\n      <LineSeries\n        data={[\n          { x: 0, y: 10 },\n          { x: 1, y: 12 },\n          { x: 2, y: 6 },\n          { x: 3, y: 3 },\n          { x: 4, y: 18 },\n        ]}\n        lineStyle={lineStyle}\n        xAxis="x"\n        yAxis="y"\n        label="Label line series"\n      />\n      <LineSeries\n        data={[\n          { x: 0, y: 20 },\n          { x: 1, y: 22 },\n          { x: 2, y: 24 },\n          { x: 3, y: 26 },\n          { x: 4, y: 28 },\n        ]}\n        markerStyle={{ fill: \'green\' }}\n        lineStyle={{\n          stroke: \'blue\',\n          ...lineStyle,\n        }}\n        markerShape="square"\n        displayMarkers\n        xAxis="x"\n        yAxis="y"\n        label="Label line series 2"\n      />\n      <Axis id="x" position="bottom" label="X" />\n      <Axis id="y" position="left" label="Y" />\n    </Plot>\n  );\n}\n',f=function(){var e=(0,r.useState)({}),n=e[0],t=e[1],l={strokeWidth:function(e){var t=e.id;return n[t]?"5":""}};return r.createElement(o.XN,{width:600,height:300},r.createElement(o.X6,{title:"Click on legend series"}),r.createElement(o.De,{labelStyle:{fontWeight:function(e){var t=e.id;return n[t]?"bold":"normal"},cursor:"hand"},onClick:function(e){return function(e){t((function(n){var t;return Object.assign({},n,((t={})[e]=!n[e],t))}))}(e.id)},lineStyle:l,position:"right"}),r.createElement(o.eh,{data:[{x:0,y:10},{x:1,y:12},{x:2,y:6},{x:3,y:3},{x:4,y:18}],lineStyle:l,xAxis:"x",yAxis:"y",label:"Label line series"}),r.createElement(o.eh,{data:[{x:0,y:20},{x:1,y:22},{x:2,y:24},{x:3,y:26},{x:4,y:28}],markerStyle:{fill:"green"},lineStyle:Object.assign({stroke:"blue"},l),markerShape:"square",displayMarkers:!0,xAxis:"x",yAxis:"y",label:"Label line series 2"}),r.createElement(o.RD,{id:"x",position:"bottom",label:"X"}),r.createElement(o.RD,{id:"y",position:"left",label:"Y"}))};function S(e){var n=(0,r.useState)(!1),t=n[0],l=n[1];return r.createElement(r.Fragment,null,r.createElement("div",{className:"demo-example-wrapper"},r.createElement(f,null),r.createElement("div",{className:"demo-example-buttons"},r.createElement("button",{onClick:function(){return l((function(e){return!e}))},type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:r.createElement(d.Z,{name:"with-hidden-serie",source:h,dependencies:{react:"^17.0.2","react-plot":"^0.17.1"}},(function(){return r.createElement("button",{type:"submit"},"Open sandbox")})))),t&&r.createElement(s.Z,{className:"language-jsx"},h))}var E='import React from \'react\';\nimport {\n  Axis,\n  BarSeries,\n  Heading,\n  Legend,\n  Plot,\n  RangeSeries,\n} from \'react-plot\';\n\nexport default function Illustrations() {\n  return (\n    <Plot width={600} height={300}>\n      <Heading title="Click on legend series" />\n      <Legend showHide position="right" />\n\n      <BarSeries\n        data={[\n          { x: 5, y: 20 },\n          { x: 1, y: 22 },\n          { x: 2, y: 24 },\n          { x: 3, y: 26 },\n          { x: 4, y: 28 },\n        ]}\n        lineStyle={{\n          stroke: \'green\',\n        }}\n        displayMarkers\n        label="Label Bar series"\n      />\n      <RangeSeries\n        data={[\n          { x: 0, y1: 11, y2: 10 },\n          { x: 1, y1: 6, y2: 3 },\n          { x: 3, y1: 25, y2: 20 },\n          { x: 4.5, y1: 11, y2: 9 },\n          { x: 6, y1: 14, y2: 11 },\n        ]}\n        lineStyle={{ fill: \'grey\', stroke: \'black\' }}\n        label="Label Range series"\n      />\n      <Axis position="left" paddingEnd="20%" />\n    </Plot>\n  );\n}\n',N=function(){return r.createElement(o.XN,{width:600,height:300},r.createElement(o.X6,{title:"Click on legend series"}),r.createElement(o.De,{showHide:!0,position:"right"}),r.createElement(o.QG,{data:[{x:5,y:20},{x:1,y:22},{x:2,y:24},{x:3,y:26},{x:4,y:28}],lineStyle:{stroke:"green"},displayMarkers:!0,label:"Label Bar series"}),r.createElement(o.sD,{data:[{x:0,y1:11,y2:10},{x:1,y1:6,y2:3},{x:3,y1:25,y2:20},{x:4.5,y1:11,y2:9},{x:6,y1:14,y2:11}],lineStyle:{fill:"grey",stroke:"black"},label:"Label Range series"}),r.createElement(o.RD,{position:"left",paddingEnd:"20%"}))};function L(e){var n=(0,r.useState)(!1),t=n[0],l=n[1];return r.createElement(r.Fragment,null,r.createElement("div",{className:"demo-example-wrapper"},r.createElement(N,null),r.createElement("div",{className:"demo-example-buttons"},r.createElement("button",{onClick:function(){return l((function(e){return!e}))},type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:r.createElement(d.Z,{name:"illustrations",source:E,dependencies:{react:"^17.0.2","react-plot":"^0.17.1"}},(function(){return r.createElement("button",{type:"submit"},"Open sandbox")})))),t&&r.createElement(s.Z,{className:"language-jsx"},E))}var C="import React from 'react';\nimport { Axis, BarSeries, Legend, Plot, RangeSeries } from 'react-plot';\n\nexport default function Illustrations() {\n  return (\n    <Plot width={300} height={300}>\n      <Legend right={-200} bottom={0} />\n\n      <BarSeries\n        data={[\n          { x: 5, y: 20 },\n          { x: 1, y: 22 },\n          { x: 2, y: 24 },\n          { x: 3, y: 26 },\n          { x: 4, y: 28 },\n        ]}\n        lineStyle={{\n          stroke: 'green',\n        }}\n        displayMarkers\n        label=\"Label Bar series\"\n      />\n      <RangeSeries\n        data={[\n          { x: 0, y1: 11, y2: 10 },\n          { x: 1, y1: 6, y2: 3 },\n          { x: 3, y1: 25, y2: 20 },\n          { x: 4.5, y1: 11, y2: 9 },\n          { x: 6, y1: 14, y2: 11 },\n        ]}\n        lineStyle={{ fill: 'grey', stroke: 'black' }}\n        label=\"Label Range series\"\n      />\n      <Axis position=\"left\" paddingEnd=\"20%\" />\n    </Plot>\n  );\n}\n",w=function(){return r.createElement(o.XN,{width:300,height:300},r.createElement(o.De,{right:-200,bottom:0}),r.createElement(o.QG,{data:[{x:5,y:20},{x:1,y:22},{x:2,y:24},{x:3,y:26},{x:4,y:28}],lineStyle:{stroke:"green"},displayMarkers:!0,label:"Label Bar series"}),r.createElement(o.sD,{data:[{x:0,y1:11,y2:10},{x:1,y1:6,y2:3},{x:3,y1:25,y2:20},{x:4.5,y1:11,y2:9},{x:6,y1:14,y2:11}],lineStyle:{fill:"grey",stroke:"black"},label:"Label Range series"}),r.createElement(o.RD,{position:"left",paddingEnd:"20%"}))};function v(e){var n=(0,r.useState)(!1),t=n[0],l=n[1];return r.createElement(r.Fragment,null,r.createElement("div",{className:"demo-example-wrapper"},r.createElement(w,null),r.createElement("div",{className:"demo-example-buttons"},r.createElement("button",{onClick:function(){return l((function(e){return!e}))},type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:r.createElement(d.Z,{name:"illustrations",source:C,dependencies:{react:"^17.0.2","react-plot":"^0.17.1"}},(function(){return r.createElement("button",{type:"submit"},"Open sandbox")})))),t&&r.createElement(s.Z,{className:"language-jsx"},C))}var R=["components"],D={},P="Legend",B={unversionedId:"illusrations/legend",id:"illusrations/legend",title:"Legend",description:"Legend is an component that describe each of Series of the Plot, it's also used to make interaction with them.",source:"@site/docs/450_illusrations/200_legend.md",sourceDirName:"450_illusrations",slug:"/illusrations/legend",permalink:"/illusrations/legend",editUrl:"https://github.com/zakodium-oss/react-plot-docs/tree/main/docs/450_illusrations/200_legend.md",tags:[],version:"current",sidebarPosition:200,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Heading",permalink:"/illusrations/heading"},next:{title:"Data",permalink:"/types/data"}},W={},M=[{value:"Restriction",id:"restriction",level:2},{value:"Props",id:"props",level:2}],A={toc:M};function V(e){var n=e.components,t=(0,a.Z)(e,R);return(0,i.kt)("wrapper",(0,l.Z)({},A,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"legend"},"Legend"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Legend")," is an component that describe each of ",(0,i.kt)("a",{parentName:"p",href:"/series/intro"},(0,i.kt)("inlineCode",{parentName:"a"},"Series"))," of the ",(0,i.kt)("inlineCode",{parentName:"p"},"Plot"),", it's also used to make interaction with them."),(0,i.kt)(c,{mdxType:"LegendDemo"}),(0,i.kt)("h2",{id:"restriction"},"Restriction"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"In order to add a ",(0,i.kt)("inlineCode",{parentName:"li"},"Serie")," in ",(0,i.kt)("inlineCode",{parentName:"li"},"Legend")," you must specifie it ",(0,i.kt)("inlineCode",{parentName:"li"},"label")),(0,i.kt)("li",{parentName:"ul"},"It's not possible to set ",(0,i.kt)("inlineCode",{parentName:"li"},"top")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"bottom"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"left")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"right")," offsets in the same time")),(0,i.kt)("h2",{id:"props"},"Props"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"position:")," determine Legend position in the plot",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"p"},"'top' | 'bottom' | 'left' | 'right'| 'embedded'"),(0,i.kt)("br",null),"\ndefault: ",(0,i.kt)("inlineCode",{parentName:"p"},"'embedded'")),(0,i.kt)(g,{mdxType:"LegendPosition"})),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"margin:")," add spacing out of legend ",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),(0,i.kt)("br",null),"\ndefault: ",(0,i.kt)("inlineCode",{parentName:"p"},"10")),(0,i.kt)(b,{mdxType:"LegendMargin"})),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"onClick:")," Create a callback when clicking to one of legend elements, event: MouseEvent data, id: id of clicked serie ",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"p"},"(args: {event: React.MouseEvent<SVGGElement, MouseEvent>;id: string;}) => void"),(0,i.kt)("br",null))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"labelStyle:")," change legend style in general or for specific serie's label",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("a",{parentName:"p",href:"/illusrations/intro"},(0,i.kt)("inlineCode",{parentName:"a"},"CSSFuncProps")),(0,i.kt)("br",null),"\ndefault: ",(0,i.kt)("inlineCode",{parentName:"p"},"{}"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"lineStyle:")," change line style in general or for specific serie's label ",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"p"},"CSSFuncProps"),(0,i.kt)("br",null),"\ndefault: ",(0,i.kt)("inlineCode",{parentName:"p"},"{}")),(0,i.kt)(S,{mdxType:"LegendOnClick"})),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"showHide:")," activate show/hide functionalit\xe9 that allow you to hide and show series when clicking on it in the legend",(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean"),(0,i.kt)("br",null),"\ndefault: ",(0,i.kt)("inlineCode",{parentName:"p"},"false")),(0,i.kt)(L,{mdxType:"LegendShowHide"})),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"top")," change top legend offset that cannot defined with ",(0,i.kt)("inlineCode",{parentName:"p"},"bottom"),(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),(0,i.kt)("br",null))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"bottom")," change bottom legend offset that cannot defined with ",(0,i.kt)("inlineCode",{parentName:"p"},"top"),(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),(0,i.kt)("br",null))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"left")," change top legend offset that cannot defined with ",(0,i.kt)("inlineCode",{parentName:"p"},"right"),(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),(0,i.kt)("br",null))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"right")," change top legend offset that cannot defined with ",(0,i.kt)("inlineCode",{parentName:"p"},"left"),(0,i.kt)("br",null),"\ntype: ",(0,i.kt)("inlineCode",{parentName:"p"},"number"),(0,i.kt)("br",null)),(0,i.kt)(v,{mdxType:"LegendOffset"}))))}V.isMDXComponent=!0}}]);