"use strict";(self.webpackChunkdocs_react_plot=self.webpackChunkdocs_react_plot||[]).push([[527],{6118:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return E},default:function(){return k},frontMatter:function(){return y},metadata:function(){return g},toc:function(){return h}});var r=n(7462),a=n(3366),o=n(7294),i=n(3905),s=n(4100),l=n(1059),m=n(3430),c=n(1736),u=n(1119);function p(){var e=(0,o.useState)([]),t=e[0],n=e[1],r=(0,l.AO)({direction:"horizontal"});return(0,o.useEffect)((function(){fetch("/data/mass-peg1500.txt").then((function(e){e.text().then((function(e){n((0,s.G0)((0,m._)(e)))}))}))}),[]),o.createElement("div",null,o.createElement(l.XN,{width:800,height:300},o.createElement(l.eh,{data:t,xAxis:"x",yAxis:"y"}),o.createElement(l.RD,{id:"x",position:"bottom",label:"m/z",displayPrimaryGridLines:!0}),o.createElement(l.RD,{position:"left",label:"Relative intensity",paddingStart:.03}),o.createElement(l.uN,null,r.annotations)))}var d="import React from 'react';\nimport { xyToXYObject } from 'ml-spectra-processing';\nimport { useEffect, useState } from 'react';\nimport {\n  Annotations,\n  Axis,\n  LineSeries,\n  Plot,\n  PlotController,\n  SeriesPoint,\n  useAxisZoom,\n} from 'react-plot';\nimport { parseXY } from 'xy-parser';\n\nfunction ZoomablePlot() {\n  const [data, setData] = useState<SeriesPoint[]>([]);\n  const zoom = useAxisZoom({ direction: 'horizontal' });\n\n  useEffect(() => {\n    fetch('/data/mass-peg1500.txt').then((response) => {\n      response.text().then((text) => {\n        setData(xyToXYObject(parseXY(text)));\n      });\n    });\n  }, []);\n\n  return (\n    <div>\n      <Plot width={800} height={300}>\n        <LineSeries data={data} xAxis=\"x\" yAxis=\"y\" />\n        <Axis id=\"x\" position=\"bottom\" label=\"m/z\" displayPrimaryGridLines />\n        <Axis position=\"left\" label=\"Relative intensity\" paddingStart={0.03} />\n        <Annotations>{zoom.annotations}</Annotations>\n      </Plot>\n    </div>\n  );\n}\n\nexport default function MassPlot() {\n  return (\n    <PlotController>\n      <ZoomablePlot />\n    </PlotController>\n  );\n}\n",x=function(){return o.createElement(l.aE,null,o.createElement(p,null))};function f(e){var t=(0,o.useState)(!1),n=t[0],r=t[1];return o.createElement(o.Fragment,null,o.createElement("div",{className:"demo-example-wrapper"},o.createElement(x,null),o.createElement("div",{className:"demo-example-buttons"},o.createElement("button",{onClick:function(){return r((function(e){return!e}))},type:"button",style:{backgroundColor:n?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:o.createElement(u.Z,{name:"mass-plot",source:d,dependencies:{react:"^17.0.2","ml-spectra-processing":"^9.1.0","react-plot":"^0.16.0","xy-parser":"^5.0.1"}},(function(){return o.createElement("button",{type:"submit"},"Open sandbox")})))),n&&o.createElement(c.Z,{className:"language-jsx"},d))}var b=["components"],y={},E="Mass spectrum",g={unversionedId:"experimental/mass",id:"experimental/mass",title:"Mass spectrum",description:"Example of code loading and converting a text file (using xy-parser)",source:"@site/docs/500_experimental/mass.md",sourceDirName:"500_experimental",slug:"/experimental/mass",permalink:"/experimental/mass",editUrl:"https://github.com/zakodium/react-plot-docs/tree/main/docs/500_experimental/mass.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Infrared spectrum",permalink:"/experimental/ir"},next:{title:"NMR spectra",permalink:"/experimental/nmr"}},h=[],v={toc:h};function k(e){var t=e.components,n=(0,a.Z)(e,b);return(0,i.kt)("wrapper",(0,r.Z)({},v,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"mass-spectrum"},"Mass spectrum"),(0,i.kt)("p",null,"Example of code loading and converting a text file (using ",(0,i.kt)("inlineCode",{parentName:"p"},"xy-parser"),")"),(0,i.kt)(f,{mdxType:"MassDemo"}))}k.isMDXComponent=!0}}]);