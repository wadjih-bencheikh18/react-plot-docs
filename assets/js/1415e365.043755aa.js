"use strict";(self.webpackChunkdocs_react_plot=self.webpackChunkdocs_react_plot||[]).push([[5905],{3923:(e,t,n)=>{n.d(t,{Z:()=>d});var a=n(7294),o=n(8154),r=n(814),l=n(1119);function i(){const e=(0,o.Q6)();return a.createElement(o.XN,{width:300,height:300},a.createElement(o.X6,{title:"Draw a rectangle"}),a.createElement(o.eh,{data:[{x:1,y:1},{x:2,y:2},{x:3,y:3},{x:4,y:2},{x:5,y:1}]}),a.createElement(o.uN,null,e.annotations))}const s="import React from 'react';\nimport {\n  Annotations,\n  Heading,\n  LineSeries,\n  Plot,\n  PlotController,\n  useDrawRectangle,\n} from 'react-plot';\n\nfunction DrawRectanglePlot() {\n  const drawRectangle = useDrawRectangle();\n  return (\n    <Plot width={300} height={300}>\n      <Heading title=\"Draw a rectangle\" />\n      <LineSeries\n        data={[\n          { x: 1, y: 1 },\n          { x: 2, y: 2 },\n          { x: 3, y: 3 },\n          { x: 4, y: 2 },\n          { x: 5, y: 1 },\n        ]}\n      />\n      <Annotations>{drawRectangle.annotations}</Annotations>\n    </Plot>\n  );\n}\n\nexport default function UseDrawRectangle() {\n  return (\n    <PlotController>\n      <DrawRectanglePlot />\n    </PlotController>\n  );\n}\n",c=function(){return a.createElement(o.aE,null,a.createElement(i,null))};function d(e){const[t,n]=(0,a.useState)(!1);return a.createElement(a.Fragment,null,a.createElement("div",{className:"demo-example-wrapper"},a.createElement(c,null),a.createElement("div",{className:"demo-example-buttons"},a.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:a.createElement(l.Z,{name:"use-draw-rectangle",source:s,dependencies:{react:"^18.2.0","react-plot":"^0.20.4"}},(()=>a.createElement("button",{type:"submit"},"Open sandbox"))))),t&&a.createElement(r.Z,{className:"language-jsx"},s))}},7991:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>g,contentTitle:()=>w,default:()=>P,frontMatter:()=>h,metadata:()=>k,toc:()=>y});var a=n(7462),o=n(7294),r=n(3905),l=n(3923),i=n(8154),s=n(814),c=n(1119);function d(){const e=(0,i.D2)();return o.createElement(i.XN,{width:300,height:300},o.createElement(i.X6,{title:"Draw a path"}),o.createElement(i.eh,{data:[{x:1,y:1},{x:2,y:2},{x:3,y:3},{x:4,y:2},{x:5,y:1}]}),o.createElement(i.uN,null,e.annotations))}const u="import React from 'react';\nimport {\n  Annotations,\n  Heading,\n  LineSeries,\n  Plot,\n  PlotController,\n  useDrawPath,\n} from 'react-plot';\n\nfunction DrawPathPlot() {\n  const drawPath = useDrawPath();\n  return (\n    <Plot width={300} height={300}>\n      <Heading title=\"Draw a path\" />\n      <LineSeries\n        data={[\n          { x: 1, y: 1 },\n          { x: 2, y: 2 },\n          { x: 3, y: 3 },\n          { x: 4, y: 2 },\n          { x: 5, y: 1 },\n        ]}\n      />\n      <Annotations>{drawPath.annotations}</Annotations>\n    </Plot>\n  );\n}\n\nexport default function UseDrawPath() {\n  return (\n    <PlotController>\n      <DrawPathPlot />\n    </PlotController>\n  );\n}\n",m=function(){return o.createElement(i.aE,null,o.createElement(d,null))};function p(e){const[t,n]=(0,o.useState)(!1);return o.createElement(o.Fragment,null,o.createElement("div",{className:"demo-example-wrapper"},o.createElement(m,null),o.createElement("div",{className:"demo-example-buttons"},o.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:o.createElement(c.Z,{name:"use-draw-path",source:u,dependencies:{react:"^18.2.0","react-plot":"^0.20.4"}},(()=>o.createElement("button",{type:"submit"},"Open sandbox"))))),t&&o.createElement(s.Z,{className:"language-jsx"},u))}const h={},w="Draw",k={unversionedId:"hooks/draw",id:"hooks/draw",title:"Draw",description:"More advanced hook will not only monitor the movement of the mouse but will also return annotations that can directly be drawn in the Plot.",source:"@site/docs/400_hooks/200_draw.md",sourceDirName:"400_hooks",slug:"/hooks/draw",permalink:"/hooks/draw",draft:!1,editUrl:"https://github.com/zakodium-oss/react-plot-docs/tree/main/docs/400_hooks/200_draw.md",tags:[],version:"current",sidebarPosition:200,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Basic",permalink:"/hooks/basic"},next:{title:"Functional",permalink:"/hooks/functional"}},g={},y=[{value:"useDrawRectangle",id:"usedrawrectangle",level:2},{value:"useDrawPath",id:"usedrawpath",level:2}],x={toc:y};function P(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},x,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"draw"},"Draw"),(0,r.kt)("p",null,"More advanced hook will not only monitor the movement of the mouse but will also return ",(0,r.kt)("inlineCode",{parentName:"p"},"annotations")," that can directly be drawn in the ",(0,r.kt)("inlineCode",{parentName:"p"},"Plot"),"."),(0,r.kt)("p",null,"currently we support the following drawing hooks:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"/hooks/draw#usedrawrectangle"},"useDrawRectangle"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"/hooks/draw#usedrawpath"},"useDrawPath")))),(0,r.kt)("h2",{id:"usedrawrectangle"},"useDrawRectangle"),(0,r.kt)("p",null,"There are 3 steps in order ot implement the draw rectangle:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"wrap your plot component in ",(0,r.kt)("inlineCode",{parentName:"li"},"<PlotController>")),(0,r.kt)("li",{parentName:"ul"},"add the hook: ",(0,r.kt)("inlineCode",{parentName:"li"},"const drawRectangle = useDrawRectangle();")),(0,r.kt)("li",{parentName:"ul"},"add the ",(0,r.kt)("inlineCode",{parentName:"li"},"drawRectangle.annotations")," in order to draw the zoom rectangle: ",(0,r.kt)("inlineCode",{parentName:"li"},"<Annotations>{drawRectangle.annotations}</Annotations>"))),(0,r.kt)(l.Z,{mdxType:"UseDrawRectangleDemo"}),(0,r.kt)("h2",{id:"usedrawpath"},"useDrawPath"),(0,r.kt)("p",null,"There are 3 steps in order to implement the draw path:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"wrap your plot component in ",(0,r.kt)("inlineCode",{parentName:"li"},"<PlotController>")),(0,r.kt)("li",{parentName:"ul"},"add the hook: ",(0,r.kt)("inlineCode",{parentName:"li"},"const drawPath = useDrawPath();")),(0,r.kt)("li",{parentName:"ul"},"add the ",(0,r.kt)("inlineCode",{parentName:"li"},"drawPath.annotations")," in order to draw the path: ",(0,r.kt)("inlineCode",{parentName:"li"},"<Annotations>{drawPath.annotations}</Annotations>"))),(0,r.kt)(p,{mdxType:"UseDrawPathDemo"}))}P.isMDXComponent=!0}}]);