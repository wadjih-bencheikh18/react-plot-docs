"use strict";(self.webpackChunkdocs_react_plot=self.webpackChunkdocs_react_plot||[]).push([[3206],{7050:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>b,default:()=>E,frontMatter:()=>f,metadata:()=>k,toc:()=>y});var a=n(7462),l=n(7294),r=n(3905),o=n(8154),i=n(814),s=n(1119);const m="import React from 'react';\nimport { Plot, LineSeries } from 'react-plot';\n\nexport default function Series() {\n  return (\n    <Plot width={300} height={300}>\n      <LineSeries\n        data={[\n          { x: 1, y: 1 },\n          { x: 2, y: 2 },\n          { x: 3, y: 3 },\n          { x: 4, y: 2 },\n          { x: 5, y: 1 },\n        ]}\n      />\n    </Plot>\n  );\n}\n",c=function(){return l.createElement(o.XN,{width:300,height:300},l.createElement(o.eh,{data:[{x:1,y:1},{x:2,y:2},{x:3,y:3},{x:4,y:2},{x:5,y:1}]}))};function u(e){const[t,n]=(0,l.useState)(!1);return l.createElement(l.Fragment,null,l.createElement("div",{className:"demo-example-wrapper"},l.createElement(c,null),l.createElement("div",{className:"demo-example-buttons"},l.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:l.createElement(s.Z,{name:"series",source:m,dependencies:{react:"^18.2.0","react-plot":"^0.20.4"}},(()=>l.createElement("button",{type:"submit"},"Open sandbox"))))),t&&l.createElement(i.Z,{className:"language-jsx"},m))}const p='import React from \'react\';\nimport { Plot, Axis, ParallelAxis } from \'react-plot\';\n\nexport default function Series() {\n  return (\n    <Plot width={600} height={300}>\n      <Axis min={0} max={5} position="left" label="Left Axis" />\n      <Axis min={0} max={10} id="x" position="bottom" label="Bottom Axis" />\n      <ParallelAxis id="x" label="Parallel Axis" />\n    </Plot>\n  );\n}\n',d=function(){return l.createElement(o.XN,{width:600,height:300},l.createElement(o.RD,{min:0,max:5,position:"left",label:"Left Axis"}),l.createElement(o.RD,{min:0,max:10,id:"x",position:"bottom",label:"Bottom Axis"}),l.createElement(o.u$,{id:"x",label:"Parallel Axis"}))};function x(e){const[t,n]=(0,l.useState)(!1);return l.createElement(l.Fragment,null,l.createElement("div",{className:"demo-example-wrapper"},l.createElement(d,null),l.createElement("div",{className:"demo-example-buttons"},l.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:l.createElement(s.Z,{name:"series",source:p,dependencies:{react:"^18.2.0","react-plot":"^0.20.4"}},(()=>l.createElement("button",{type:"submit"},"Open sandbox"))))),t&&l.createElement(i.Z,{className:"language-jsx"},p))}const f={},b="Introduction",k={unversionedId:"axes/intro",id:"axes/intro",title:"Introduction",description:"Axes are one of the main components in react-plot",source:"@site/docs/200_axes/000_intro.md",sourceDirName:"200_axes",slug:"/axes/intro",permalink:"/axes/intro",draft:!1,editUrl:"https://github.com/zakodium-oss/react-plot-docs/tree/main/docs/200_axes/000_intro.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"RangeSeries",permalink:"/series/rangeSeries"},next:{title:"Axis",permalink:"/axes/axis"}},h={},y=[{value:"Default Axes",id:"default-axes",level:2},{value:"Example",id:"example",level:2}],g={toc:y};function E(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"Axes are one of the main components in ",(0,r.kt)("inlineCode",{parentName:"p"},"react-plot")," ",(0,r.kt)("br",null)),(0,r.kt)("p",null,"There are currently 2 different components to represent your Axes:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"/axes/axis"},"Axis"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},(0,r.kt)("a",{parentName:"strong",href:"/axes/parallelAxis"},"Parallel Axis")))),(0,r.kt)("p",null,"They must be direct children of the ",(0,r.kt)("inlineCode",{parentName:"p"},"Plot")," component and you may have several on the same plot. ",(0,r.kt)("br",null)),(0,r.kt)("h2",{id:"default-axes"},"Default Axes"),(0,r.kt)("p",null,"Adding any ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"/series/intro"},"Series"))," in your plot will create automatically two basic axis ",(0,r.kt)("br",null)),(0,r.kt)(u,{mdxType:"DefaultAxis"}),(0,r.kt)("h2",{id:"example"},"Example"),(0,r.kt)(x,{mdxType:"AxesDemo"}))}E.isMDXComponent=!0}}]);