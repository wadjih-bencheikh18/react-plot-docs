"use strict";(self.webpackChunkdocs_react_plot=self.webpackChunkdocs_react_plot||[]).push([[9888],{1058:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>f,contentTitle:()=>k,default:()=>N,frontMatter:()=>x,metadata:()=>h,toc:()=>b});var a=n(7462),i=n(7294),r=n(3905),l=n(8154),s=n(814),o=n(1119);const p="import React from 'react';\nimport { Plot, LineSeries } from 'react-plot';\n\nexport default function Series() {\n  return (\n    <Plot width={300} height={300}>\n      <LineSeries\n        data={[\n          { x: 1, y: 0 },\n          { x: 2, y: 1 },\n          { x: 3, y: 2 },\n          { x: 4, y: 1 },\n          { x: 5, y: 2 },\n          { x: 6, y: 3 },\n        ]}\n      />\n    </Plot>\n  );\n}\n",d=function(){return i.createElement(l.XN,{width:300,height:300},i.createElement(l.eh,{data:[{x:1,y:0},{x:2,y:1},{x:3,y:2},{x:4,y:1},{x:5,y:2},{x:6,y:3}]}))};function m(e){const[t,n]=(0,i.useState)(!1);return i.createElement(i.Fragment,null,i.createElement("div",{className:"demo-example-wrapper"},i.createElement(d,null),i.createElement("div",{className:"demo-example-buttons"},i.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:i.createElement(o.Z,{name:"series",source:p,dependencies:{react:"^18.2.0","react-plot":"^0.20.4"}},(()=>i.createElement("button",{type:"submit"},"Open sandbox"))))),t&&i.createElement(s.Z,{className:"language-jsx"},p))}const u="import React from 'react';\nimport { Plot, RangeSeries } from 'react-plot';\n\nexport default function Series() {\n  return (\n    <Plot width={300} height={300}>\n      <RangeSeries\n        data={[\n          { x: 1, y1: 0, y2: 2 },\n          { x: 2, y1: 2, y2: 3 },\n          { x: 3, y1: 3, y2: 4 },\n          { x: 4, y1: 2, y2: 4 },\n          { x: 5, y1: 1, y2: 5 },\n        ]}\n      />\n    </Plot>\n  );\n}\n",c=function(){return i.createElement(l.XN,{width:300,height:300},i.createElement(l.sD,{data:[{x:1,y1:0,y2:2},{x:2,y1:2,y2:3},{x:3,y1:3,y2:4},{x:4,y1:2,y2:4},{x:5,y1:1,y2:5}]}))};function y(e){const[t,n]=(0,i.useState)(!1);return i.createElement(i.Fragment,null,i.createElement("div",{className:"demo-example-wrapper"},i.createElement(c,null),i.createElement("div",{className:"demo-example-buttons"},i.createElement("button",{onClick:()=>n((e=>!e)),type:"button",style:{backgroundColor:t?"#dbeafe":void 0}},"Code"),e.noCodesandbox?null:i.createElement(o.Z,{name:"series",source:u,dependencies:{react:"^18.2.0","react-plot":"^0.20.4"}},(()=>i.createElement("button",{type:"submit"},"Open sandbox"))))),t&&i.createElement(s.Z,{className:"language-jsx"},u))}const x={},k="Data",h={unversionedId:"types/data",id:"types/data",title:"Data",description:"this type is used to define Series data type",source:"@site/docs/500_types/data.md",sourceDirName:"500_types",slug:"/types/data",permalink:"/types/data",draft:!1,editUrl:"https://github.com/zakodium-oss/react-plot-docs/tree/main/docs/500_types/data.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Legend",permalink:"/illustrations/legend"},next:{title:"ScalarValue",permalink:"/types/scalarValue"}},f={},b=[{value:"1. SeriesPoint",id:"1-seriespoint",level:2},{value:"Definition",id:"definition",level:3},{value:"Utilities",id:"utilities",level:3},{value:"Example",id:"example",level:3},{value:"2. RangeSeriesPoint",id:"2-rangeseriespoint",level:2},{value:"Definition",id:"definition-1",level:3},{value:"Utilities",id:"utilities-1",level:3},{value:"Example",id:"example-1",level:3}],g={toc:b};function N(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"data"},"Data"),(0,r.kt)("p",null,"this type is used to define ",(0,r.kt)("a",{parentName:"p",href:"/series/intro"},"Series")," data type"),(0,r.kt)("p",null,"The used data must be extended from the following types:"),(0,r.kt)("h2",{id:"1-seriespoint"},"1. SeriesPoint"),(0,r.kt)("h3",{id:"definition"},"Definition"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"In Typescript:")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Array<{x:number,y:number}>"),(0,r.kt)("br",null),"\n",(0,r.kt)("strong",{parentName:"p"},"Explanation:")," Array of points, each point must have two coordinates as a ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", x for horizantal ",(0,r.kt)("a",{parentName:"p",href:"/axes/intro"},"Axis")," and y for vertical ",(0,r.kt)("a",{parentName:"p",href:"/axes/intro"},"Axis"),(0,r.kt)("br",null),"\n",(0,r.kt)("strong",{parentName:"p"},"Example:"),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"[ { x: 1, y: 1 }, { x: 2, y: 5 }, { x: 3, y: 3 }, { x: 4, y: 2 }, { x: 5, y: 1 } ] ")),(0,r.kt)("h3",{id:"utilities"},"Utilities"),(0,r.kt)("p",null,"This type is used in :"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/series/scatterSeries"},"ScatterSeries")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/series/lineSeries"},"LineSeries")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/series/barSeries"},"BarSeries"))),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)(m,{mdxType:"DataSeriesPoint"}),(0,r.kt)("h2",{id:"2-rangeseriespoint"},"2. RangeSeriesPoint"),(0,r.kt)("h3",{id:"definition-1"},"Definition"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"In Typescript:")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Array<{x:number,y1:number,y2:number}>"),(0,r.kt)("br",null)),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Explanation:")," Array of points, each point must have three coordinates as a ",(0,r.kt)("inlineCode",{parentName:"p"},"number"),", x for horizontal ",(0,r.kt)("a",{parentName:"p",href:"/axes/intro"},"Axis")," and y1,y2 to specify the range for vertical ",(0,r.kt)("a",{parentName:"p",href:"/axes/intro"},"Axis"),(0,r.kt)("br",null),"\n",(0,r.kt)("strong",{parentName:"p"},"Example :"),"\n",(0,r.kt)("inlineCode",{parentName:"p"},"[ { x: 1, y1: 0, y2: 2 }, { x: 2, y1: 2, y2: 3 }, { x: 3, y1: 3, y2: 4 } ]")),(0,r.kt)("h3",{id:"utilities-1"},"Utilities"),(0,r.kt)("p",null,"This type is used in:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"/series/rangeSeries"},"RangeSeries"))),(0,r.kt)("h3",{id:"example-1"},"Example"),(0,r.kt)(y,{mdxType:"DataRangeSeriesPoint"}))}N.isMDXComponent=!0}}]);